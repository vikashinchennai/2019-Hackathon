<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sitecore.Update</name>
    </assembly>
    <members>
        <member name="T:Sitecore.Update.AllowBreakingChangeAttribute">
            <summary>
            Represents a custom attribute that allows to ignore breaking changes found by ApiCheck.
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Sitecore.Update.Shell.Framework.Commands.ShowUpdateInstallationWizard">
            <summary>
            ShowUpdateInstallationWizard
            </summary>
        </member>
        <member name="M:Sitecore.Update.Shell.Framework.Commands.ShowUpdateInstallationWizard.Execute(Sitecore.Shell.Framework.Commands.CommandContext)">
            <summary>
            Execute the command
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Sitecore.Update.UpdateHelper">
            <summary>
            Update helper methods.
            </summary>
        </member>
        <member name="F:Sitecore.Update.UpdateHelper.InstallationLogFileName">
            <summary>
            The installation log file name.
            </summary>
        </member>
        <member name="F:Sitecore.Update.UpdateHelper.BreakingChangesReportFileName">
            <summary>
            The installation log file name.
            </summary>
        </member>
        <member name="F:Sitecore.Update.UpdateHelper.PackagesPath">
            <summary>
            Relative path of Update packages.
            </summary>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.GetPackagePath(System.String)">
            <summary>
            Gets the package path.
            </summary>
            <param name="packageName">Name of the package.</param>
            <returns>The fisical package path.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.GetPackages(System.IO.DirectoryInfo)">
            <summary>
            Gets the packages from package storage.
            </summary>
            <param name="dir">The packages root directory.</param>
            <returns>List of packasges.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.GetFilteredByGroupSource(System.Collections.Generic.List{Sitecore.Update.Installer.ContingencyEntry},System.String[])">
            <summary>
            Gets the filtered by group source.
            </summary>
            <param name="entries">The entries.</param>
            <param name="groupIDs">The group ID.</param>
            <returns>The filtered source.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.GetFilteredByTypeSource(System.Collections.Generic.List{Sitecore.Update.Installer.ContingencyEntry},System.String[])">
            <summary>
            Gets the filtered by type.
            </summary>
            <param name="entries">The entries.</param>
            <param name="typeIDs">The type IDs.</param>
            <returns>The filtered source.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.GetFilteredByLevelSource(System.Collections.Generic.List{Sitecore.Update.Installer.ContingencyEntry},Sitecore.Update.Installer.ContingencyLevel)">
            <summary>
            Gets the filtered by level source.
            </summary>
            <param name="entries">The entries.</param>
            <param name="level">The level.</param>
            <returns>The filtered source</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.GetFilteredSource(System.Collections.Generic.List{Sitecore.Update.Installer.ContingencyEntry},Sitecore.Update.Installer.ContingencyLevel,System.String,System.String[])">
            <summary>
            Gets the filtered source.
            </summary>
            <param name="entries">The entries.</param>
            <param name="level">The level.</param>
            <param name="searchText">The search text.</param>
            <param name="messageTypeIDs">The message type IDs.</param>
            <returns>The filtered source.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.GetFilteredSource(System.Collections.Generic.List{Sitecore.Update.Installer.ContingencyEntry},System.String)">
            <summary>
            Gets the filtered but search text source.
            </summary>
            <param name="entries">The entries.</param>
            <param name="searchText">The search text.</param>
            <returns>Filtered source.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.ExtractPackageName(System.String)">
            <summary>
            Extracts the name of the package from the path.
            </summary>
            <param name="packagePath">The package path.</param>
            <returns>The package name.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.GetBatchFilePath(System.String)">
            <summary>
            Gets the path to the messages file.
            </summary>
            <param name="historyPath">The history path.</param>
            <returns>The path to the messages file.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.GetFileOperationLogPath(System.String)">
            <summary>
            Gets the file operation log path.
            </summary>
            <param name="historyPath">The history path.</param>
            <returns>Path to the log.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.GetInstallationHistoryLogPath(System.String)">
            <summary>
            Gets the installation log path.
            </summary>
            <param name="historyPath">The history path.</param>
            <returns>The log file path.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.GetInstallationLogFilePath(System.String)">
            <summary>
            Gets the installation log file path.
            </summary>
            <param name="historyPath">The history path.</param>
            <returns>The Installation log file path.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.GetMessagesFilePath(System.String)">
            <summary>
            Gets the path to the messages file.
            </summary>
            <param name="historyPath">The history path.</param>
            <returns>The path to the messages file.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.GetBreakingChangesFilePath(System.String)">
            <summary>
            
            </summary>
            <param name="historyPath">The history path.</param>
            <returns>The path to the messages file.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.GroupEntries(System.Collections.Generic.List{Sitecore.Update.Installer.ContingencyEntry})">
            <summary>
            Groups the entries.
            </summary>
            <param name="entries">The entries.</param>
            <returns>The groupped by level count of messages.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.GroupEntriesByMessageType(System.Collections.Generic.List{Sitecore.Update.Installer.ContingencyEntry})">
            <summary>
            Groups the type of the entries by message.
            </summary>
            <param name="entries">The entries.</param>
            <returns>The groupped entries.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.Install(Sitecore.Update.PackageInstallationInfo,log4net.ILog,System.String@)">
            <summary>
            Installs the specified package with specified options.
            </summary>
            <param name="info">The installation information.</param>
            <param name="installationProcessLogger">The installation process logger.</param>
            <param name="historyPath">The history path.</param>
            <returns>The list of installation messages.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.Install(Sitecore.Update.PackageInstallationInfo,Sitecore.Install.Framework.IProcessingContext)">
            <summary>
            Installs the specified package with specified options.
            </summary>
            <param name="info">The installation information.</param>
            <param name="context">The context.</param>
            <returns>
            The list of installation messages.
            </returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.LoadEntries(System.String)">
            <summary>
            Loads the contingency entries.
            </summary>
            <param name="historyPath">The history path.</param>
            <returns>The contingency entries.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.LoadConfigurationFilesConflictsEntries(System.String)">
            <summary>
            Loads the list of entries related to configuration files conflicts.
            </summary>
            <param name="historyPath">The installation history path.</param>
            <returns>The entries related to configuration files conflicts.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.LoadInstallationLog(System.String)">
            <summary>
            Loads the installation log.
            </summary>
            <param name="historyFolderPath">Path to the history folder.</param>
            <returns>The list of installation messages.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.LoadMetadata(System.String)">
            <summary>
            Loads the metadata.
            </summary>
            <param name="packagePath">The package path.</param>
            <returns>The package meta data.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.GetHistoryFolderName(System.String)">
            <summary>
            Gets the name of the history folder.
            </summary>
            <param name="historyPath">The history path.</param>
            <returns>The name of the installation history folder.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.GetHistoryPath(System.String)">
            <summary>
            Gets the history path.
            </summary>
            <param name="historyFolderName">Name of the history folder.</param>
            <returns>The installation history folder location.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.GetLogLink(System.String)">
            <summary>
            Gets the log link.
            </summary>
            <param name="historyPath">The history path.</param>
            <returns>The path to the log file.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.SaveInstallationMessages(System.Collections.Generic.List{Sitecore.Update.Installer.ContingencyEntry},System.String)">
            <summary>
            Saves the installation log.
            </summary>
            <param name="entries">The entries.</param>
            <param name="historyPath">The history path.</param>
            <returns>The installation messages log path.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.GetFileName(System.String)">
            <summary>
            Gets the file name from message description.
            </summary>
            <param name="shortDescription">The message short description.</param>
            <returns>The file name.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.ConvertStringParamToBool(System.String)">
            <summary>
            Converts string <paramref name="param"/> to boolean value.
            </summary>
            <param name="param">The string parameter.</param>
            <returns><c>true</c> if <paramref name="param"/> is equal to "1", otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.ConvertBoolToStringParam(System.Boolean)">
            <summary>
            Converts boolean <paramref name="value"/> to string.
            </summary>
            <param name="value">The boolean value.</param>
            <returns>String value of boolean <paramref name="value"/>.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateHelper.GetProcessingMode(System.String,System.String)">
            <summary>
            Gets processing mode.
            </summary>
            <param name="installFilesParam">
            The string parameter files only mode.
            </param>
            <param name="installItemsParam">
            The string parameter items only mode.
            </param>
            <returns>
            The <see cref="T:Sitecore.Update.Utils.ProcessingMode"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Update.MessageTypeInfo">
            <summary>
            The message type information.
            </summary>
        </member>
        <member name="P:Sitecore.Update.MessageTypeInfo.Level">
            <summary>
            Gets or sets the level.
            </summary>
            <value>The level.</value>
        </member>
        <member name="P:Sitecore.Update.MessageTypeInfo.MessageCount">
            <summary>
            Gets or sets the message count.
            </summary>
            <value>The message count.</value>
        </member>
        <member name="P:Sitecore.Update.MessageTypeInfo.MessageType">
            <summary>
            Gets or sets the type of the message.
            </summary>
            <value>The type of the message.</value>
        </member>
        <member name="P:Sitecore.Update.MessageTypeInfo.MessageTypeDescription">
            <summary>
            Gets or sets the message type description.
            </summary>
            <value>The message type description.</value>
        </member>
        <member name="T:Sitecore.Update.Package">
            <summary>
            The package Information.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Package.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The package name.</value>
        </member>
        <member name="P:Sitecore.Update.Package.Path">
            <summary>
            Gets or sets the path.
            </summary>
            <value>The package path.</value>
        </member>
        <member name="T:Sitecore.Update.PackageInstallationInfo">
            <summary>
            The package installation information.
            </summary>
        </member>
        <member name="P:Sitecore.Update.PackageInstallationInfo.Action">
            <summary>
            Gets or sets the action.
            </summary>
            <value>The action.</value>
        </member>
        <member name="P:Sitecore.Update.PackageInstallationInfo.Mode">
            <summary>
            Gets or sets the mode.
            </summary>
            <value>The installation mode.</value>
        </member>
        <member name="P:Sitecore.Update.PackageInstallationInfo.ProcessingMode">
            <summary>
            Gets or sets the processing mode.
            </summary>
            <value>The processing mode.</value>
        </member>
        <member name="P:Sitecore.Update.PackageInstallationInfo.Path">
            <summary>
            Gets or sets the path.
            </summary>
            <value>The package path.</value>
        </member>
        <member name="T:Sitecore.Update.UpdateInstallationBase">
            <summary>
            Base class for Update pages.
            </summary>
        </member>
        <member name="F:Sitecore.Update.UpdateInstallationBase.cachedParameters">
            <summary>
            The cached parameters.
            </summary>
        </member>
        <member name="P:Sitecore.Update.UpdateInstallationBase.PageUrl">
            <summary>
            Gets the page URL.
            </summary>
            <value>The page URL.</value>
        </member>
        <member name="P:Sitecore.Update.UpdateInstallationBase.PackageInstallParameters">
            <summary>
            Gets or sets the package install parameters.
            </summary>
        </member>
        <member name="P:Sitecore.Update.UpdateInstallationBase.InstallationHistoryRoot">
            <summary>
            Gets or sets the installation history root.
            </summary>
        </member>
        <member name="P:Sitecore.Update.UpdateInstallationBase.PackagePath">
            <summary>
            Gets or sets the package path.
            </summary>
        </member>
        <member name="M:Sitecore.Update.UpdateInstallationBase.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:Sitecore.Update.UpdateInstallationBase.ExtractQueryParameters">
            <summary>
            Extracts the parameters from Query string.
            </summary>
        </member>
        <member name="M:Sitecore.Update.UpdateInstallationBase.CheckSecurity">
            <summary>
            Checks the security.
            </summary>
            <returns><c>true</c> if page is running in secure context.</returns>
        </member>
        <member name="T:Sitecore.Update.UpdateInstallationWizard">
            <summary>
            Update package Installation Wizard.
            </summary>
        </member>
        <member name="F:Sitecore.Update.UpdateInstallationWizard.WizardsPages">
            <summary>
            The key-value pairs of the wizard states and corresponding controls.
            </summary>
        </member>
        <member name="M:Sitecore.Update.UpdateInstallationWizard.GetWizardPage(Sitecore.Update.Wizard.State.WizardState)">
            <summary>
            Gets the wizard page by the wizard state.
            </summary>
            <param name="state">The wizard state.</param>
            <returns>The instance of the <see cref="T:Sitecore.Update.UpdateWizardPage"/> class.</returns>
        </member>
        <member name="F:Sitecore.Update.UpdateInstallationWizard.PageControlId">
            <summary>
            The ID of the wizard page control.
            </summary>
        </member>
        <member name="P:Sitecore.Update.UpdateInstallationWizard.PageUrl">
            <summary>
            Gets the page URL.
            </summary>
            <value>The page URL.</value>
        </member>
        <member name="P:Sitecore.Update.UpdateInstallationWizard.ActiveState">
            <summary>
            Gets or sets the active step number.
            </summary>
            <value>The active step number.</value>
        </member>
        <member name="P:Sitecore.Update.UpdateInstallationWizard.HasPostInstallationErrors">
            <summary>
            Gets or sets a value indicating whether this instance has post installation errors.
            </summary>
            <value>
             <c>true</c> if post installation errors occured during installation; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.Update.UpdateInstallationWizard.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"/> event to initialize the page.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Sitecore.Update.UpdateInstallationWizard.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs" /> object that contains the event data.</param>
        </member>
        <member name="M:Sitecore.Update.UpdateInstallationWizard.ExtractQueryParameters">
            <summary>
            Extracts the parameters from Query string.
            </summary>
        </member>
        <member name="M:Sitecore.Update.UpdateInstallationWizard.InstallationWizard_ActiveStepChanged">
            <summary>
            Initialize controls for wizard step.
            </summary>
        </member>
        <member name="M:Sitecore.Update.UpdateInstallationWizard.MoveTo(Sitecore.Update.Wizard.State.WizardState)">
            <summary>
            Redirects to the specified withart page.
            </summary>
        </member>
        <member name="M:Sitecore.Update.UpdateInstallationWizard.GetStateUrl(Sitecore.Update.Wizard.State.WizardState)">
            <summary>
            Gets the state URL.
            </summary>
            <param name="state">The state.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.UpdateInstallationWizard.InstallationWizard_BackButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles the FinishButtonClick event of the Wizard1 control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.Update.UpdateInstallationWizard.CopyProperties(Sitecore.Update.UpdateWizardPage)">
            <summary>
            Copies properties from current page to the wizard.
            </summary>
            <param name="currentPage">The current page.</param>
        </member>
        <member name="M:Sitecore.Update.UpdateInstallationWizard.InstallationWizard_NextButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles the StartButtonClick event of the Wizard1 control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Update.UpdateInstallationWizard.CheckPackagePath(System.String)">
            <summary>
            Checks that package path is valid.
            </summary>
        </member>
        <member name="M:Sitecore.Update.UpdateInstallationWizard.Install(Sitecore.Update.Wizard.Events.PackageInstallEventArgs)">
            <summary>
            Redirects to Installation form with specified installation mode.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Update.UpdateInstallationWizard.ShowException(System.String)">
            <summary>
            Shows the exception.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Update.UpdateInstallationWizard.ShowException(System.Exception)">
            <summary>
            Shows the exception.
            </summary>
            <param name="ex">The exception.</param>
        </member>
        <member name="M:Sitecore.Update.UpdateInstallationWizard.InitializeFormControls">
            <summary>
            Initializes the form controls.
            </summary>
        </member>
        <member name="F:Sitecore.Update.UpdateInstallationWizard.form1">
            <summary>
            form1 control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.UpdateInstallationWizard.lblError">
            <summary>
            lblError control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.UpdateInstallationWizard.lblHeader">
            <summary>
            lblHeader control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.UpdateInstallationWizard.pnlContent">
            <summary>
            pnlContent control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.UpdateInstallationWizard.WizardFooterContainer">
            <summary>
            WizardFooterContainer control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.UpdateInstallationWizard.btnBack">
            <summary>
            btnBack control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.UpdateInstallationWizard.btnNext">
            <summary>
            btnNext control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="T:Sitecore.Update.UpdateWizardPage">
            <summary>
            The base class for update wizard pages.
            </summary>
        </member>
        <member name="P:Sitecore.Update.UpdateWizardPage.PackagePath">
            <summary>
            Gets or sets the package path.
            </summary>
            <value>The package path.</value>
        </member>
        <member name="P:Sitecore.Update.UpdateWizardPage.InstallationHistoryRoot">
            <summary>
            Gets or sets the installation history root.
            </summary>
            <value>The installation history root.</value>
        </member>
        <member name="P:Sitecore.Update.UpdateWizardPage.UpgradeAction">
            <summary>
            Gets or sets the upgrade action.
            </summary>
            <value>The upgrade action.</value>
        </member>
        <member name="P:Sitecore.Update.UpdateWizardPage.HasPostInstallationErrors">
            <summary>
            Gets or sets a value indicating whether this instance has post installation errors.
            </summary>
            <value>
             <c>true</c> if post installation errors occured during installation; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Update.UpdateWizardPage.InstallationResultOnlyMode">
            <summary>
            Gets or sets a value indicating whether the page should be rendered in installation result only mode (no navigation controls are enabled).
            </summary>
            <value>
            <c>true</c> if the page should be rendered in installation result only mode (no navigation controls are enabled); otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.Update.UpdateWizardPage.GetSitecoreVersion">
            <summary>
            Gets the sitecore version.
            </summary>
            <returns>The object that contains information about Sitecore version.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateWizardPage.GetVersionResolver">
            <summary>
            Gets the version resolver.
            </summary>
            <returns>The implementation of the ISitecoreVersionResolver.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateWizardPage.GenerateUpdatePackagePath(System.IO.FileInfo,Sitecore.SitecoreVersionInfo)">
            <summary>
            Generates the update package path basing on the aggregatred package name and source Sitecore version.
            </summary>
            <param name="aggregatedPackageFileInfo">The aggregated package file information.</param>
            <param name="sourceSitecoreVersion">The source sitecore version.</param>
            <returns></returns>
        </member>
        <member name="E:Sitecore.Update.UpdateWizardPage.PackageInstall">
            <summary>
            Occurs when update wizard start package installation.
            </summary>
        </member>
        <member name="M:Sitecore.Update.UpdateWizardPage.OnPackageInstall(Sitecore.Update.Wizard.Events.PackageInstallEventArgs)">
            <summary>
            Raises the <see cref="E:Sitecore.Update.UpdateWizardPage.PackageInstall"/> event.
            </summary>
            <param name="e">An <see cref="T:Sitecore.Update.Wizard.Events.PackageInstallEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:Sitecore.Update.UpdateWizardPage.LableHeader">
            <summary>
            The header text control.
            </summary>
        </member>
        <member name="P:Sitecore.Update.UpdateWizardPage.ButtonNext">
            <summary>
            The next button control.
            </summary>
        </member>
        <member name="P:Sitecore.Update.UpdateWizardPage.ButtonBack">
            <summary>
            The back button control.
            </summary>
        </member>
        <member name="M:Sitecore.Update.UpdateWizardPage.Next">
            <summary>
            Moves update wizard to the next state.
            </summary>
            <returns>The wizard next state.</returns>
        </member>
        <member name="M:Sitecore.Update.UpdateWizardPage.Previous">
            <summary>
            Moves update wizard to the previous state.
            </summary>
            <returns>The wizard previous state.</returns>
        </member>
        <member name="T:Sitecore.Update.Wizard.ChooseAppropriateUpdatePackagePage">
            <summary>
            The page of the UpdateINstallationWizard that aloows to choose appropriate package from aggregated one.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.ChooseAppropriateUpdatePackagePage.OnLoad(System.EventArgs)">
            <summary>
            Handles the Load event of the Page control.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.ChooseAppropriateUpdatePackagePage.InitliazeActions(Sitecore.Update.Update.Engine.AggregatedUpdatePackageEntryInfo[])">
            <summary>
            Initliazes the actions.
            </summary>
            <param name="entries">The entries.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.ChooseAppropriateUpdatePackagePage.GetSelectedSource">
            <summary>
            Gets the selected source.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.ChooseAppropriateUpdatePackagePage.Next">
            <summary>
            Moves update wizard to the next state.
            </summary>
            <returns>The wizard next state.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.ChooseAppropriateUpdatePackagePage.Previous">
            <summary>
            Moves update wizard to the previous state.
            </summary>
            <returns>The wizard previous state.</returns>
        </member>
        <member name="F:Sitecore.Update.Wizard.ChooseAppropriateUpdatePackagePage.lblHeader">
            <summary>
            lblHeader control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.ChooseAppropriateUpdatePackagePage.ActionsList">
            <summary>
            ActionsList control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="T:Sitecore.Update.Wizard.Events.PackageInstallEventArgs">
            <summary>
            The package install event arguments.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.Events.PackageInstallEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Wizard.Events.PackageInstallEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Wizard.Events.PackageInstallEventArgs.Action">
            <summary>
            Gets or sets the upgrade action.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Wizard.Events.PackageInstallEventArgs.CleanupEventQueue">
            <summary>
            Gets or sets a value indicating whether Event Queue should be cleaned up before installation.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Wizard.Events.PackageInstallEventArgs.CleanupHistory">
            <summary>
            Gets or sets a value indicating whether History table should be cleaned up before installation.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Wizard.Events.PackageInstallEventArgs.InstallationResultOnlyMode">
            <summary>
            Gets or sets a value indicating whether installation result should be shown without navigation buttons.
            </summary>
            <value>
            <c>true</c> if installation result should be shown without navigation buttons; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Update.Wizard.Events.PackageInstallEventArgs.InstallationHistoryFolder">
            <summary>
            Gets or sets the installation history folder name.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Wizard.Events.PackageInstallEventArgs.Mode">
            <summary>
            Gets or sets the installation mode.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Wizard.Events.PackageInstallEventArgs.PackageName">
            <summary>
            Gets or sets the package name.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Wizard.Events.PackageInstallEventArgs.ProcessingMode">
            <summary>
            Gets or sets the processing mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.Events.PackageInstallEventArgs.TryParseFromQueryString(System.String,Sitecore.Update.Wizard.Events.PackageInstallEventArgs@)">
            <summary>
            Makes an attempt to create <see cref="T:Sitecore.Update.Wizard.Events.PackageInstallEventArgs"/> parsing the query string
            </summary>
            <param name="queryString">
            The query string.
            </param>
            <param name="result">
            The result.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.Events.PackageInstallEventArgs.ToQueryString">
            <summary>
            Converts this instance to a string that can be used as a query string in a URL.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that can be used as a query string in a URL.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.Events.PackageInstallEventArgs.ToUrlStringParameters">
            <summary>
            Converts this instance to a <see cref="T:System.Collections.Specialized.NameValueCollection"/> with filled query parameters.
            </summary>
            <returns>
            The <see cref="T:System.Collections.Specialized.NameValueCollection"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.Events.PackageInstallEventArgs.TryParseBoolean(Sitecore.Text.UrlString,System.String,System.Boolean@)">
            <summary>Tries to parse boolean value from the URL string.</summary>
            <param name="urlString">The URL string.</param>
            <param name="keyName">The key name.</param>
            <param name="result">The result.</param>
            <returns>
            <c>True</c>, if conversion was successful; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.Events.PackageInstallEventArgs.TryParseEnum``1(Sitecore.Text.UrlString,System.String,System.Boolean,``0@)">
            <summary>
            Tries to parse <c>enumeration</c> value of type <typeparamref name="T"/>
            from the URL string.
            </summary>
            <param name="urlString">The url string.</param>
            <param name="keyName">The key name.</param>
            <param name="isFlag">If true, <see cref="M:System.Enum.IsDefined(System.Type,System.Object)"/> will not be invoked.</param>
            <param name="result">The result.</param>
            <typeparam name="T">The enumeration type.</typeparam>
            <returns>
            <c>True</c>, if conversion was successful; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Sitecore.Update.Wizard.Events.PackageInstallEventArgs.UrlParameters">
            <summary>
            The URL parameters.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Wizard.Events.PackageInstallEventArgs.UrlParameters.Action">
            <summary>
            The constant for property Action in URL query string.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Wizard.Events.PackageInstallEventArgs.UrlParameters.CleanupEventQueue">
            <summary>
            The constant for property CleanupEventQueue in URL query string.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Wizard.Events.PackageInstallEventArgs.UrlParameters.CleanupHistory">
            <summary>
            The constant for property CleanupHistory in URL query string.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Wizard.Events.PackageInstallEventArgs.UrlParameters.InstallationHistoryFolder">
            <summary>
            The constant for property InstallationHistoryFolder in URL query string.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Wizard.Events.PackageInstallEventArgs.UrlParameters.InstallMode">
            <summary>
            The constant for property Mode in URL query string.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Wizard.Events.PackageInstallEventArgs.UrlParameters.PackageName">
            <summary>
            The constant for property PackageName in URL query string.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Wizard.Events.PackageInstallEventArgs.UrlParameters.ProcessingMode">
            <summary>
            The constant for property ProcessingMode in URL query string.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Wizard.Events.PackageInstallEventArgs.UrlParameters.InstallationResultOnlyMode">
            <summary>
            The installation result only mode
            </summary>
        </member>
        <member name="T:Sitecore.Update.Wizard.Exceptions.PackageLoadException">
            <summary>
            Represents an exception that occurs during package upload.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.Exceptions.PackageLoadException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Wizard.Exceptions.PackageLoadException"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.Exceptions.PackageLoadException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Wizard.Exceptions.PackageLoadException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.Exceptions.PackageLoadException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Wizard.Exceptions.PackageLoadException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="T:Sitecore.Update.Wizard.FixInstallationErrorsPage">
            <summary>
            Shows rhe page with link to the batch file.
            </summary>
            <summary>
            FixInstallationErrorsPage class.
            </summary>
            <remarks>
            Auto-generated class.
            </remarks>
        </member>
        <member name="M:Sitecore.Update.Wizard.FixInstallationErrorsPage.Page_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the Page control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.FixInstallationErrorsPage.Next">
            <summary>
            Moves update wizard to the next state.
            </summary>
            <returns>The wizard next state.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.FixInstallationErrorsPage.Previous">
            <summary>
            Moves update wizard to the previous state.
            </summary>
            <returns>The wizard previous state.</returns>
        </member>
        <member name="F:Sitecore.Update.Wizard.FixInstallationErrorsPage.BatchFileLocation">
            <summary>
            BatchFileLocation control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="T:Sitecore.Update.Wizard.InstallationLog">
            <summary>
            Control that sows the installation log
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationLog.Page_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the Page control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationLog.logPanel">
            <summary>
            logPanel control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="T:Sitecore.Update.Wizard.InstallationResult">
            <summary>
            Shows the installation result.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.BreakingChangeMessageGroup">
            <summary>
            The breaking change message type
            </summary>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.MoreInfoLink">
            <summary>
            The "more info" link near breaking changes message
            </summary>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.levelWeights">
            <summary>
            Weights is contingency levels.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Wizard.InstallationResult.SortColumn">
            <summary>
            Gets or sets the sort column.
            </summary>
            <value>The sort column.</value>
        </member>
        <member name="P:Sitecore.Update.Wizard.InstallationResult.Entries">
            <summary>
            Gets or sets the entries.
            </summary>
            <value>The contingency entries.</value>
        </member>
        <member name="P:Sitecore.Update.Wizard.InstallationResult.SearchText">
            <summary>
            Gets the search text.
            </summary>
            <value>The search text.</value>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.IsBreakingChangesPresent">
            <summary>
            Check weather breaking change message type present in <see cref="T:Sitecore.Update.Installer.ContingencyEntry"/> entries
            </summary>
            <returns></returns>
        </member>
        <member name="P:Sitecore.Update.Wizard.InstallationResult.MessageTypes">
            <summary>
            Gets the types of the message to be filtered.
            </summary>
            <value>The types of the message to filter.</value>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.RaisePostBackEvent(System.String)">
            <summary>
            When implemented by a class, enables a server control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A <see cref="T:System.String"/> that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.OnLoad(System.EventArgs)">
            <summary>
            Handles the Load event of the Page control.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.DownloadInstallationLog(System.Object,System.EventArgs)">
            <summary>
            Writes to response the installation log.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.DownloadBreakingChangesReport(System.Object,System.EventArgs)">
            <summary>
            Writes to response the breaking change report.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.MessagesFilter_Changed(System.Object,System.EventArgs)">
            <summary>
            Handles the Changed event of the LevelsFilter control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.LoadEntries">
            <summary>
            Deserialize the entries.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.GetContingencyEntryFilters">
            <summary>
            Gets the contingency entry filters.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.FilterEntries(Sitecore.Update.Installer.ContingencyEntry[],Sitecore.Update.Installer.IContingencyEntryFilter[])">
            <summary>
            Filters the entries.
            </summary>
            <param name="entries">The entries.</param>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.BtnSearchClear_Click(System.Object,System.Web.UI.ImageClickEventArgs)">
            <summary>
            Handles the clear search operation event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Web.UI.ImageClickEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.PageSize_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SelectedIndexChanged event of the PageSize control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.BtnSearch_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the search click event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.ResultGrid_RowDataBound(System.Object,System.Web.UI.WebControls.GridViewRowEventArgs)">
            <summary>
            Handles the RowDataBound event of the ResultGrid control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Web.UI.WebControls.GridViewRowEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.ResultGrid_RowCreated(System.Object,System.Web.UI.WebControls.GridViewRowEventArgs)">
            <summary>
            Handles the RowCreated event of the ResultGrid control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Web.UI.WebControls.GridViewRowEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.ResultGrid_Sorting(System.Object,System.Web.UI.WebControls.GridViewSortEventArgs)">
            <summary>
            Handles the Sorting event of the ResultGrid control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Web.UI.WebControls.GridViewSortEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.ResultGrid_Sorted(System.Object,System.EventArgs)">
            <summary>
            Handles the Sorted event of the ResultGrid control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.ResultGrid_PageIndexChanging(System.Object,System.Web.UI.WebControls.GridViewPageEventArgs)">
            <summary>
            Handles the PageIndexChanging event of the ResultGrid control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Web.UI.WebControls.GridViewPageEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.ResultGrid_PageIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the PageIndexChanged event of the ResultGrid control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.GetDirection(System.String)">
            <summary>
            Gets the direction.
            </summary>
            <param name="name">The sorting column name.</param>
            <returns>The Sort direction.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.SetDirection(System.String,System.Web.UI.WebControls.SortDirection)">
            <summary>
            Sets the direction.
            </summary>
            <param name="name">The name of sorting column.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.GetSortColumnIndex">
            <summary>
            Gets the index of the column to be sorted.
            </summary>
            <returns>The column number.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.AddSortImage(System.Int32,System.Web.UI.WebControls.GridViewRow)">
            <summary>
            Adds the sorting image to the sorting column.
            </summary>
            <param name="columnIndex">Index of the column.</param>
            <param name="headerRow">The DataGrid header row.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.BindGrid(System.Collections.Generic.List{Sitecore.Update.Installer.ContingencyEntry})">
            <summary>
            Binds the data grid.
            </summary>
            <param name="entries">The messages.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.InitializePageControls(System.Collections.Generic.List{Sitecore.Update.Installer.ContingencyEntry})">
            <summary>
            Initializes the page controls.
            </summary>
            <param name="entries">The message entries.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.ShowInformationText(System.Boolean,System.Collections.Generic.List{Sitecore.Update.Installer.ContingencyEntry})">
            <summary>
            Shows the information text.
            </summary>
            <param name="isPreview">if set to <c>true</c> than package has been checked for conflicts.</param>
            <param name="entries">The Contingency entries.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.GetInformationCSSClass(System.Collections.Generic.Dictionary{Sitecore.Update.Installer.ContingencyLevel,System.Int32})">
            <summary>
            Gets the information CSS class.
            </summary>
            <param name="groups">The message groups.</param>
            <returns>The name  of the CSS class.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.GetProblemsDescription(System.Collections.Generic.Dictionary{Sitecore.Update.Installer.ContingencyLevel,System.Int32},System.Boolean)">
            <summary>
            Gets the messages description.
            </summary>
            <param name="groups">The message groups.</param>
            <param name="includeAll">if set to <c>true</c> all messages fill be included.</param>
            <returns>The description text.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.GetGeneralStatisticsText(System.Collections.Generic.List{Sitecore.Update.Installer.ContingencyEntry})">
            <summary>
            Gets the general statistics text.
            </summary>
            <param name="entries">The entries.</param>
            <returns>The statistics  forfatted text.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.InitializeGroupList(System.Collections.Generic.List{Sitecore.Update.Installer.ContingencyEntry})">
            <summary>
            Initializes the group list.
            </summary>
            <param name="entries">The contingency entries.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.ShowResultPanel">
            <summary>
            Shows the result panel.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.Next">
            <summary>
            Moves update wizard to the next state.
            </summary>
            <returns>The wizard next state.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallationResult.Previous">
            <summary>
            Moves update wizard to the previous state.
            </summary>
            <returns>The wizard previous state.</returns>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.MANAGER">
            <summary>
            MANAGER control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.InformationPanel">
            <summary>
            InformationPanel control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.lblInformation">
            <summary>
            lblInformation control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.warningText">
            <summary>
            warningText control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.DownloadBCPanel">
            <summary>
            DownloadBCPanel control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.DownloadBCButton">
            <summary>
            DownloadBCButton control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.hidePanel">
            <summary>
            hidePanel control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.btnHide">
            <summary>
            btnHide control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.ResultPanel">
            <summary>
            ResultPanel control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.UpdatePanel2">
            <summary>
            UpdatePanel2 control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.TxtSearchText">
            <summary>
            TxtSearchText control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.BtnSearch">
            <summary>
            BtnSearch control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.MessageTypesFilterPanel">
            <summary>
            MessageTypesFilterPanel control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.UpdatePanel1">
            <summary>
            UpdatePanel1 control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.MessagesFilter">
            <summary>
            MessagesFilter control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.ResultGridUpdatePanel">
            <summary>
            ResultGridUpdatePanel control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.ResultGrid">
            <summary>
            ResultGrid control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.generalStatisticsText">
            <summary>
            generalStatisticsText control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.DownloadPanel">
            <summary>
            DownloadPanel control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.DownloadLink">
            <summary>
            DownloadLink control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.additionalInformation">
            <summary>
            additionalInformation control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.FeedbackPanel">
            <summary>
            FeedbackPanel control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.FeedbackLink">
            <summary>
            FeedbackLink control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallationResult.Spacer">
            <summary>
            Spacer control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="T:Sitecore.Update.Wizard.Workers.Aggregate">
            <summary>
            The Aggregate worker that execute several workers in a row.
            </summary>
            <seealso cref="T:Sitecore.Update.Wizard.Workers.JobWorker" />
        </member>
        <member name="F:Sitecore.Update.Wizard.Workers.Aggregate._workers">
            <summary>
            The inner workers.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Wizard.Workers.Aggregate._statusFilePath">
            <summary>
            The status file path.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Wizard.Workers.Aggregate._historyRootPath">
            <summary>
            The history root path.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.Aggregate.#ctor(System.String,System.String,Sitecore.Update.Wizard.Workers.WorkerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Wizard.Workers.Aggregate" /> class.
            </summary>
            <param name="statusFilePath">The status file path.</param>
            <param name="historyRootPath">The history root path.</param>
            <param name="context">The job data.</param>
        </member>
        <member name="P:Sitecore.Update.Wizard.Workers.Aggregate.HistoryRootPath">
            <summary>
            Gets the history root path.
            </summary>
            <value>
            The history root path.
            </value>
        </member>
        <member name="P:Sitecore.Update.Wizard.Workers.Aggregate.StatusFilePath">
            <summary>
            Gets the status file path.
            </summary>
            <value>
            The status file path.
            </value>
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.Aggregate.AddWorker(Sitecore.Update.Wizard.Workers.JobWorker)">
            <summary>
            Adds the worker.
            </summary>
            <param name="worker">The worker.</param>
            <exception cref="T:System.Exception">Cannot add worker that has an own context. Having such worker prevents from aggregating worker messages.</exception>
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.Aggregate.DoExecute">
            <summary>
            Performs the real work.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.Aggregate.NotifyStarted">
            <summary>
            Executed when the first worker has started to execute.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.Aggregate.NotifyFinished">
            <summary>
            Executed when the last worker has finished its work.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.Aggregate.NotifyFailed(System.Exception)">
            <summary>
            Executed when worker is unexpectedly failed and the job cannot continue.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.Aggregate.SaveContingencyEntries">
            <summary>
            Saves the contingency entries.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.Aggregate.SaveLogMessages">
            <summary>
            Saves the log messages.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Wizard.Workers.CleanupEventQueue">
            <summary>
            Cleanups the EventQueue.
            </summary>
            <seealso cref="T:Sitecore.Update.Wizard.Workers.JobWorker" />
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.CleanupEventQueue.#ctor(Sitecore.Update.Wizard.Workers.WorkerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Wizard.Workers.CleanupEventQueue"/> class.
            </summary>
            <param name="context">The job data.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.CleanupEventQueue.DoExecute">
            <summary>
            Performs the real work.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Wizard.Workers.CleanupHistory">
            <summary>
            Cleanups the database history data.
            </summary>
            <seealso cref="T:Sitecore.Update.Wizard.Workers.JobWorker" />
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.CleanupHistory.#ctor(Sitecore.Update.Wizard.Workers.WorkerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Wizard.Workers.CleanupHistory"/> class.
            </summary>
            <param name="context">The job data.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.CleanupHistory.DoExecute">
            <summary>
            Performs the real work.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Wizard.Workers.InstallUpdatePackage">
            <summary>
            Installs the update package.
            </summary>
            <seealso cref="T:Sitecore.Update.Wizard.Workers.JobWorker" />
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.InstallUpdatePackage.#ctor(Sitecore.Update.PackageInstallationInfo,Sitecore.Install.Framework.IProcessingContext,Sitecore.Update.Wizard.Workers.WorkerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Wizard.Workers.InstallUpdatePackage"/> class.
            </summary>
            <param name="info">The information.</param>
            <param name="processingContext">The processing context.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Update.Wizard.Workers.InstallUpdatePackage.InstallationInfo">
            <summary>
            Gets the installation information.
            </summary>
            <value>
            The installation information.
            </value>
        </member>
        <member name="P:Sitecore.Update.Wizard.Workers.InstallUpdatePackage.ProcessingContext">
            <summary>
            Gets the processing context.
            </summary>
            <value>
            The processing context.
            </value>
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.InstallUpdatePackage.FinalizeWork">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.InstallUpdatePackage.DoExecute">
            <summary>
            Performs the real work.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Wizard.Workers.JobWorker">
            <summary>
            The base class for all workers.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.JobWorker.#ctor(Sitecore.Update.Wizard.Workers.WorkerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Wizard.Workers.JobWorker"/> class.
            </summary>
            <param name="context">The job data.</param>
        </member>
        <member name="P:Sitecore.Update.Wizard.Workers.JobWorker.Context">
            <summary>
            Gets the context.
            </summary>
            <value>
            The job context.
            </value>
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.JobWorker.Execute">
            <summary>
            Executes the job.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.JobWorker.FinalizeWork">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.JobWorker.DoExecute">
            <summary>
            Performs the real work.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.JobWorker.AddMessage(System.String)">
            <summary>
            Helper method to simplify the adding message to the context.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.JobWorker.AddException(System.Exception)">
            <summary>
            Helper method to simplify the adding exception to the context.
            </summary>
            <param name="ex">The exception.</param>
        </member>
        <member name="T:Sitecore.Update.Wizard.Workers.WorkerContext">
            <summary>
            The worker context.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Wizard.Workers.WorkerContext._messages">
            <summary>
            The job messages.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Wizard.Workers.WorkerContext._exceptions">
            <summary>
            The exceptions that occurred during worker execution.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Wizard.Workers.WorkerContext._contingencyEntries">
            <summary>
            The contingency entries
            </summary>
        </member>
        <member name="P:Sitecore.Update.Wizard.Workers.WorkerContext.Messages">
            <summary>
            Gets the messages.
            </summary>
            <value>
            The messages.
            </value>
        </member>
        <member name="P:Sitecore.Update.Wizard.Workers.WorkerContext.Exceptions">
            <summary>
            Gets the exceptions.
            </summary>
            <value>
            The exceptions.
            </value>
        </member>
        <member name="P:Sitecore.Update.Wizard.Workers.WorkerContext.ContingencyEntries">
            <summary>
            Gets the contingency entries.
            </summary>
            <value>
            The contingency entries.
            </value>
        </member>
        <member name="P:Sitecore.Update.Wizard.Workers.WorkerContext.ProcessedCommandsCount">
            <summary>
            Gets or sets the processed commands count.
            </summary>
            <value>
            The processed commands count.
            </value>
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.WorkerContext.GetLatestMessage">
            <summary>
            Gets the latest message.
            </summary>
            <returns>The messages added by the worker.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.WorkerContext.AddMessage(System.String)">
            <summary>
            Adds the message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.WorkerContext.AddMessage(System.String,System.Boolean)">
            <summary>
            Adds the message.
            </summary>
            <param name="message">The message.</param>
            <param name="isCommand">if set to <c>true</c> the message is coming from the installation command and needs to be counted.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.WorkerContext.AddContingencyEntries(System.Collections.Generic.IEnumerable{Sitecore.Update.Installer.ContingencyEntry})">
            <summary>
            Adds the contingency entries.
            </summary>
            <param name="entries">The entries.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.WorkerContext.AddException(System.Exception)">
            <summary>
            Adds the exception.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="P:Sitecore.Update.Wizard.Workers.WorkerContext.Logger">
            <summary>
            Get the implementation behind this wrapper object.
            </summary>
            <value>
            The <see cref="T:log4net.spi.ILogger" /> object that in implementing this object.
            </value>
            <remarks>
            The <see cref="T:log4net.spi.ILogger" /> object that in implementing this
            object. The <c>Logger</c> object may not
            be the same object as this object because of logger decorators.
            This gets the actual underlying objects that is used to process
            the log events.
            </remarks>
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.WorkerContext.Debug(System.Object)">
            <summary>
            Logs a message object with the <see cref="F:log4net.spi.Level.DEBUG" /> level.
            </summary>
            <param name="message">The message object to log.</param>
            <remarks>
            <para>
            This method first checks if this logger is <c>DEBUG</c>
            enabled by comparing the level of this logger with the
            <see cref="F:log4net.spi.Level.DEBUG" /> level. If this logger is
            <c>DEBUG</c> enabled, then it converts the message object
            (passed as parameter) to a string by invoking the appropriate
            <see cref="T:log4net.ObjectRenderer.IObjectRenderer" />. It then
            proceeds to call all the registered appenders in this logger
            and also higher in the hierarchy depending on the value of
            the additivity flag.
            </para>
            <para>
              <b>WARNING</b> Note that passing an <see cref="T:System.Exception" />
            to this method will print the name of the <see cref="T:System.Exception" />
            but no stack trace. To print a stack trace use the
            <see cref="M:log4net.ILog.Debug(System.Object,System.Exception)" /> form instead.
            </para>
            </remarks>
            <seealso cref="M:log4net.ILog.Debug(System.Object,System.Exception)" />
            <seealso cref="P:log4net.ILog.IsDebugEnabled" />
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.WorkerContext.Debug(System.Object,System.Exception)">
            <summary>
            Log a message object with the <see cref="F:log4net.spi.Level.DEBUG" /> level including
            the stack trace of the <see cref="T:System.Exception" /> passed
            as a parameter.
            </summary>
            <param name="message">The message object to log.</param>
            <param name="t">The exception to log, including its stack trace.</param>
            <remarks>
            See the <see cref="M:log4net.ILog.Debug(System.Object)" /> form for more detailed information.
            </remarks>
            <seealso cref="M:log4net.ILog.Debug(System.Object)" />
            <seealso cref="P:log4net.ILog.IsDebugEnabled" />
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.WorkerContext.Info(System.Object)">
            <summary>
            Logs a message object with the <see cref="F:log4net.spi.Level.INFO" /> level.
            </summary>
            <param name="message">The message object to log.</param>
            <remarks>
            <para>
            This method first checks if this logger is <c>INFO</c>
            enabled by comparing the level of this logger with the
            <see cref="F:log4net.spi.Level.INFO" /> level. If this logger is
            <c>INFO</c> enabled, then it converts the message object
            (passed as parameter) to a string by invoking the appropriate
            <see cref="T:log4net.ObjectRenderer.IObjectRenderer" />. It then
            proceeds to call all the registered appenders in this logger
            and also higher in the hierarchy depending on the value of the
            additivity flag.
            </para>
            <para>
              <b>WARNING</b> Note that passing an <see cref="T:System.Exception" />
            to this method will print the name of the <see cref="T:System.Exception" />
            but no stack trace. To print a stack trace use the
            <see cref="M:log4net.ILog.Info(System.Object,System.Exception)" /> form instead.
            </para>
            </remarks>
            <seealso cref="M:log4net.ILog.Info(System.Object,System.Exception)" />
            <seealso cref="P:log4net.ILog.IsInfoEnabled" />
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.WorkerContext.Info(System.Object,System.Exception)">
            <summary>
            Logs a message object with the <c>INFO</c> level including
            the stack trace of the <see cref="T:System.Exception" /> passed
            as a parameter.
            </summary>
            <param name="message">The message object to log.</param>
            <param name="t">The exception to log, including its stack trace.</param>
            <remarks>
            See the <see cref="M:log4net.ILog.Info(System.Object)" /> form for more detailed information.
            </remarks>
            <seealso cref="M:log4net.ILog.Info(System.Object)" />
            <seealso cref="P:log4net.ILog.IsInfoEnabled" />
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.WorkerContext.Warn(System.Object)">
            <summary>
            Log a message object with the <see cref="F:log4net.spi.Level.WARN" /> level.
            </summary>
            <param name="message">The message object to log.</param>
            <remarks>
            <para>
            This method first checks if this logger is <c>WARN</c>
            enabled by comparing the level of this logger with the
            <see cref="F:log4net.spi.Level.WARN" /> level. If this logger is
            <c>WARN</c> enabled, then it converts the message object
            (passed as parameter) to a string by invoking the appropriate
            <see cref="T:log4net.ObjectRenderer.IObjectRenderer" />. It then
            proceeds to call all the registered appenders in this logger
            and also higher in the hierarchy depending on the value of the
            additivity flag.
            </para>
            <para>
              <b>WARNING</b> Note that passing an <see cref="T:System.Exception" />
            to this method will print the name of the <see cref="T:System.Exception" />
            but no stack trace. To print a stack trace use the
            <see cref="M:log4net.ILog.Warn(System.Object,System.Exception)" /> form instead.
            </para>
            </remarks>
            <seealso cref="M:log4net.ILog.Warn(System.Object,System.Exception)" />
            <seealso cref="P:log4net.ILog.IsWarnEnabled" />
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.WorkerContext.Warn(System.Object,System.Exception)">
            <summary>
            Log a message object with the <see cref="F:log4net.spi.Level.WARN" /> level including
            the stack trace of the <see cref="T:System.Exception" /> passed
            as a parameter.
            </summary>
            <param name="message">The message object to log.</param>
            <param name="t">The exception to log, including its stack trace.</param>
            <remarks>
            See the <see cref="M:log4net.ILog.Warn(System.Object)" /> form for more detailed information.
            </remarks>
            <seealso cref="M:log4net.ILog.Warn(System.Object)" />
            <seealso cref="P:log4net.ILog.IsWarnEnabled" />
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.WorkerContext.Error(System.Object)">
            <summary>
            Logs a message object with the <see cref="F:log4net.spi.Level.ERROR" /> level.
            </summary>
            <param name="message">The message object to log.</param>
            <remarks>
            <para>
            This method first checks if this logger is <c>ERROR</c>
            enabled by comparing the level of this logger with the
            <see cref="F:log4net.spi.Level.ERROR" /> level. If this logger is
            <c>ERROR</c> enabled, then it converts the message object
            (passed as parameter) to a string by invoking the appropriate
            <see cref="T:log4net.ObjectRenderer.IObjectRenderer" />. It then
            proceeds to call all the registered appenders in this logger
            and also higher in the hierarchy depending on the value of the
            additivity flag.
            </para>
            <para>
              <b>WARNING</b> Note that passing an <see cref="T:System.Exception" />
            to this method will print the name of the <see cref="T:System.Exception" />
            but no stack trace. To print a stack trace use the
            <see cref="M:log4net.ILog.Error(System.Object,System.Exception)" /> form instead.
            </para>
            </remarks>
            <seealso cref="M:log4net.ILog.Error(System.Object,System.Exception)" />
            <seealso cref="P:log4net.ILog.IsErrorEnabled" />
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.WorkerContext.Error(System.Object,System.Exception)">
            <summary>
            Log a message object with the <see cref="F:log4net.spi.Level.ERROR" /> level including
            the stack trace of the <see cref="T:System.Exception" /> passed
            as a parameter.
            </summary>
            <param name="message">The message object to log.</param>
            <param name="t">The exception to log, including its stack trace.</param>
            <remarks>
            See the <see cref="M:log4net.ILog.Error(System.Object)" /> form for more detailed information.
            </remarks>
            <seealso cref="M:log4net.ILog.Error(System.Object)" />
            <seealso cref="P:log4net.ILog.IsErrorEnabled" />
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.WorkerContext.Fatal(System.Object)">
            <summary>
            Log a message object with the <see cref="F:log4net.spi.Level.FATAL" /> level.
            </summary>
            <param name="message">The message object to log.</param>
            <remarks>
            <para>
            This method first checks if this logger is <c>FATAL</c>
            enabled by comparing the level of this logger with the
            <see cref="F:log4net.spi.Level.FATAL" /> level. If this logger is
            <c>FATAL</c> enabled, then it converts the message object
            (passed as parameter) to a string by invoking the appropriate
            <see cref="T:log4net.ObjectRenderer.IObjectRenderer" />. It then
            proceeds to call all the registered appenders in this logger
            and also higher in the hierarchy depending on the value of the
            additivity flag.
            </para>
            <para>
              <b>WARNING</b> Note that passing an <see cref="T:System.Exception" />
            to this method will print the name of the <see cref="T:System.Exception" />
            but no stack trace. To print a stack trace use the
            <see cref="M:log4net.ILog.Fatal(System.Object,System.Exception)" /> form instead.
            </para>
            </remarks>
            <seealso cref="M:log4net.ILog.Fatal(System.Object,System.Exception)" />
            <seealso cref="P:log4net.ILog.IsFatalEnabled" />
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.WorkerContext.Fatal(System.Object,System.Exception)">
            <summary>
            Log a message object with the <see cref="F:log4net.spi.Level.FATAL" /> level including
            the stack trace of the <see cref="T:System.Exception" /> passed
            as a parameter.
            </summary>
            <param name="message">The message object to log.</param>
            <param name="t">The exception to log, including its stack trace.</param>
            <remarks>
            See the <see cref="M:log4net.ILog.Fatal(System.Object)" /> form for more detailed information.
            </remarks>
            <seealso cref="M:log4net.ILog.Fatal(System.Object)" />
            <seealso cref="P:log4net.ILog.IsFatalEnabled" />
        </member>
        <member name="P:Sitecore.Update.Wizard.Workers.WorkerContext.IsDebugEnabled">
            <summary>
            Checks if this logger is enabled for the <see cref="F:log4net.spi.Level.DEBUG" /> level.
            </summary>
            <value>
            <c>true</c> if this logger is enabled for <see cref="F:log4net.spi.Level.DEBUG" /> events, <c>false</c> otherwise.
            </value>
            <remarks>
            <para>
            This function is intended to lessen the computational cost of
            disabled log debug statements.
            </para>
            <para> For some ILog interface <c>log</c>, when you write:</para>
            <code>
            log.Debug("This is entry number: " + i );
            </code>
            <para>
            You incur the cost constructing the message, string construction and concatenation in
            this case, regardless of whether the message is logged or not.
            </para>
            <para>
            If you are worried about speed (who isn't), then you should write:
            </para>
            <code>
            if (log.IsDebugEnabled)
            {
            log.Debug("This is entry number: " + i );
            }
            </code>
            <para>
            This way you will not incur the cost of parameter
            construction if debugging is disabled for <c>log</c>. On
            the other hand, if the <c>log</c> is debug enabled, you
            will incur the cost of evaluating whether the logger is debug
            enabled twice. Once in <see cref="P:log4net.ILog.IsDebugEnabled" /> and once in
            the <see cref="M:log4net.ILog.Debug(System.Object)" />.  This is an insignificant overhead
            since evaluating a logger takes about 1% of the time it
            takes to actually log. This is the preferred style of logging.
            </para>
            <para>Alternatively if your logger is available statically then the is debug
            enabled state can be stored in a static variable like this:
            </para>
            <code>
            private static readonly bool isDebugEnabled = log.IsDebugEnabled;
            </code>
            <para>
            Then when you come to log you can write:
            </para>
            <code>
            if (isDebugEnabled)
            {
            log.Debug("This is entry number: " + i );
            }
            </code>
            <para>
            This way the debug enabled state is only queried once
            when the class is loaded. Using a <c>private static readonly</c>
            variable is the most efficient because it is a run time constant
            and can be heavily optimised by the JIT compiler.
            </para>
            <para>
            Of course if you use a static readonly variable to
            hold the enabled state of the logger then you cannot
            change the enabled state at runtime to vary the logging
            that is produced. You have to decide if you need absolute
            speed or runtime flexibility.
            </para>
            </remarks>
            <seealso cref="M:log4net.ILog.Debug(System.Object)" />
        </member>
        <member name="P:Sitecore.Update.Wizard.Workers.WorkerContext.IsInfoEnabled">
            <summary>
            Checks if this logger is enabled for the <see cref="F:log4net.spi.Level.INFO" /> level.
            </summary>
            <value>
            <c>true</c> if this logger is enabled for <see cref="F:log4net.spi.Level.INFO" /> events, <c>false</c> otherwise.
            </value>
            <remarks>
            For more information see <see cref="P:log4net.ILog.IsDebugEnabled" />.
            </remarks>
            <seealso cref="M:log4net.ILog.Info(System.Object)" />
            <seealso cref="P:log4net.ILog.IsDebugEnabled" />
        </member>
        <member name="P:Sitecore.Update.Wizard.Workers.WorkerContext.IsWarnEnabled">
            <summary>
            Checks if this logger is enabled for the <see cref="F:log4net.spi.Level.WARN" /> level.
            </summary>
            <value>
            <c>true</c> if this logger is enabled for <see cref="F:log4net.spi.Level.WARN" /> events, <c>false</c> otherwise.
            </value>
            <remarks>
            For more information see <see cref="P:log4net.ILog.IsDebugEnabled" />.
            </remarks>
            <seealso cref="M:log4net.ILog.Warn(System.Object)" />
            <seealso cref="P:log4net.ILog.IsDebugEnabled" />
        </member>
        <member name="P:Sitecore.Update.Wizard.Workers.WorkerContext.IsErrorEnabled">
            <summary>
            Checks if this logger is enabled for the <see cref="F:log4net.spi.Level.ERROR" /> level.
            </summary>
            <value>
            <c>true</c> if this logger is enabled for <see cref="F:log4net.spi.Level.ERROR" /> events, <c>false</c> otherwise.
            </value>
            <remarks>
            For more information see <see cref="P:log4net.ILog.IsDebugEnabled" />.
            </remarks>
            <seealso cref="M:log4net.ILog.Error(System.Object)" />
            <seealso cref="P:log4net.ILog.IsDebugEnabled" />
        </member>
        <member name="P:Sitecore.Update.Wizard.Workers.WorkerContext.IsFatalEnabled">
            <summary>
            Checks if this logger is enabled for the <see cref="F:log4net.spi.Level.FATAL" /> level.
            </summary>
            <value>
            <c>true</c> if this logger is enabled for <see cref="F:log4net.spi.Level.FATAL" /> events, <c>false</c> otherwise.
            </value>
            <remarks>
            For more information see <see cref="P:log4net.ILog.IsDebugEnabled" />.
            </remarks>
            <seealso cref="M:log4net.ILog.Fatal(System.Object)" />
            <seealso cref="P:log4net.ILog.IsDebugEnabled" />
        </member>
        <member name="M:Sitecore.Update.Wizard.Workers.WorkerContext.LoadMessages(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Loads the messages.
            </summary>
            <param name="log">The log.</param>
        </member>
        <member name="T:Sitecore.Update.Wizard.InstallPackage">
            <summary>
            The page that is designed to install the specified update package.
            </summary>
            <seealso cref="T:Sitecore.Update.UpdateInstallationBase" />
            <summary>
            The page that is designed to install the specified update package.
            </summary>
            <seealso cref="T:Sitecore.Update.UpdateInstallationBase" />
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallPackage.NextPageNumber">
            <summary>
            The next page number
            </summary>
        </member>
        <member name="P:Sitecore.Update.Wizard.InstallPackage.FileCommandsCount">
            <summary>
            Gets or sets total count of file commands.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Wizard.InstallPackage.ItemCommandsCount">
            <summary>
            Gets or sets total count of item commands.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Wizard.InstallPackage.ProcessedCommandsCount">
            <summary>
            Gets or sets count of processed commands.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Wizard.InstallPackage.JobHandle">
            <summary>
            Gets or sets the installation job handle.
            </summary>
            <value>
            The job handle.
            </value>
        </member>
        <member name="P:Sitecore.Update.Wizard.InstallPackage.StatusFilePath">
            <summary>
            Gets or sets the name of the status file.
            </summary>
            <value>
            The name of the status file.
            </value>
        </member>
        <member name="P:Sitecore.Update.Wizard.InstallPackage.InstallationHistoryFolder">
            <summary>
            Gets or sets the name of the installation history folder.
            </summary>
            <value>
            The name of the installation history folder.
            </value>
        </member>
        <member name="P:Sitecore.Update.Wizard.InstallPackage.IsPostInstallationStep">
            <summary>
            Gets or sets a value indicating whether current request is a post installation step.
            </summary>
            <value>
              <c>true</c> if current request is post installation step; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Update.Wizard.InstallPackage.TotalCommandsToProcessCount">
            <summary>
            Gets total count of commands.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Wizard.InstallPackage.PageUrl">
            <summary>
            Gets the page URL.
            </summary>
            <value>The page URL.</value>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.Page_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the Page control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.ExecutePostStep(Sitecore.Update.Metadata.MetadataView)">
            <summary>
            Executes the post step.
            </summary>
            <param name="view">The view.</param>
            <exception cref="T:System.Exception">Cannot execute post installation action. Installation log not found.</exception>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.ExecutePostStep(System.Collections.Generic.List{Sitecore.Update.Installer.ContingencyEntry},Sitecore.Update.Metadata.MetadataView,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Executes the post step.
            </summary>
            <param name="entries">The contingency entries.</param>
            <param name="view">The package metadata.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.SaveInstallationLog(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Saves the installation log.
            </summary>
            <param name="logEntries">The log entries.</param>
            <returns>
            The installation history file path.
            </returns>
            <exception cref="T:System.Exception">History path is not set</exception>
            <exception cref="T:System.Exception">History path is not set</exception>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.LoadInstallationLog">
            <summary>
            Loads the installation log.
            </summary>
            <returns>The installation log entries.</returns>
            <exception cref="T:System.Exception">Cannot execute post installation action: cannot process installation log.</exception>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.ShowInstallationLog(System.Collections.Generic.List{System.String})">
            <summary>
            Shows the installation log.
            </summary>
            <param name="entries">The installation log entries.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.HandlePostStepException(Sitecore.Update.Installer.Exceptions.PostStepInstallerException)">
            <summary>
            Handles the post step exception.
            </summary>
            <param name="ex">The exception.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.ExtractQueryParameters">
            <summary>
            Extracts the parameters from Query string.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.CollectInstallationInformation(System.String)">
            <summary>
            Collects the installation information.
            </summary>
            <param name="historyPath">The history path.</param>
            <returns>The list of files with installation information.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.GetStatusFilePath(System.String,Sitecore.Data.ID)">
            <summary>
            Gets the status file path.
            </summary>
            <param name="historyFolderPath">The history folder path.</param>
            <param name="statusFileId">The status file identifier.</param>
            <returns>The path to the installation files status file.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.ExecutePreStepsAndInstall">
            <summary>
            Starts the installation.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.PerformAction">
            <summary>
            Performs the action.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.RecoverInstallationProcess">
            <summary>
            Recovers the installation process.
            </summary>
            <exception cref="T:System.Exception">Cannot recover installation process. Domain has been reloaded and all installation information has been lost. Try to reinstall the package again.</exception>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.FindStatusFile(System.String)">
            <summary>
            Finds the status file.
            </summary>
            <param name="historyPath">The history path.</param>
            <returns>The path to the installation files status file.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.IsRecoverRequest">
            <summary>
            Determines whether current request is the first request after domain has been reloaded.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.RecoverInstallationFromStatusFile(System.String)">
            <summary>
            Recovers the installation from status file.
            </summary>
            <param name="statusFilePath">The status file.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.ShouldExecutePostStep">
            <summary>
            Executes the post step.
            </summary>
            <returns><c>true</c> if the post step should be executed.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.FinalizeInstallation(System.Boolean)">
            <summary>
            Finalizes the installation.
            </summary>
            <param name="renderLog">if set to <c>true</c> the log should be rendered.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.GetPackageMetaData">
            <summary>
            Gets the package meta data.
            </summary>
            <returns>The package metadata.</returns>
            <exception cref="T:System.Exception">The package cannot be loaded.</exception>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.EnsureHistoryPath">
            <summary>
            Ensure that the history path is not empty.
            </summary>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.GetInstallationInfo">
            <summary>
            Gets the installation info.
            </summary>
            <returns>The installation information.</returns>
            <exception cref="T:System.Exception">Package is not selected. Possible reason: session is timed out. Try to refresh the page.</exception>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallPackage.InstallPackageForm">
            <summary>
            InstallPackageForm control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.InstallPackage.RefreshHelper">
            <summary>
            RefreshHelper control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.SetHistoryPath(System.String)">
            <summary>
            Sets the history path.
            </summary>
            <param name="historyPath">The history path.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.WriteMessage(System.Object,System.Exception,log4net.spi.Level)">
            <summary>
            Writes the log message.
            </summary>
            <param name="message">The log message.</param>
            <param name="ex">The exception.</param>
            <param name="level">The log level.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.ScheduleCheckStatusAction">
            <summary>
            Schedules the check status action.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.InitializeNextButton(System.Boolean,System.String)">
            <summary>
            Initializes the next button.
            </summary>
            <param name="disabled">if set to <c>true</c> button will be disabled.</param>
            <param name="title">The button title.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.SetHeaderText(System.String)">
            <summary>
            Sets the header text.
            </summary>
            <param name="text">The text to be set.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.ShowInstallationLog">
            <summary>
            Shows the installation log.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.SetUpdatingText(System.String)">
            <summary>
            Sets the updating text.
            </summary>
            <param name="text">The text to be set.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.FormatTextForOutput(System.String)">
            <summary>
            Replace symbol that block sending string to a javascript function
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.SetUpdatingItem(System.String)">
            <summary>
            Sets the updating text.
            </summary>
            <param name="text">The text to be set.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.WriteJavaScript">
            <summary>
            Writes the java script.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.WriteMessageStyles">
            <summary>
            Writes the message styles.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.GetFinalUpdatingText">
            <summary>
            Gets the final updating text.
            </summary>
            <returns>The final text.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.SetErrorFlag">
            <summary>
            Sets the error flag.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.WriteFinalMessage">
            <summary>
            Writes the final message.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.WriteSupportInstructions(System.String,System.Exception)">
            <summary>
            Writes the support instructions.
            </summary>
            <param name="historyPath">The history path.</param>
            <param name="ex">The exception.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.UpdateProgress(System.Int32,System.Int32)">
            <summary>
            Updates the progress information on the page.
            </summary>
            <param name="processedCommandsCount">The processed commands count.</param>
            <param name="totalCommandsCount">The total commands count.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.RunPostInstallationInstructions">
            <summary>
            Runs the post installation instructions.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.EnsureProgressCompleted">
            <summary>
            Ensures that the progress bar is equal to 100%.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.InitializeDownloadLink(System.String)">
            <summary>
            Initializes the download link.
            </summary>
            <param name="historyLogPath">The history log path.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.SetNextButtonRedirection(System.String,System.Int32)">
            <summary>
            Sets the next button redirection url.
            </summary>
            <param name="historyLogPath">The history log path.</param>
            <param name="nextPage">The next page.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.EnsureProgressFailed">
            <summary>
            Ensures that the progress bar is equal to 100%.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.InstallPackage.EnsureProgressFailed(System.String)">
            <summary>
            Ensures that the progress bar is equal to 100%.
            </summary>
            <param name="message">The fail message.</param>
        </member>
        <member name="T:Sitecore.Update.Wizard.MessageFilters.HotfixFilesMessageFilter">
            <summary>
            Filter collision messages related to files installed by the hotfix packages.
            </summary>
            <seealso cref="T:Sitecore.Update.Installer.IContingencyEntryFilter" />
        </member>
        <member name="M:Sitecore.Update.Wizard.MessageFilters.HotfixFilesMessageFilter.Apply(Sitecore.Update.Installer.ContingencyEntry)">
            <summary>
            Applies current filter for the specified entry.
            </summary>
            <param name="entry">The entry.</param>
            <returns>
            Entry if it should not be filtered, otherwise null will be returned.
            </returns>
        </member>
        <member name="T:Sitecore.Update.Wizard.MessageFilters.WizardFilesMessageFilter">
            <summary>
            Filter collision messages related to Update installation Wizard.
            Note: currently the code filters collision related to wizard assembly since this is the only problem related to the assembly signature.
            Conflicts related to other wizard files should be reported as an indication of the problem.
            </summary>
            <seealso cref="T:Sitecore.Update.Installer.IContingencyEntryFilter" />
        </member>
        <member name="M:Sitecore.Update.Wizard.MessageFilters.WizardFilesMessageFilter.Apply(Sitecore.Update.Installer.ContingencyEntry)">
            <summary>
            Applies current filter for the specified entry.
            </summary>
            <param name="entry">The entry.</param>
            <returns>
            Entry if it should not be filtered, otherwise null will be returned.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Sitecore.Update.Wizard.MessageFilters.WizardItemMessageFilter">
            <summary>
            Filter collision message related to Update installation Wizard item since this collision does not bring much value.
            </summary>
            <seealso cref="T:Sitecore.Update.Installer.IContingencyEntryFilter" />
        </member>
        <member name="M:Sitecore.Update.Wizard.MessageFilters.WizardItemMessageFilter.Apply(Sitecore.Update.Installer.ContingencyEntry)">
            <summary>
            Applies current filter for the specified entry.
            </summary>
            <param name="entry">The entry.</param>
            <returns>
            Entry if it should not be filtered, otherwise null will be returned.
            </returns>
        </member>
        <member name="T:Sitecore.Update.Wizard.PickTaskWizardPage">
            <summary>
            Renders Pick a task Wizard Page.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Wizard.PickTaskWizardPage.IsExecutePoststepChecked">
            <summary>
            Gets a value indicating whether ExecutePostStepCheckBox is checked or not.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Wizard.PickTaskWizardPage.IsInstallFilesChecked">
            <summary>
            Gets a value indicating whether InstallFilesCheckBox is checked or not.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Wizard.PickTaskWizardPage.IsInstallItemsChecked">
            <summary>
            Gets a value indicating whether InstallItemsCheckBox is checked or not.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Wizard.PickTaskWizardPage.ProcessingMode">
            <summary>
            Gets the user selected processing mode.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Wizard.PickTaskWizardPage.RecommendedMode">
            <summary>
            Gets or sets the recommended installation mode.
            </summary>
            <value>The recommended installation mode.</value>
        </member>
        <member name="M:Sitecore.Update.Wizard.PickTaskWizardPage.ClearRecommendedMode">
            <summary>
            Clears the recommended mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.PickTaskWizardPage.Next">
            <summary>
            Moves update wizard to the next state.
            </summary>
            <returns>The wizard next state.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.PickTaskWizardPage.Previous">
            <summary>
            Moves update wizard to the previous state.
            </summary>
            <returns>The wizard previous state.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.PickTaskWizardPage.Refresh(System.String,System.String@)">
            <summary>
            Refreshes this instance.
            </summary>
            <param name="path">The path to the package to be installed.</param>
            <param name="errorText">The error text.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.PickTaskWizardPage.SetRecommendedMode(Sitecore.Update.Utils.InstallMode)">
            <summary>
            Sets the recommended mode.
            </summary>
            <param name="mode">The recommended mode.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.PickTaskWizardPage.AnalyzeBtn_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Check click event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.PickTaskWizardPage.ExecuteAnalyzeInstall">
            <summary>
            Redirects to analyze form with Install mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.PickTaskWizardPage.ExecuteAnalyzeUpdate">
            <summary>
            Redirects to analyze form with Update mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.PickTaskWizardPage.OnLoad(System.EventArgs)">
            <summary>Raises the <see cref="E:System.Web.UI.Control.Load" /> event.</summary>
            <param name="e">The <see cref="T:System.EventArgs" /> object that contains the event data. </param>
        </member>
        <member name="M:Sitecore.Update.Wizard.PickTaskWizardPage.ValidateAdvanceOptions">
            <summary>
            Validates advance options.
            </summary>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.PickTaskWizardPage.ExecuteAnalyzeWithMode(Sitecore.Update.Utils.InstallMode)">
            <summary>
            Runs analyze with the mode.
            </summary>
            <param name="installMode">
            The install mode to execute analyze with.
            </param>
        </member>
        <member name="F:Sitecore.Update.Wizard.PickTaskWizardPage.PackageName">
            <summary>
            PackageName control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.PickTaskWizardPage.AnalyzeInstall">
            <summary>
            AnalyzeInstall control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.PickTaskWizardPage.InstallFilesCheckBox">
            <summary>
            InstallFilesCheckBox control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.PickTaskWizardPage.InstallItemsCheckBox">
            <summary>
            InstallItemsCheckBox control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.PickTaskWizardPage.ExecutePostStepCheckBox">
            <summary>
            ExecutePostStepCheckBox control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.PickTaskWizardPage.CleanupHistoryCbx">
            <summary>
            CleanupHistoryCbx control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.PickTaskWizardPage.CleanupEventQueueCbx">
            <summary>
            CleanupEventQueueCbx control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="T:Sitecore.Update.Wizard.PreviewMetadataWizardPage">
            <summary>
            Shows the package metadata.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Wizard.PreviewMetadataWizardPage.metadataCache">
            <summary>
            The Metadata Cache.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.PreviewMetadataWizardPage.OnLoad(System.EventArgs)">
            <summary>
            Handles the Load event of the Page control.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.PreviewMetadataWizardPage.GetMetadata(System.String,System.String@)">
            <summary>
            Gets the metadata object.
            </summary>
            <param name="packagePath">The package path.</param>
            <param name="error">The error message.</param>
            <returns>The metadata object.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.PreviewMetadataWizardPage.Refresh(System.String,Sitecore.Update.Metadata.MetadataView@,System.String@)">
            <summary>
            Refreshes the package metadata.
            </summary>
            <param name="packagePath">The package path.</param>
            <param name="metadata">The metadata object.</param>
            <param name="error">The error message.</param>
            <returns>
             <c>true</c> if metadata was extracted from the package.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.PreviewMetadataWizardPage.GetMetadataFromCache(System.String)">
            <summary>
            Gets the metadata from cache.
            </summary>
            <param name="packagePath">The package path.</param>
            <returns>The package meta data.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.PreviewMetadataWizardPage.CacheMetadata(System.String,Sitecore.Update.Metadata.MetadataView)">
            <summary>
            Caches the metadata.
            </summary>
            <param name="packagePath">The package path.</param>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.PreviewMetadataWizardPage.Next">
            <summary>
            Moves update wizard to the next state.
            </summary>
            <returns>The wizard next state.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.PreviewMetadataWizardPage.Previous">
            <summary>
            Moves update wizard to the previous state.
            </summary>
            <returns>The wizard previous state.</returns>
        </member>
        <member name="F:Sitecore.Update.Wizard.PreviewMetadataWizardPage.PackageName">
            <summary>
            PackageName control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.PreviewMetadataWizardPage.PackageLocation">
            <summary>
            PackageLocation control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.PreviewMetadataWizardPage.PackageVersion">
            <summary>
            PackageVersion control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.PreviewMetadataWizardPage.PackageAuthor">
            <summary>
            PackageAuthor control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.PreviewMetadataWizardPage.PackagePublisher">
            <summary>
            PackagePublisher control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.PreviewMetadataWizardPage.PackageReadme">
            <summary>
            PackageReadme control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="T:Sitecore.Update.Wizard.ProcessUpdatePackage">
            <summary>
            Processes Update Package page.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Wizard.ProcessUpdatePackage.HasPostInstallationError">
            <summary>
            Gets a value indicating whether this instance has post installation error.
            </summary>
            <value>
             <c>true</c> if post installation error occured; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.Update.Wizard.ProcessUpdatePackage.DownloadInstallationLogClick(System.Object,System.EventArgs)">
            <summary>
            Handles the installation log click event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.ProcessUpdatePackage.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.ProcessUpdatePackage.GetInstallationHistoryRoot">
            <summary>
            Gets the installation history root.
            </summary>
            <value>The installation history root.</value>
        </member>
        <member name="M:Sitecore.Update.Wizard.ProcessUpdatePackage.Next">
            <summary>
            Moves update wizard to the next state.
            </summary>
            <returns>The wizard next state.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.ProcessUpdatePackage.Previous">
            <summary>
            Moves update wizard to the previous state.
            </summary>
            <returns>The wizard previous state.</returns>
        </member>
        <member name="F:Sitecore.Update.Wizard.ProcessUpdatePackage.HistoryPath">
            <summary>
            HistoryPath control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.ProcessUpdatePackage.HasError">
            <summary>
            HasError control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.ProcessUpdatePackage.logArea">
            <summary>
            logArea control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.ProcessUpdatePackage.downloadLogLink">
            <summary>
            downloadLogLink control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="T:Sitecore.Update.Wizard.ResolveConfigFileConflicts">
            <summary>
            Resolve config file conflicts page.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Wizard.ResolveConfigFileConflicts.SelectedEntry">
            <summary>
            Gets or sets the selected entry.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Wizard.ResolveConfigFileConflicts.Entries">
            <summary>
            Gets or sets the entries.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Wizard.ResolveConfigFileConflicts.ChangedFiles">
            <summary>
            Gets or sets the list of changed files.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.ResolveConfigFileConflicts.OnInit(System.EventArgs)">
            <summary>
            Handles the Init event of the Page control.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.ResolveConfigFileConflicts.OnLoad(System.EventArgs)">
            <summary>
            Handles the Load event of the Page control.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.ResolveConfigFileConflicts.ResultGrid_OnRowDataBound(System.Object,System.Web.UI.WebControls.GridViewRowEventArgs)">
            <summary>
            Handles ResultGrid row data bound event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.ResolveConfigFileConflicts.Edit_OnClick(System.Object,System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            Handles Edit link click event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.ResolveConfigFileConflicts.DownloadLink_OnClick(System.Object,System.EventArgs)">
            <summary>
            Handles Download link click event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.ResolveConfigFileConflicts.btnSkipFile_OnClick(System.Object,System.EventArgs)">
            <summary>
            Handles Skip button click event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.ResolveConfigFileConflicts.btnSaveFile_OnClick(System.Object,System.EventArgs)">
            <summary>
            Handles Save button click event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.ResolveConfigFileConflicts.Next">
            <summary>
            Moves update wizard to the next state.
            </summary>
            <returns>The wizard next state.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.ResolveConfigFileConflicts.Previous">
            <summary>
            Moves update wizard to the previous state.
            </summary>
            <returns>The wizard previous state.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.ResolveConfigFileConflicts.SaveDataFolderPatchConfig(System.String,System.String)">
            <summary>
            Extracts and saves data folder patch config.
            </summary>
            <param name="sitecoreConfigPath">
            The Sitecore.config path.
            </param>
            <param name="dataFolderPatchFullPath">
            The data folder patch full path.
            </param>
        </member>
        <member name="M:Sitecore.Update.Wizard.ResolveConfigFileConflicts.IsSitecoreConfigFile(System.String)">
            <summary>
            Checks if the file is Sitecore.config file.
            </summary>
            <param name="sourcePath">
            The source path.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.ResolveConfigFileConflicts.LoadEntries">
            <summary>
            Deserialize the entries.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.ResolveConfigFileConflicts.ProcessEntries(System.Collections.Generic.List{Sitecore.Update.Installer.ContingencyEntry})">
            <summary>
            Processes the entries.
            </summary>
            <param name="entries">The entries to process.</param>
            <returns>The processed entries.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.ResolveConfigFileConflicts.BindGrid(System.Collections.Generic.List{Sitecore.Update.Installer.ContingencyEntry})">
            <summary>
            Binds data.
            </summary>
            <param name="entries">The contingency entries.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.ResolveConfigFileConflicts.RegisterScripts">
            <summary>
            Registers client side scripts.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.ResolveConfigFileConflicts.InitializePageContorls">
            <summary>
            Initializes page controls.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.ResolveConfigFileConflicts.ShowConflictDetails">
            <summary>
            Initializes the page controls.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.ResolveConfigFileConflicts.ResolveConflicts">
            <summary>
            Starts configuration files conflicts resolving process.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.ResolveConfigFileConflicts.SaveFileNames(System.Collections.Generic.List{Sitecore.Update.Installer.ContingencyEntry},System.String)">
            <summary>
            Saves configuration files filenames to the file on the disk.
            </summary>
            <param name="entries">The list of entries.</param>
            <param name="outputPath">The output path.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.ResolveConfigFileConflicts.IndentXml(System.String)">
            <summary>
            Indent xml document.
            </summary>
            <param name="xmlDocument">The xml document.</param>
            <returns>Indented xml document.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.ResolveConfigFileConflicts.GetPatchFilePath(System.String)">
            <summary>
            Returns the path for patch file.
            </summary>
            <param name="filePath">The file that patch is created for.</param>
            <returns>The patch file path.</returns>
        </member>
        <member name="F:Sitecore.Update.Wizard.ResolveConfigFileConflicts.ScriptManager">
            <summary>
            ScriptManager control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.ResolveConfigFileConflicts.MainMultiView">
            <summary>
            MainMultiView control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.ResolveConfigFileConflicts.ReviewConflictsView">
            <summary>
            ReviewConflictsView control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.ResolveConfigFileConflicts.ConflictsGrid">
            <summary>
            ConflictsGrid control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.ResolveConfigFileConflicts.ConflictsGridFooter">
            <summary>
            ConflictsGridFooter control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.ResolveConfigFileConflicts.DownloadPanel">
            <summary>
            DownloadPanel control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.ResolveConfigFileConflicts.DownloadLink">
            <summary>
            DownloadLink control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.ResolveConfigFileConflicts.EditConflictView">
            <summary>
            EditConflictView control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.ResolveConfigFileConflicts.ConflictDetailsWrapper">
            <summary>
            ConflictDetailsWrapper control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.ResolveConfigFileConflicts.HeaderText">
            <summary>
            HeaderText control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.ResolveConfigFileConflicts.ConflictDetailsPanel">
            <summary>
            ConflictDetailsPanel control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.ResolveConfigFileConflicts.PatchWrapper">
            <summary>
            PatchWrapper control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.ResolveConfigFileConflicts.PatchTitle">
            <summary>
            PatchTitle control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.ResolveConfigFileConflicts.PatchFile">
            <summary>
            PatchFile control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.ResolveConfigFileConflicts.btnSkipFile">
            <summary>
            btnSkipFile control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.ResolveConfigFileConflicts.btnSaveFile">
            <summary>
            btnSaveFile control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.ResolveConfigFileConflicts.btnSaveFileSubTitle">
            <summary>
            btnSaveFileSubTitle control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.ResolveConfigFileConflicts.SourceFile">
            <summary>
            SourceFile control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.ResolveConfigFileConflicts.TargetFile">
            <summary>
            TargetFile control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="T:Sitecore.Update.Wizard.SelectPackageWizardPage">
            <summary>
            The User control that allows to select package to be processed.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.SelectPackageWizardPage.GetSelectedPackagePath">
            <summary>
            Gets the selected package path.
            </summary>
            <returns>The selecetd package path.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.SelectPackageWizardPage.Refresh(System.String)">
            <summary>
            Refreshes the wizard page.
            </summary>
            <param name="selectedPackage">The package to be selected.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.SelectPackageWizardPage.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.SelectPackageWizardPage.InitializePackageList(System.String)">
            <summary>
            Initializes the package list.
            </summary>
            <param name="selectedPackagePath">The selected package.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.SelectPackageWizardPage.UploadPackage">
            <summary>
            Uploads the package.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Wizard.SelectPackageWizardPage.Next">
            <summary>
            Moves update wizard to the next state.
            </summary>
            <returns>The wizard next state.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.SelectPackageWizardPage.Previous">
            <summary>
            Moves update wizard to the previous state.
            </summary>
            <returns>The wizard previous state.</returns>
        </member>
        <member name="F:Sitecore.Update.Wizard.SelectPackageWizardPage.Upload">
            <summary>
            Upload control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.SelectPackageWizardPage.PackageList">
            <summary>
            PackageList control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.Wizard.SelectPackageWizardPage.FFHook">
            <summary>
            FFHook control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="T:Sitecore.Update.Wizard.State.WizardState">
            <summary>
            Represents states of <see cref="T:Sitecore.Update.UpdateInstallationWizard"/> page.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Wizard.WelcomeWizardPage">
            <summary>
            WelcomeWizardPage class.
            </summary>
            <remarks>
            Auto-generated class.
            </remarks>
        </member>
        <member name="M:Sitecore.Update.Wizard.WelcomeWizardPage.OnLoad(System.EventArgs)">
            <summary>
            Handles the Load event of the Page control.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.Update.Wizard.WelcomeWizardPage.Next">
            <summary>
            Moves update wizard to the next state.
            </summary>
            <returns>The wizard next state.</returns>
        </member>
        <member name="M:Sitecore.Update.Wizard.WelcomeWizardPage.Previous">
            <summary>
            Moves update wizard to the previous state.
            </summary>
            <returns>The wizard previous state.</returns>
        </member>
        <member name="T:Sitecore.Update.sitecore.admin.Wizard.ConfigurationDiffSideBySide">
            <summary>
            Show configurations conflicts in side-by-side view.
            </summary>
        </member>
        <member name="M:Sitecore.Update.sitecore.admin.Wizard.ConfigurationDiffSideBySide.Page_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the Page control.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Sitecore.Update.sitecore.admin.Wizard.ConfigurationDiffSideBySide.ScriptManager">
            <summary>
            ScriptManager control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.sitecore.admin.Wizard.ConfigurationDiffSideBySide.HeaderText">
            <summary>
            HeaderText control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.sitecore.admin.Wizard.ConfigurationDiffSideBySide.ConflictDetailsPanel">
            <summary>
            ConflictDetailsPanel control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.sitecore.admin.Wizard.ConfigurationDiffSideBySide.SourceFile">
            <summary>
            SourceFile control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.sitecore.admin.Wizard.ConfigurationDiffSideBySide.TargetFile">
            <summary>
            TargetFile control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="T:Sitecore.Update.InstallUpdatePackage">
            <summary>
            Performs Installation.
            </summary>
        </member>
        <member name="F:Sitecore.Update.InstallUpdatePackage.NextPageNumber">
            <summary>
            The next page number
            </summary>
        </member>
        <member name="F:Sitecore.Update.InstallUpdatePackage.FailurePageNumber">
            <summary>
            The failure page number
            </summary>
        </member>
        <member name="F:Sitecore.Update.InstallUpdatePackage.logger">
            <summary>
            The Logger.
            </summary>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.InstallUpdatePackage"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Update.InstallUpdatePackage.CommandsCount">
            <summary>
            Gets or sets total count of commands.
            </summary>
        </member>
        <member name="P:Sitecore.Update.InstallUpdatePackage.ItemCommandsCount">
            <summary>
            Gets or sets total count of item commands.
            </summary>
        </member>
        <member name="P:Sitecore.Update.InstallUpdatePackage.FileCommandsCount">
            <summary>
            Gets or sets total count of file commands.
            </summary>
        </member>
        <member name="P:Sitecore.Update.InstallUpdatePackage.ProcessedCommandsCount">
            <summary>
            Gets or sets count of processed commands.
            </summary>
        </member>
        <member name="P:Sitecore.Update.InstallUpdatePackage.LogEntries">
            <summary>
            Gets or sets store for the installation log entries.
            </summary>
        </member>
        <member name="P:Sitecore.Update.InstallUpdatePackage.LogMessages">
            <summary>
            Gets or sets the list of contingency entries.
            </summary>
        </member>
        <member name="P:Sitecore.Update.InstallUpdatePackage.Logger">
            <summary>
            Gets the logger.
            </summary>
            <value>The logger.</value>
        </member>
        <member name="P:Sitecore.Update.InstallUpdatePackage.IsPostInstallationStep">
            <summary>
            Gets or sets a value indicating whether current request is a post installation step.
            </summary>
            <value>
              <c>true</c> if current request is post installation step; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Update.InstallUpdatePackage.IsDebugEnabled">
            <summary>
            Gets a value indicating whether this instance is debug enabled.
            </summary>
            <value>
             <c>true</c> if this instance is debug enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Update.InstallUpdatePackage.IsErrorEnabled">
            <summary>
            Gets a value indicating whether this instance is error enabled.
            </summary>
            <value>
             <c>true</c> if this instance is error enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Update.InstallUpdatePackage.IsFatalEnabled">
            <summary>
            Gets a value indicating whether this instance is fatal enabled.
            </summary>
            <value>
             <c>true</c> if this instance is fatal enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Update.InstallUpdatePackage.IsInfoEnabled">
            <summary>
            Gets a value indicating whether this instance is info enabled.
            </summary>
            <value>
             <c>true</c> if this instance is info enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Update.InstallUpdatePackage.IsWarnEnabled">
            <summary>
            Gets a value indicating whether this instance is warn enabled.
            </summary>
            <value>
             <c>true</c> if this instance is warn enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Update.InstallUpdatePackage.PageUrl">
            <summary>
            Gets the page URL.
            </summary>
            <value>The page URL.</value>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.Debug(System.Object,System.Exception)">
            <summary>
            Debugs the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="t">The exception.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.Debug(System.Object)">
            <summary>
            Debugs the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.Error(System.Object,System.Exception)">
            <summary>
            Errors the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="t">The exception.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.log4net#ILog#Error(System.Object)">
            <summary>
            Errors the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.Fatal(System.Object,System.Exception)">
            <summary>
            Fatals the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="t">The exception.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.Fatal(System.Object)">
            <summary>
            Fatals the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.Info(System.Object,System.Exception)">
            <summary>
            Infoes the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="t">The exception.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.Info(System.Object)">
            <summary>
            Infoes the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.Warn(System.Object,System.Exception)">
            <summary>
            Warns the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="t">The exception.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.Warn(System.Object)">
            <summary>
            Warns the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.SetHistoryPath(System.String)">
            <summary>
            Sets the history path.
            </summary>
            <param name="historyPath">The history path.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.SetErrorFlag">
            <summary>
            Sets the error flag.
            </summary>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.ExecutePostStep(Sitecore.Update.Metadata.MetadataView)">
            <summary>
            Executes the post step.
            </summary>
            <param name="view">The package metadata.</param>
            <exception cref="T:System.Exception">Cannot execute post installation action because installation data not found.</exception>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.ExecutePostStep(System.Collections.Generic.List{Sitecore.Update.Installer.ContingencyEntry},Sitecore.Update.Metadata.MetadataView)">
            <summary>
            Executes the poststep.
            </summary>
            <param name="entries">The contingency entries.</param>
            <param name="view">The package metadata.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.WriteSupportInstructions(System.String,System.Exception)">
            <summary>
            Writes the support instructions.
            </summary>
            <param name="historyPath">The history path.</param>
            <param name="ex">The exception.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.CollectInstallationInformation(System.String)">
            <summary>
            Collects the installation information.
            </summary>
            <param name="historyPath">The history path.</param>
            <returns>The list of files with installation information.</returns>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.LoadInstallationLog">
            <summary>
            Loads the installation log.
            </summary>
            <returns>The installation log entries.</returns>
            <exception cref="T:System.Exception">Cannot execute post installation action: cannot process installation log.</exception>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.ShowInstallationLog(System.Collections.Generic.List{System.String})">
            <summary>
            Shows the installation log.
            </summary>
            <param name="entries">The installation log entries.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.RunPostInstallationInstructions(System.String)">
            <summary>
            Runs the post installation instructions.
            </summary>
            <param name="installationHistoryPath">The installation history path.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.InstallPackage(Sitecore.Update.Metadata.MetadataView)">
            <summary>
            Installs the package.
            </summary>
            <param name="view">The package metadata.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.FinalizeInstallation">
            <summary>
            Finalizes the installation.
            </summary>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.WriteFinalMessage">
            <summary>
            Writes the final message.
            </summary>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.Install">
            <summary>
            Performs Installation of the update package.
            </summary>
            <returns>The Installation history location.</returns>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.ExtractQueryParameters">
            <summary>
            Extracts the parameters from Query string.
            </summary>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.GetInstallationInfo">
            <summary>
            Gets the installation info.
            </summary>
            <returns>The installation information.</returns>
            <exception cref="T:System.Exception">Package is not selected. Possible reason: session is timed out. Try to refresh the page.</exception>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.HandlePostStepException(Sitecore.Update.Installer.Exceptions.PostStepInstallerException)">
            <summary>
            Handles the post step exception.
            </summary>
            <param name="ex">The exception.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.ShowException(System.Exception)">
            <summary>
            Shows the exception.
            </summary>
            <param name="ex">The exception.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.InitializeNextButton(System.Boolean,System.String)">
            <summary>
            Initializes the next button.
            </summary>
            <param name="disabled">if set to <c>true</c> button will be disabled.</param>
            <param name="title">The buton title.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.SetHeaderText(System.String)">
            <summary>
            Sets the header text.
            </summary>
            <param name="text">The text to be set.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.ShowInstallationLog">
            <summary>
            Shows the installation log.
            </summary>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.SetUpdatingText(System.String)">
            <summary>
            Sets the updating text.
            </summary>
            <param name="text">The text to be set.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.WriteJavaScript">
            <summary>
            Writes the java script.
            </summary>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.WriteMessageStyles">
            <summary>
            Writes the message styles.
            </summary>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.WriteMessage(System.Object,System.Exception,log4net.spi.Level)">
            <summary>
            Writes the message to the page.
            </summary>
            <param name="message">The log message.</param>
            <param name="ex">The exeption.</param>
            <param name="level">The log level.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.WriteMessage(System.Object,System.Exception,log4net.spi.Level,System.Boolean)">
            <summary>
            Writes the log message.
            </summary>
            <param name="message">The log message.</param>
            <param name="ex">The exeption.</param>
            <param name="level">The log level.</param>
            <param name="isCommandText">if set to <c>true</c> than progress will be updated.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.EnsureProgressCompleted">
            <summary>
            Ensures that the progress bar is equal to 100%.
            </summary>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.InitializeDownloadLink(System.String)">
            <summary>
            Initializes the download link.
            </summary>
            <param name="historyLogPath">The history log path.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.SetNextButtonRedirection(System.String,System.Int32)">
            <summary>
            Sets the next button redirection url.
            </summary>
            <param name="historyLogPath">The history log path.</param>
            <param name="nextPage">The next page.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.EnsureProgressFailed">
            <summary>
            Ensures that the progress bar is equal to 100%.
            </summary>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.EnsureProgressFailed(System.String)">
            <summary>
            Ensures that the progress bar is equal to 100%.
            </summary>
            <param name="message">The fail message.</param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.GetFinalUpdatingText">
            <summary>
            Gets the final updating text.
            </summary>
            <returns>The final text.</returns>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.SaveInstallationLog">
            <summary>
            Saves the installation log.
            </summary>
            <param name="log">The installation log.</param>
            <exception cref="T:System.Exception">History path is not set</exception>
            <returns>The installation history file path.</returns>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.SaveInstallationMessages">
            <summary>
            Saves the installation log.
            </summary>
            <exception cref="T:System.Exception">History path cannot be empty</exception>
            <returns>The installation messages log path.</returns>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.EnsureHistoryPath">
            <summary>
            Ensure that the history path is not empty.
            </summary>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.RunCleanupHistory">
            <summary>
            Runs cleaning up of history tables on all available databases.
            </summary>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.RunCleanupEventQueue">
            <summary>
            Runs a process of cleaning up all available Event Queues.
            </summary>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.Install(Sitecore.Update.Metadata.MetadataView)">
            <summary>
            Runs install.
            </summary>
            <param name="view">
            The view.
            </param>
        </member>
        <member name="M:Sitecore.Update.InstallUpdatePackage.RunPresteps">
            <summary>
            Runs defined pre-steps.
            </summary>
        </member>
        <member name="F:Sitecore.Update.InstallUpdatePackage.form1">
            <summary>
            form1 control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Sitecore.Update.InstallUpdatePackage.lblError">
            <summary>
            lblError control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="T:Sitecore.Update.ChangeEntry">
            <summary>
            The change entry.
            </summary>
        </member>
        <member name="F:Sitecore.Update.ChangeEntry.name">
            <summary>
            The change name.
            </summary>
        </member>
        <member name="F:Sitecore.Update.ChangeEntry.oldValue">
            <summary>
            The old value.
            </summary>
        </member>
        <member name="F:Sitecore.Update.ChangeEntry.newValue">
            <summary>
            The new value.
            </summary>
        </member>
        <member name="F:Sitecore.Update.ChangeEntry.comments">
            <summary>
            The change comments.
            </summary>
        </member>
        <member name="M:Sitecore.Update.ChangeEntry.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.ChangeEntry"/> class.
            </summary>
            <param name="name">The change name.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Sitecore.Update.ChangeEntry.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.ChangeEntry"/> class.
            </summary>
            <param name="name">The change name.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
            <param name="comments">The comments.</param>
        </member>
        <member name="M:Sitecore.Update.ChangeEntry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.ChangeEntry"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Update.ChangeEntry.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The change name.</value>
        </member>
        <member name="P:Sitecore.Update.ChangeEntry.OldValue">
            <summary>
            Gets the old value.
            </summary>
            <value>The old value.</value>
        </member>
        <member name="P:Sitecore.Update.ChangeEntry.NewValue">
            <summary>
            Gets the new value.
            </summary>
            <value>The new value.</value>
        </member>
        <member name="P:Sitecore.Update.ChangeEntry.Comments">
            <summary>
            Gets the comments.
            </summary>
            <value>The comments.</value>
        </member>
        <member name="M:Sitecore.Update.ChangeEntry.Serialize(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the specified writer.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.ChangeEntry.Load(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.Analyzers.AssemblyLevelAnalyzer">
            <summary>
            Base class for code analyzers.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.AssemblyLevelAnalyzer.Analyze(System.Reflection.Assembly,Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Analyzes the specified assembly.
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="members">The members.</param>
            <returns>The array of found references.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.AssemblyLevelAnalyzer.DoAnalyze(System.Reflection.Assembly,Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Performs the analysis.
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="members">The members.</param>
            <returns>The array of found references.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.AssemblyLevelAnalyzer.GetMatchedCodeMembers(Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Gets the matched code members. Used for filtering code members that is not known to analyzer.
            </summary>
            <param name="members">The members.</param>
            <returns>The collection of code members that can be processed by the analyzer.</returns>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.Analyzers.ConsumeTypeAnalyzer">
            <summary>
            Performs the analysis of usage specified members in the specified type implementation code.
            </summary>
            <seealso cref="T:Sitecore.Update.CodeAnalysis.Analyzers.TypeLevelAnalyzer" />
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.Analyzers.ConsumeTypeAnalyzer.MethodBodyParser">
            <summary>
            Gets the method body parser.
            </summary>
            <value>
            The method body parser.
            </value>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.ConsumeTypeAnalyzer.DoAnalyze(System.Type,Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Performs the analysis.
            </summary>
            <param name="type">The assembly.</param>
            <param name="members">The members.</param>
            <returns>
            The array of found references.
            </returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.ConsumeTypeAnalyzer.FilterResult(Sitecore.Update.CodeAnalysis.CodeReferences.CodeReferenceInfo[])">
            <summary>
            Filters the result.
            </summary>
            <param name="references">The references.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.ConsumeTypeAnalyzer.GetMethodSignatureReferences(System.String,System.String,System.String,System.Reflection.MethodBase,Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Gets the method signature references.
            </summary>
            <param name="method">The method.</param>
            <param name="members">The members.</param>
            <returns>The references to specified members from method signature.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.ConsumeTypeAnalyzer.GetMethodVariablesReferences(System.String,System.String,System.String,System.Reflection.MethodBase,Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Get the metod local varaibles referencess,  affected by breacking changes
            </summary>
            <param name="consumerAssemblyName">The name of consumers assembly</param>
            <param name="consumerTypeName">The name of consumer's type</param>
            <param name="consumerMethodName">The name of consumer's method</param>
            <param name="method">The method to analyze</param>
            <param name="members">The members</param>
            <returns>The array of found references</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.ConsumeTypeAnalyzer.GetMethodsForType(System.Type)">
            <summary>
            Gets the type of the methods for.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.ConsumeTypeAnalyzer.ParseMethodBody(System.Reflection.MethodBase)">
            <summary>
            Parses the method body.
            </summary>
            <param name="method">The method.</param>
            <returns>The array of IL instructions.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.ConsumeTypeAnalyzer.GetMemberAnalyzers(System.Type,Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Gets the member analyzers.
            </summary>
            <param name="type">The type.</param>
            <param name="members">The members.</param>
            <returns>The array of IL instruction analyzers.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.ConsumeTypeAnalyzer.GetMatchedCodeMembers(Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Gets the matched code members. Used for filtering code members that is not known to analyzer.
            </summary>
            <param name="members">The members.</param>
            <returns>The collection of code members that can be processed by the analyzer.</returns>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.Analyzers.DeriveFromRemovedTypeAnalyzer">
            <summary>
            Searches for types that inherit from removed type.
            </summary>
            <seealso cref="T:Sitecore.Update.CodeAnalysis.Analyzers.DeriveFromUpdatedTypeAnalyzer" />
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.DeriveFromRemovedTypeAnalyzer.DoAnalyze(System.Type,Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Performs the analysis.
            </summary>
            <param name="type">The assembly.</param>
            <param name="members">The members.</param>
            <returns>
            The array of found references.
            </returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.DeriveFromRemovedTypeAnalyzer.CreateCodeReferences(System.String,System.Type,System.Type)">
            <summary>
            Creates the code references.
            </summary>
            <param name="consumerAssemblyName">Name of the consumer assembly.</param>
            <param name="consumerType">Type of the consumer.</param>
            <param name="referenceType">Type of the reference.</param>
            <returns>
            The code reference info collection.
            </returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.DeriveFromRemovedTypeAnalyzer.GetMatchedCodeMembers(Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Gets the matched code members. Used for filtering code members that is not known to analyzer.
            </summary>
            <param name="members">The members.</param>
            <returns>
            The collection of code members that can be processed by the analyzer.
            </returns>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.Analyzers.DeriveFromUpdatedTypeAnalyzer">
            <summary>
            Searches for types that inherit the type that got new abstract members.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.DeriveFromUpdatedTypeAnalyzer.DoAnalyze(System.Type,Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Performs the analysis.
            </summary>
            <param name="type">The assembly.</param>
            <param name="members">The members.</param>
            <returns>
            The array of found references.
            </returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.DeriveFromUpdatedTypeAnalyzer.GetCodeReferences(System.Type,System.Type[])">
            <summary>
            Gets the code references.
            </summary>
            <param name="type">The assembly.</param>
            <param name="types">The types.</param>
            <returns>The information about code references.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.DeriveFromUpdatedTypeAnalyzer.CreateCodeReferences(System.String,System.Type,System.Type)">
            <summary>
            Creates the code references.
            </summary>
            <param name="consumerAssemblyName">Name of the consumer assembly.</param>
            <param name="consumerType">Type of the consumer.</param>
            <param name="referenceType">Type of the reference.</param>
            <returns>The code reference info collection.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.DeriveFromUpdatedTypeAnalyzer.GetMatchedCodeMembers(Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Gets the matched code members. Used for filtering code members that is not known to analyzer.
            </summary>
            <param name="members">The members.</param>
            <returns>
            The collection of code members that can be processed by the analyzer.
            </returns>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.Analyzers.MemberInstructionAnalyzer">
            <summary>
            Base class for analyzers that work with IL instructions.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.MemberInstructionAnalyzer.Analyze(Sitecore.Update.CodeAnalysis.IL.MemberInstruction[],System.String,System.String,System.String,Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Analyzes the specified instructions.
            </summary>
            <param name="instructions">The instructions.</param>
            <param name="consumerAssemblyName">Name of the consumer assembly.</param>
            <param name="consumerTypeName">Name of the consumer type.</param>
            <param name="consumerMemberName">Name of the consumer member.</param>
            <param name="members">The members.</param>
            <returns>
            The array of code references.
            </returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.MemberInstructionAnalyzer.FilterInstructions(Sitecore.Update.CodeAnalysis.IL.MemberInstruction[])">
            <summary>
            Filters the instructions.
            </summary>
            <param name="instructions">The instructions.</param>
            <returns>The filtered instructions.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.MemberInstructionAnalyzer.FilterMembers(Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Filters the members.
            </summary>
            <param name="members">The members.</param>
            <returns>The filtered array of members that is supported by analyzer</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.MemberInstructionAnalyzer.DoAnalyze(Sitecore.Update.CodeAnalysis.IL.MemberInstruction[],System.String,System.String,System.String,Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Does the analysis.
            </summary>
            <param name="instructions">The instructions.</param>
            <param name="consumerAssemblyName">Name of the consumer assembly.</param>
            <param name="consumerTypeName">Name of the consumer type.</param>
            <param name="consumerMemberName">Name of the consumer member.</param>
            <param name="members">The members.</param>
            <returns>
            The array of code references.
            </returns>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.Analyzers.RemoveAssemblyAnalyzer">
            <summary>
            Searches for references in specified assembly to the assemblies that have been removed.
            </summary>
            <seealso cref="T:Sitecore.Update.CodeAnalysis.Analyzers.AssemblyLevelAnalyzer" />
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.RemoveAssemblyAnalyzer.DoAnalyze(System.Reflection.Assembly,Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Performs the analysis.
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="members">The members.</param>
            <returns>
            The array of found references.
            </returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.RemoveAssemblyAnalyzer.GetMatchedCodeMembers(Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Filters the members. Returns only RemovedAssemblyInfo members for further processing.
            </summary>
            <param name="members">The members.</param>
            <returns>The collection of RemovedAssemblyInfo members.</returns>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.Analyzers.TypeLevelAnalyzer">
            <summary>
            The analyzer that provides the basic API for checking usages of the specified members in the specified type.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.TypeLevelAnalyzer.Analyze(System.Type,Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Analyzes the specified assembly.
            </summary>
            <param name="type">The assembly.</param>
            <param name="members">The members.</param>
            <returns>The array of found references.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.TypeLevelAnalyzer.DoAnalyze(System.Type,Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Performs the analysis.
            </summary>
            <param name="type">The assembly.</param>
            <param name="members">The members.</param>
            <returns>The array of found references.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.TypeLevelAnalyzer.GetMatchedCodeMembers(Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Gets the matched code members. Used for filtering code members that is not known to analyzer.
            </summary>
            <param name="members">The members.</param>
            <returns>The collection of code members that can be processed by the analyzer.</returns>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.Analyzers.UseRemovedTypeAnalyzer">
            <summary>
            Analyzes the instructions and returns information about usages of type to be removed.
            </summary>
            <seealso cref="T:Sitecore.Update.CodeAnalysis.Analyzers.MemberInstructionAnalyzer" />
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.UseRemovedTypeAnalyzer.DoAnalyze(Sitecore.Update.CodeAnalysis.IL.MemberInstruction[],System.String,System.String,System.String,Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Does the analysis.
            </summary>
            <param name="instructions">The instructions.</param>
            <param name="consumerAssemblyName">Name of the consumer assembly.</param>
            <param name="consumerTypeName">Name of the consumer type.</param>
            <param name="consumerMemberName">Name of the consumer member.</param>
            <param name="members">The members.</param>
            <returns>
            The array of code references.
            </returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.UseRemovedTypeAnalyzer.FilterInstructions(Sitecore.Update.CodeAnalysis.IL.MemberInstruction[])">
            <summary>
            Filters the instructions.
            </summary>
            <param name="instructions">The instructions.</param>
            <returns>Instructions that have appropriate information about assembly and type.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.UseRemovedTypeAnalyzer.FilterMembers(Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Filters the members.
            </summary>
            <param name="members">The members.</param>
            <returns>
            The filtered array of members that is supported by analyzer
            </returns>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.Analyzers.UseUpdatedMemberAnalyzer">
            <summary>
            Analyzes the instructions and returns information about usages of type members to be updated or deleted.
            </summary>
            <seealso cref="T:Sitecore.Update.CodeAnalysis.Analyzers.MemberInstructionAnalyzer" />
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.UseUpdatedMemberAnalyzer.DoAnalyze(Sitecore.Update.CodeAnalysis.IL.MemberInstruction[],System.String,System.String,System.String,Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Does the analysis.
            </summary>
            <param name="instructions">The instructions.</param>
            <param name="consumerAssemblyName">Name of the consumer assembly.</param>
            <param name="consumerTypeName">Name of the consumer type.</param>
            <param name="consumerMemberName">Name of the consumer member.</param>
            <param name="members">The members.</param>
            <returns>
            The array of code references.
            </returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.UseUpdatedMemberAnalyzer.FilterInstructions(Sitecore.Update.CodeAnalysis.IL.MemberInstruction[])">
            <summary>
            Filters the instructions.
            </summary>
            <param name="instructions">The instructions.</param>
            <returns>Instructions that have appropriate information about assembly, type and member.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.UseUpdatedMemberAnalyzer.FilterMembers(Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Filters the members.
            </summary>
            <param name="members">The members.</param>
            <returns>
            The filtered array of members that is supported by analyzer
            </returns>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.Analyzers.UseUpdatedTypeAnalyzer">
            <summary>
            Analyzes the instructions and returns information about usages of the updated type (changed inheritance, visibility, etc.).
            </summary>
            <seealso cref="T:Sitecore.Update.CodeAnalysis.Analyzers.MemberInstructionAnalyzer" />
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.UseUpdatedTypeAnalyzer.DoAnalyze(Sitecore.Update.CodeAnalysis.IL.MemberInstruction[],System.String,System.String,System.String,Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Does the analysis.
            </summary>
            <param name="instructions">The instructions.</param>
            <param name="consumerAssemblyName">Name of the consumer assembly.</param>
            <param name="consumerTypeName">Name of the consumer type.</param>
            <param name="consumerMemberName">Name of the consumer member.</param>
            <param name="members">The members.</param>
            <returns>
            The array of code references.
            </returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.UseUpdatedTypeAnalyzer.FilterMembers(Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Filters the members.
            </summary>
            <param name="members">The members.</param>
            <returns>
            The filtered array of members that is supported by analyzer
            </returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Analyzers.UseUpdatedTypeAnalyzer.FilterInstructions(Sitecore.Update.CodeAnalysis.IL.MemberInstruction[])">
            <summary>
            Filters the instructions.
            </summary>
            <param name="instructions">The instructions.</param>
            <returns>
            The filtered instructions.
            </returns>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.CodeMembers.AddedMemberInfo">
            <summary>
            Represents Add Type Member action.
            Instantiated in case abstract or interface method or property has been added to interface or abstract class.
            Is not used for indicating new non-abstract methods in the type.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeMembers.AddedMemberInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.CodeAnalysis.CodeMembers.AddedMemberInfo"/> class.
            </summary>
            <param name="assemblyName">The assembly name.</param>
            <param name="typeName">The type name.</param>
            <param name="memberName">The type member name.</param>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.CodeMembers.ChangedMemberInfo">
            <summary>
            Represents Change Type Member action.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeMembers.ChangedMemberInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.CodeAnalysis.CodeMembers.ChangedMemberInfo"/> class.
            </summary>
            <param name="assemblyName">The assembly name.</param>
            <param name="typeName">The type name.</param>
            <param name="memberName">The type member name.</param>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.CodeMembers.ChangedParameterInfo">
            <summary>
            Represents Change Type Member Parameter action.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeMembers.ChangedParameterInfo.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.CodeAnalysis.CodeMembers.ChangedParameterInfo"/> class.
            </summary>
            <param name="assemblyName">The assembly name.</param>
            <param name="typeName">The type name.</param>
            <param name="memberName">The type member name.</param>
            <param name="parameterName">The type member parameter name.</param>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.CodeMembers.ChangedParameterInfo.ParameterName">
            <summary>
            Gets type member parameter name.
            </summary>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.CodeMembers.ChangedTypeInfo">
            <summary>
            Represents Change Type action.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeMembers.ChangedTypeInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.CodeAnalysis.CodeMembers.ChangedTypeInfo"/> class.
            </summary>
            <param name="assemblyName">The assembly name.</param>
            <param name="typeName">The type name.</param>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.CodeMembers.ChangedTypeInheritanceInfo">
            <summary>
            Represents Change Type Inheritance action.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeMembers.ChangedTypeInheritanceInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.CodeAnalysis.CodeMembers.ChangedTypeInheritanceInfo"/> class.
            </summary>
            <param name="assemblyName">The assembly name.</param>
            <param name="typeName">The type name.</param>
            <param name="baseTypeName">The base type name.</param>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.CodeMembers.ChangedTypeInheritanceInfo.BaseTypeName">
            <summary>
            Gets base type name.
            </summary>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.CodeMembers.ChangedTypeMemberInfo">
            <summary>
            Represents Change Type Member action.
            Used as a base class in case abstract or interface method or property has been added to interface or abstract class.
            </summary>
            <seealso cref="T:Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo" />
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeMembers.ChangedTypeMemberInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.CodeAnalysis.CodeMembers.ChangedTypeMemberInfo" /> class.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <param name="typeName">Name of the type.</param>
            <param name="memberName">Name of the member.</param>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.CodeMembers.ChangedTypeMemberInfo.MemberName">
            <summary>
            Gets the type member name.
            </summary>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.CodeMembers.ChangedVirtualModifierInfo">
            <summary>
            Indicates that methos virtual modifier has been changed.
            </summary>
            <seealso cref="T:Sitecore.Update.CodeAnalysis.CodeMembers.ChangedMemberInfo" />
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeMembers.ChangedVirtualModifierInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.CodeAnalysis.CodeMembers.ChangedVirtualModifierInfo"/> class.
            </summary>
            <param name="assemblyName">The assembly name.</param>
            <param name="typeName">The type name.</param>
            <param name="memberName">The type member name.</param>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo">
            <summary>
            Represents the base abstraction for the breaking changes information.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo"/> class.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo.AssemblyName">
            <summary>
            Gets the name of the assembly.
            </summary>
            <value>
            The name of the assembly.
            </value>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.CodeMembers.MadeMethodAbstractInfo">
            <summary>
            Indicates the method has been made abstract.
            </summary>
            <seealso cref="T:Sitecore.Update.CodeAnalysis.CodeMembers.ChangedMemberInfo" />
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeMembers.MadeMethodAbstractInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.CodeAnalysis.CodeMembers.MadeMethodAbstractInfo"/> class.
            </summary>
            <param name="assemblyName">The assembly name.</param>
            <param name="typeName">The type name.</param>
            <param name="memberName">The type member name.</param>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.CodeMembers.MadeMethodSealedInfo">
            <summary>
            Indicates that method was changed to be sealed.
            </summary>
            <seealso cref="T:Sitecore.Update.CodeAnalysis.CodeMembers.ChangedMemberInfo" />
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.CodeMembers.MadeTypeSealedInfo">
            <summary>
            Indicates that type was changed to sealed.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeMembers.MadeTypeSealedInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.CodeAnalysis.CodeMembers.MadeTypeSealedInfo"/> class.
            </summary>
            <param name="assemblyName">The assembly name.</param>
            <param name="typeName">The type name.</param>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.CodeMembers.RemovedAssemblyInfo">
            <summary>
            Represents Remove Assembly action.
            </summary>
            <seealso cref="T:Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo" />
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeMembers.RemovedAssemblyInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.CodeAnalysis.CodeMembers.RemovedAssemblyInfo"/> class.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.CodeMembers.RemovedMemberInfo">
            <summary>
            Represents Remove Type Member action.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeMembers.RemovedMemberInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.CodeAnalysis.CodeMembers.RemovedMemberInfo"/> class.
            </summary>
            <param name="assemblyName">The assembly name.</param>
            <param name="typeName">The type name.</param>
            <param name="memberName">The type member name.</param>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.CodeMembers.RemovedTypeInfo">
            <summary>
            Represents Remove Type action.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeMembers.RemovedTypeInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.CodeAnalysis.CodeMembers.RemovedTypeInfo"/> class.
            </summary>
            <param name="assemblyName">The assembly name.</param>
            <param name="typeName">The type name.</param>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeMembers.RemovedTypeInfo.GetRemovedType">
            <summary>
            Gets the removed type object.
            </summary>
            <returns>Null if either type not found or assembly is not loaded into domain, otherwise returns the type object.</returns>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.CodeMembers.TypeCodeMemberInfo">
            <summary>
            The base code member info that contains type information.
            </summary>
            <seealso cref="T:Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo" />
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeMembers.TypeCodeMemberInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.CodeAnalysis.CodeMembers.TypeCodeMemberInfo"/> class.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <param name="typeName">Name of the type.</param>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.CodeMembers.TypeCodeMemberInfo.TypeName">
            <summary>
            Gets the type name.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeMembers.TypeCodeMemberInfo.GetModifiedType">
            <summary>
            Gets the updated type object.
            </summary>
            <returns>Null if either type not found or assembly is not loaded into domain, otherwise returns the type object.</returns>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.CodeReferences.CodeReferenceInfo">
            <summary>
            The base abstraction that represents the information about usages for CodeMemberInfo.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeReferences.CodeReferenceInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.CodeAnalysis.CodeReferences.DerivedFromModifiedTypeReferenceInfo"/> class.
            </summary>
            <param name="consumerAssembly">The consumer assembly.</param>
            <param name="referencedAssembly">The referenced assembly.</param>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.CodeReferences.CodeReferenceInfo.ConsumerAssembly">
            <summary>
            Gets the consumer assembly.
            </summary>
            <value>
            The consumer assembly.
            </value>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.CodeReferences.CodeReferenceInfo.ReferencedAssembly">
            <summary>
            Gets the referenced assembly.
            </summary>
            <value>
            The referenced assembly.
            </value>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.CodeReferences.CodeReferenceInfo.ShortDescription">
            <summary>
            Gets the short description.
            </summary>
            <value>
            The short description.
            </value>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.CodeReferences.CodeReferenceInfo.LongDescription">
            <summary>
            Gets the long description.
            </summary>
            <value>
            The long description.
            </value>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeReferences.CodeReferenceInfo.SimilarTo(Sitecore.Update.CodeAnalysis.CodeReferences.CodeReferenceInfo)">
            <summary>
            Similars to.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.CodeReferences.DerivedFromModifiedTypeReferenceInfo">
            <summary>
            CodeReferenceInfo that informs about a situation when the type in specified assembly derives from the type that has breaking changes.
            </summary>
            <seealso cref="T:Sitecore.Update.CodeAnalysis.CodeReferences.CodeReferenceInfo" />
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeReferences.DerivedFromModifiedTypeReferenceInfo.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.CodeAnalysis.CodeReferences.DerivedFromModifiedTypeReferenceInfo"/> class.
            </summary>
            <param name="consumerAssembly">The consumer assembly.</param>
            <param name="consumerType">Type of the consumer.</param>
            <param name="referencedAssembly">The referenced assembly.</param>
            <param name="referencedType">Type of the referenced.</param>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.CodeReferences.DerivedFromModifiedTypeReferenceInfo.ShortDescription">
            <summary>
            Gets the short description.
            </summary>
            <value>
            The short description.
            </value>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.CodeReferences.DerivedFromModifiedTypeReferenceInfo.LongDescription">
            <summary>
            Gets the long description.
            </summary>
            <value>
            The long description.
            </value>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.CodeReferences.DerivedFromRemovedTypeReferenceInfo">
            <summary>
            CodeReferenceInfo that informs about a situation when the type in specified assembly derives from the type that has ben removed.
            </summary>
            <seealso cref="T:Sitecore.Update.CodeAnalysis.CodeReferences.DerivedFromModifiedTypeReferenceInfo" />
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeReferences.DerivedFromRemovedTypeReferenceInfo.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.CodeAnalysis.CodeReferences.DerivedFromRemovedTypeReferenceInfo"/> class.
            </summary>
            <param name="consumerAssembly">The consumer assembly.</param>
            <param name="consumerType">Type of the consumer.</param>
            <param name="referencedAssembly">The referenced assembly.</param>
            <param name="referencedType">Type of the referenced.</param>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.CodeReferences.DerivedFromRemovedTypeReferenceInfo.ShortDescription">
            <summary>
            Gets the short description.
            </summary>
            <value>
            The short description.
            </value>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.CodeReferences.DerivedFromRemovedTypeReferenceInfo.LongDescription">
            <summary>
            Gets the long description.
            </summary>
            <value>
            The long description.
            </value>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.CodeReferences.MemberReferenceInfo">
            <summary>
            Base clss to info classes that require information about members.
            </summary>
            <seealso cref="T:Sitecore.Update.CodeAnalysis.CodeReferences.TypeReferenceInfo" />
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeReferences.MemberReferenceInfo.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.CodeAnalysis.CodeReferences.MemberReferenceInfo"/> class.
            </summary>
            <param name="consumerAssembly">The consumer assembly.</param>
            <param name="consumerType">Type of the consumer.</param>
            <param name="consumerMemberName">Name of the consumer member.</param>
            <param name="referencedAssembly">The referenced assembly.</param>
            <param name="referencedType">Type of the referenced.</param>
            <param name="referencedMemberName">Name of the referenced member.</param>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.CodeReferences.MemberReferenceInfo.ReferencedMemberName">
            <summary>
            Gets the name of the referenced member.
            </summary>
            <value>
            The name of the referenced member.
            </value>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.CodeReferences.MemberReferenceInfo.ConsumerMemberName">
            <summary>
            Gets the name of the consumer member.
            </summary>
            <value>
            The name of the consumer member.
            </value>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeReferences.MemberReferenceInfo.SimilarTo(Sitecore.Update.CodeAnalysis.CodeReferences.CodeReferenceInfo)">
            <summary>
            Similars to.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.CodeReferences.RemovedLinkedAssemblyReferenceInfo">
            <summary>
            CodeReferenceInfo that informs about a situation when referenced assembly has been removed.
            </summary>
            <seealso cref="T:Sitecore.Update.CodeAnalysis.CodeReferences.CodeReferenceInfo" />
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeReferences.RemovedLinkedAssemblyReferenceInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.CodeAnalysis.CodeReferences.RemovedLinkedAssemblyReferenceInfo"/> class.
            </summary>
            <param name="consumerAssemblyName">Name of the referrer assembly.</param>
            <param name="referencedAssemblyName">Name of the referenced assembly.</param>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.CodeReferences.RemovedLinkedAssemblyReferenceInfo.ShortDescription">
            <summary>
            Gets the short description.
            </summary>
            <value>
            The short description.
            </value>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.CodeReferences.RemovedLinkedAssemblyReferenceInfo.LongDescription">
            <summary>
            Gets the long description.
            </summary>
            <value>
            The long description.
            </value>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.CodeReferences.TypeReferenceInfo">
            <summary>
            The base class that keeps type usage information.
            </summary>
            <seealso cref="T:Sitecore.Update.CodeAnalysis.CodeReferences.CodeReferenceInfo" />
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeReferences.TypeReferenceInfo.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.CodeAnalysis.CodeReferences.DerivedFromModifiedTypeReferenceInfo"/> class.
            </summary>
            <param name="consumerAssembly">The consumer assembly.</param>
            <param name="consumerType">Type of the consumer.</param>
            <param name="referencedAssembly">The referenced assembly.</param>
            <param name="referencedType">Type of the referenced.</param>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.CodeReferences.TypeReferenceInfo.ConsumerType">
            <summary>
            Gets the type of the consumer.
            </summary>
            <value>
            The type of the consumer.
            </value>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.CodeReferences.TypeReferenceInfo.ReferencedType">
            <summary>
            Gets the type of the referenced.
            </summary>
            <value>
            The type of the referenced.
            </value>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeReferences.TypeReferenceInfo.SimilarTo(Sitecore.Update.CodeAnalysis.CodeReferences.CodeReferenceInfo)">
            <summary>
            Similars to.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.CodeReferences.UsedModifiedTypeReferenceInfo">
            <summary>
            CodeReferenceInfo that informs about a situation when the type in the specified assembly uses the type that has breaking changes.
            </summary>
            <seealso cref="T:Sitecore.Update.CodeAnalysis.CodeReferences.DerivedFromModifiedTypeReferenceInfo" />
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeReferences.UsedModifiedTypeReferenceInfo.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.CodeAnalysis.CodeReferences.UsedModifiedTypeReferenceInfo" /> class.
            </summary>
            <param name="consumerAssembly">The consumer assembly.</param>
            <param name="consumerType">Type of the consumer.</param>
            <param name="consumerMemberName">Name of the consumer member.</param>
            <param name="referencedAssembly">The referenced assembly.</param>
            <param name="referencedType">Type of the referenced.</param>
            <param name="referencedMemberName">Name of the referenced member.</param>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.CodeReferences.UsedModifiedTypeReferenceInfo.ShortDescription">
            <summary>
            Gets the short description.
            </summary>
            <value>
            The short description.
            </value>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.CodeReferences.UsedModifiedTypeReferenceInfo.LongDescription">
            <summary>
            Gets the long description.
            </summary>
            <value>
            The long description.
            </value>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.CodeReferences.UsedRemovedTypeReferenceInfo">
            <summary>
            CodeReferenceInfo that informs about a situation when the type in the specified assembly uses the type that has been removed.
            </summary>
            <seealso cref="T:Sitecore.Update.CodeAnalysis.CodeReferences.DerivedFromRemovedTypeReferenceInfo" />
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.CodeReferences.UsedRemovedTypeReferenceInfo.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.CodeAnalysis.CodeReferences.UsedRemovedTypeReferenceInfo" /> class.
            </summary>
            <param name="consumerAssembly">The consumer assembly.</param>
            <param name="consumerType">Type of the consumer.</param>
            <param name="consumerMemberName">Name of the consumer member.</param>
            <param name="referencedAssembly">The referenced assembly.</param>
            <param name="referencedType">Type of the referenced.</param>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.CodeReferences.UsedRemovedTypeReferenceInfo.ShortDescription">
            <summary>
            Gets the short description.
            </summary>
            <value>
            The short description.
            </value>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.CodeReferences.UsedRemovedTypeReferenceInfo.LongDescription">
            <summary>
            Gets the long description.
            </summary>
            <value>
            The long description.
            </value>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.IL.ByteArrayExtensions">
            <summary>
            The extension method for array of bytes.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.IL.ByteArrayExtensions.GetInt32(System.Byte[],System.Int32)">
            <summary>
            Gets the int32.
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="index">The index.</param>
            <returns>The int value.</returns>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.IL.Extensions.ConstructorInfoExtensions">
            <summary>
            The extension methods for ConstructorInfo.
            </summary>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.IL.Extensions.FieldInfoExtensions">
            <summary>
            The extension methods for FieldInfo.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.IL.Extensions.FieldInfoExtensions.ToFormattedString(System.Reflection.FieldInfo)">
            <summary>
            To the formatted string.
            </summary>
            <param name="fieldInfo">The field information.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.IL.Extensions.MethodBaseExtensions">
            <summary>
            The extension methods for MethodBase.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.IL.Extensions.MethodBaseExtensions.ToFormattedString(System.Reflection.MethodBase)">
            <summary>
            To the formatted string.
            </summary>
            <param name="methodBase">The method base.</param>
            <returns>The formatted string that represents the specified method.</returns>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.IL.Extensions.MethodInfoExtensions">
            <summary>
            The extension methods for MethodInfo.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.IL.Extensions.MethodInfoExtensions.ToFormattedString(System.Reflection.MethodInfo)">
            <summary>
            To the formatted string.
            </summary>
            <param name="methodInfo">The method information.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.IL.Extensions.ParameterInfoExtensions">
            <summary>
            The extension methods for ParameterInfo.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.IL.Extensions.ParameterInfoExtensions.ToFormattedString(System.Reflection.ParameterInfo)">
            <summary>
            Represents the ParameterInfo as the formatted string.
            </summary>
            <param name="parameterInfo">The parameter information.</param>
            <returns>The formatted string that represents current ParameterInfo.</returns>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.IL.Extensions.TypeExtensions">
            <summary>
            The extension methods for Type object.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.IL.Extensions.TypeExtensions.ToFormattedString(System.Type)">
            <summary>
            To the formatted string.
            </summary>
            <param name="type">The type.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.IL.MemberInstruction">
            <summary>
            Represents the member call instruction in IL.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.IL.MemberInstruction.#ctor(System.Reflection.Emit.OpCode,System.Reflection.MemberInfo,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.CodeAnalysis.IL.MemberInstruction"/> class.
            </summary>
            <param name="opCode">The op code.</param>
            <param name="instruction">The instruction.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.IL.MemberInstruction.OpCode">
            <summary>
            Gets the op code.
            </summary>
            <value>
            The op code.
            </value>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.IL.MemberInstruction.Instruction">
            <summary>
            Gets the instruction.
            </summary>
            <value>
            The instruction.
            </value>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.IL.MemberInstruction.AssemblyName">
            <summary>
            Gets the name of the assembly.
            </summary>
            <value>
            The name of the assembly.
            </value>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.IL.MemberInstruction.MemberName">
            <summary>
            Gets the name of the member.
            </summary>
            <value>
            The name of the member.
            </value>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.IL.MemberInstruction.TypeName">
            <summary>
            Gets the name of the type.
            </summary>
            <value>
            The name of the type.
            </value>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.IL.MemberInstruction.Offset">
            <summary>
            Gets the offset.
            </summary>
            <value>
            The offset.
            </value>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.IL.MemberInstruction.ParseInstruction">
            <summary>
            Parses the instruction.
            </summary>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.IL.MethodBodyParser">
            <summary>
            Parses the specified method and return method content as an array of MemberInstruction objects.
            </summary>
        </member>
        <member name="F:Sitecore.Update.CodeAnalysis.IL.MethodBodyParser._opCodeMap">
            <summary>
            The opCode map.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.IL.MethodBodyParser.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Sitecore.Update.CodeAnalysis.IL.MethodBodyParser"/> class. 
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.IL.MethodBodyParser.Parse(System.Reflection.MethodBase)">
            <summary>
            Parses the specified method.
            </summary>
            <param name="method">The method.</param>
            <returns>The array of MemberInstruction objects</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.IL.MethodBodyParser.GetMethodGenericArguments(System.Reflection.MethodBase)">
            <summary>
            Gets the method generic arguments.
            </summary>
            <param name="method">The method.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.IL.MethodBodyParser.GetOpCode(System.Int16)">
            <summary>
            Gets the op code.
            </summary>
            <param name="opCodeValue">The op code value.</param>
            <returns>The OpCode.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.IL.MethodBodyParser.GetMethodBody(System.Reflection.MethodBase)">
            <summary>
            Gets the method body.
            </summary>
            <param name="method">The method.</param>
            <returns>The MethodBody.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.IL.MethodBodyParser.InitializeOpCodeMap">
            <summary>
            Initializes the op codes.
            </summary>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.Report.BreakingChangesReport">
            <summary>
            Represents a wrapper on the breaking changes report file.
            </summary>
        </member>
        <member name="F:Sitecore.Update.CodeAnalysis.Report.BreakingChangesReport.reportStream">
            <summary>
            The report file stream reader.
            </summary>
        </member>
        <member name="F:Sitecore.Update.CodeAnalysis.Report.BreakingChangesReport.breakingChangesList">
            <summary>
            The breaking changes list.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.BreakingChangesReport.#ctor(System.IO.StreamReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.CodeAnalysis.Report.BreakingChangesReport"/> class.
            </summary>
            <param name="streamReader">The report stream reader.</param>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.Report.BreakingChangesReport.ContexAssemblyName">
            <summary>
            Gets or sets the parsed assembly name.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.BreakingChangesReport.ReadLine">
            <summary>
            Returns the next line from the report stream.
            </summary>
            <returns>The next line from the report stream</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.BreakingChangesReport.AddBreakingChange(Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo)">
            <summary>
            Adds a breaking change to the list.
            </summary>
            <param name="codeMemberInfo">The code member info.</param>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.BreakingChangesReport.GetBreakingChanges">
            <summary>
            Returns the list of the breaking changes parsed from report.
            </summary>
            <returns>The list of the breaking changes parsed from report.</returns>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.Report.BreakingChangesReportParser">
            <summary>
            Represents breaking changes report parser object.
            </summary>
        </member>
        <member name="F:Sitecore.Update.CodeAnalysis.Report.BreakingChangesReportParser.lockObject">
            <summary>
            The lock object.
            </summary>
        </member>
        <member name="F:Sitecore.Update.CodeAnalysis.Report.BreakingChangesReportParser.lineHandlers">
            <summary>
            The list of line handlers.
            </summary>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.Report.BreakingChangesReportParser.LineHandlers">
            <summary>
            Gets the list of line handlers.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.BreakingChangesReportParser.ParseReport(System.String)">
            <summary>
            Parse the file with breaking changes report.
            </summary>
            <param name="filePath">The file path.</param>
            <returns>The list of <see cref="T:Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo"/> object that represents breaking changes.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.BreakingChangesReportParser.ParseReport(System.IO.Stream)">
            <summary>
            Parse the file with breaking changes report.
            </summary>
            <param name="stream">The file stream.</param>
            <returns>The list of <see cref="T:Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo"/> object that represents breaking changes.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.BreakingChangesReportParser.ParseReport(System.IO.StreamReader)">
            <summary>
            Parse the file with breaking changes report.
            </summary>
            <param name="streamReader">The stream reader with open breaking changes report file.</param>
            <returns>The list of <see cref="T:Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo"/> object that represents breaking changes.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.BreakingChangesReportParser.GetLineHandlers">
            <summary>
            Returns the list of subclasses of the <see cref="T:Sitecore.Update.CodeAnalysis.Report.LineHandlers.ReportLineHandler"/> class.
            </summary>
            <returns>The list of subclasses of the <see cref="T:Sitecore.Update.CodeAnalysis.Report.LineHandlers.ReportLineHandler"/> class.</returns>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.Report.LineHandlers.AssemblyNameLineHandler">
            <summary>
            Handles the report line with assembly name.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.AssemblyNameLineHandler.CanHandle(System.String)">
            <summary>
            Checks whether report line can be handled by the current instance.
            </summary>
            <param name="line">The report line.</param>
            <returns>The value indication whether report line can be handled by the current instance.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.AssemblyNameLineHandler.Handle(System.String,Sitecore.Update.CodeAnalysis.Report.BreakingChangesReport)">
            <summary>
            Handles the report line and updates the report instance.
            </summary>
            <param name="line">The report line.</param>
            <param name="report">The report object.</param>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.Report.LineHandlers.BreakingChangeLineHandler">
            <summary>
            The base class for report breaking changes line handlers.
            </summary>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.Report.LineHandlers.BreakingChangeLineHandler.LineType">
            <summary>
            Gets or sets the type of the report line.
            </summary>
        </member>
        <member name="P:Sitecore.Update.CodeAnalysis.Report.LineHandlers.BreakingChangeLineHandler.LineData">
            <summary>
            Gets or sets the data of the report line.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.BreakingChangeLineHandler.Handle(System.String,Sitecore.Update.CodeAnalysis.Report.BreakingChangesReport)">
            <summary>
            Handles the report line and updates the report instance.
            </summary>
            <param name="line">The report line.</param>
            <param name="report">The report object.</param>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.Report.LineHandlers.IntroduceNewAbstractMethodLineHandler">
            <summary>
            Handles the report line with adding new abstract method.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.IntroduceNewAbstractMethodLineHandler.CanHandle(System.String)">
            <summary>
            Checks whether report line can be handled by the current instance.
            </summary>
            <param name="line">The report line.</param>
            <returns>The value indication whether report line can be handled by the current instance.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.IntroduceNewAbstractMethodLineHandler.Handle(System.String,Sitecore.Update.CodeAnalysis.Report.BreakingChangesReport)">
            <summary>
            Handles the report line and updates the report instance.
            </summary>
            <param name="line">The report line.</param>
            <param name="report">The report object.</param>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.Report.LineHandlers.MemberRemovedLineHandler">
            <summary>
            Handles the report line with removing type members.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.MemberRemovedLineHandler.CanHandle(System.String)">
            <summary>
            Checks whether report line can be handled by the current instance.
            </summary>
            <param name="line">The report line.</param>
            <returns>The value indication whether report line can be handled by the current instance.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.MemberRemovedLineHandler.Handle(System.String,Sitecore.Update.CodeAnalysis.Report.BreakingChangesReport)">
            <summary>
            Handles the report line and updates the report instance.
            </summary>
            <param name="line">The report line.</param>
            <param name="report">The report object.</param>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.Report.LineHandlers.MemberChangedLineHandler">
            <summary>
            Handles the report line with changing type members.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.MemberChangedLineHandler.CanHandle(System.String)">
            <summary>
            Checks whether report line can be handled by the current instance.
            </summary>
            <param name="line">The report line.</param>
            <returns>The value indication whether report line can be handled by the current instance.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.MemberChangedLineHandler.Handle(System.String,Sitecore.Update.CodeAnalysis.Report.BreakingChangesReport)">
            <summary>
            Handles the report line and updates the report instance.
            </summary>
            <param name="line">The report line.</param>
            <param name="report">The report object.</param>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.Report.LineHandlers.MissingAssemblyLineHandler">
            <summary>
            Handles the report line with missing assembly.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.MissingAssemblyLineHandler.CanHandle(System.String)">
            <summary>
            Checks whether report line can be handled by the current instance.
            </summary>
            <param name="line">The report line.</param>
            <returns>The value indication whether report line can be handled by the current instance.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.MissingAssemblyLineHandler.Handle(System.String,Sitecore.Update.CodeAnalysis.Report.BreakingChangesReport)">
            <summary>
            Handles the report line and updates the report instance.
            </summary>
            <param name="line">The report line.</param>
            <param name="report">The report object.</param>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.Report.LineHandlers.ParameterChangedLineHandler">
            <summary>
            Handles the report line with changing method parameters.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.ParameterChangedLineHandler.CanHandle(System.String)">
            <summary>
            Checks whether report line can be handled by the current instance.
            </summary>
            <param name="line">The report line.</param>
            <returns>The value indication whether report line can be handled by the current instance.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.ParameterChangedLineHandler.Handle(System.String,Sitecore.Update.CodeAnalysis.Report.BreakingChangesReport)">
            <summary>
            Handles the report line and updates the report instance.
            </summary>
            <param name="line">The report line.</param>
            <param name="report">The report object.</param>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.Report.LineHandlers.ReportLineHandler">
            <summary>
            The base class for report line handlers.
            </summary>
        </member>
        <member name="F:Sitecore.Update.CodeAnalysis.Report.LineHandlers.ReportLineHandler.AssemblyExtension">
            <summary>
            The assembly file extension.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.ReportLineHandler.CanHandle(System.String)">
            <summary>
            Checks whether report line can be handled by the current instance.
            </summary>
            <param name="line">The report line.</param>
            <returns>The value indication whether report line can be handled by the current instance.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.ReportLineHandler.Handle(System.String,Sitecore.Update.CodeAnalysis.Report.BreakingChangesReport)">
            <summary>
            Handles the report line and updates the report instance.
            </summary>
            <param name="line">The report line.</param>
            <param name="report">The report object.</param>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.ReportLineHandler.GetTypeNameFromAssemblyQualifiedName(System.String)">
            <summary>
            Returns type full name from assembly qualified type name.
            </summary>
            <param name="typeName">The assembly qualified type name.</param>
            <returns>Type full name.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.ReportLineHandler.GetAssemblyNameWithoutExtension(System.String)">
            <summary>
            Returns assembly name without file extension.
            </summary>
            <param name="assemblyName">The assembly file name.</param>
            <returns>Assembly name without file extension</returns>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.Report.LineHandlers.TypeChangedLineHandler">
            <summary>
            Handles the report line with changing type.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.TypeChangedLineHandler.CanHandle(System.String)">
            <summary>
            Checks whether report line can be handled by the current instance.
            </summary>
            <param name="line">The report line.</param>
            <returns>The value indication whether report line can be handled by the current instance.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.TypeChangedLineHandler.Handle(System.String,Sitecore.Update.CodeAnalysis.Report.BreakingChangesReport)">
            <summary>
            Handles the report line and updates the report instance.
            </summary>
            <param name="line">The report line.</param>
            <param name="report">The report object.</param>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.Report.LineHandlers.TypeInheritanceLineHandler">
            <summary>
            Handles the report line with changing type inheritance.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.TypeInheritanceLineHandler.CanHandle(System.String)">
            <summary>
            Checks whether report line can be handled by the current instance.
            </summary>
            <param name="line">The report line.</param>
            <returns>The value indication whether report line can be handled by the current instance.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.TypeInheritanceLineHandler.Handle(System.String,Sitecore.Update.CodeAnalysis.Report.BreakingChangesReport)">
            <summary>
            Handles the report line and updates the report instance.
            </summary>
            <param name="line">The report line.</param>
            <param name="report">The report object.</param>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.Report.LineHandlers.TypeRemovedLineHandler">
            <summary>
            Handles the report line with removing type.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.TypeRemovedLineHandler.CanHandle(System.String)">
            <summary>
            Checks whether report line can be handled by the current instance.
            </summary>
            <param name="line">The report line.</param>
            <returns>The value indication whether report line can be handled by the current instance.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.TypeRemovedLineHandler.Handle(System.String,Sitecore.Update.CodeAnalysis.Report.BreakingChangesReport)">
            <summary>
            Handles the report line and updates the report instance.
            </summary>
            <param name="line">The report line.</param>
            <param name="report">The report object.</param>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.Report.LineHandlers.TypeSealedLineHandler">
            <summary>
            Handles the report line with making type sealed.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.TypeSealedLineHandler.CanHandle(System.String)">
            <summary>
            Checks whether report line can be handled by the current instance.
            </summary>
            <param name="line">The report line.</param>
            <returns>The value indication whether report line can be handled by the current instance.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.Report.LineHandlers.TypeSealedLineHandler.Handle(System.String,Sitecore.Update.CodeAnalysis.Report.BreakingChangesReport)">
            <summary>
            Handles the report line and updates the report instance.
            </summary>
            <param name="line">The report line.</param>
            <param name="report">The report object.</param>
        </member>
        <member name="T:Sitecore.Update.CodeAnalysis.UsageProvider">
            <summary>
            Provide information about usages of specified code parts.
            </summary>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.UsageProvider.FindCodeReferences(System.Reflection.Assembly,Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Returns collection of the code references.
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="members">The members.</param>
            <returns>The collection of references of the specified code collection in specified assembly.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.UsageProvider.FilterCodeReferenceInfos(Sitecore.Update.CodeAnalysis.CodeReferences.CodeReferenceInfo[])">
            <summary>
            Filters the code reference infos.
            </summary>
            <param name="references">The references.</param>
            <returns>Filtered reference infos.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.UsageProvider.FilterDuplicatedUsages(Sitecore.Update.CodeAnalysis.CodeReferences.CodeReferenceInfo[])">
            <summary>
            Filters the duplicated usages.
            </summary>
            <param name="references">The references.</param>
            <returns>Unique usages.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.UsageProvider.FilterGenericUsages(Sitecore.Update.CodeAnalysis.CodeReferences.CodeReferenceInfo[])">
            <summary>
            Filters the more generic infos.
            </summary>
            <param name="references">The references.</param>
            <returns>The most specific messages.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.UsageProvider.FilterDuplicatedUsagesForRemovedType(Sitecore.Update.CodeAnalysis.CodeReferences.CodeReferenceInfo[])">
            <summary>
            Filters the duplicated usages removed type.
            </summary>
            <param name="references">The references.</param>
            <returns>Filtered array.</returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.UsageProvider.GetAssemblyLevelAnalyzers(System.Reflection.Assembly,Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Gets the assembly level analyzers.
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="members">The members.</param>
            <returns>
            The collection of code analyzers to apply.
            </returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.UsageProvider.GetTypeLevelAnalyzers(System.Reflection.Assembly,Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Gets the type level analyzers.
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="members">The members.</param>
            <returns>
            The collection of code analyzers to apply.
            </returns>
        </member>
        <member name="M:Sitecore.Update.CodeAnalysis.UsageProvider.GetCandidatesForAssembly(System.Reflection.Assembly,Sitecore.Update.CodeAnalysis.CodeMembers.CodeMemberInfo[])">
            <summary>
            Gets the candidates that should be checked for the specified assembly.
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="members">The members to check.</param>
            <returns>A collection of members that should be checked for the specified assembly.</returns>
        </member>
        <member name="T:Sitecore.Update.Commands.AddBreakingChangesFileCommand">
            <summary>
            Represents add breaking changes report operation.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.AddBreakingChangesFileCommand.commandPrefix">
            <summary>
            The command unique prefix.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.AddBreakingChangesFileCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.AddBreakingChangesFileCommand" /> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.AddBreakingChangesFileCommand.#ctor(Sitecore.Update.Data.Items.FileSystemDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.AddBreakingChangesFileCommand" /> class.
            </summary>
            <param name="item">The data item.</param>
        </member>
        <member name="P:Sitecore.Update.Commands.AddBreakingChangesFileCommand.CommandPrefix">
            <summary>
            Gets the command prefix.
            </summary>
            <value>The command prefix.</value>
        </member>
        <member name="T:Sitecore.Update.Commands.AddFieldCommand">
            <summary>
            The Add field command.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.AddFieldCommand.commandPrefix">
            <summary>
            The command unique prefix.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.AddFieldCommand.syncField">
            <summary>
            The sync field to be added.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.AddFieldCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.AddFieldCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.AddFieldCommand.#ctor(Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Data.Serialization.ObjectModel.SyncField)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.AddFieldCommand"/> class.
            </summary>
            <param name="item">The data item.</param>
            <param name="field">The field.</param>
        </member>
        <member name="P:Sitecore.Update.Commands.AddFieldCommand.AddedField">
            <summary>
            Gets the added field.
            </summary>
            <value>The added field.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.AddFieldCommand.CommandPrefix">
            <summary>
            Gets the command prefix.
            </summary>
            <value>The command prefix.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.AddFieldCommand.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="M:Sitecore.Update.Commands.AddFieldCommand.SerializeFieldCommand(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the field command.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.AddFieldCommand.LoadFieldCommand(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the field command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.AddFieldCommand.SerializeCollisionBehavior(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the collision behavior.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.AddFieldCommand.LoadCollisionBehavior(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the collision behavior.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Commands.AddFileCommand">
            <summary>
            The Add file command.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.AddFileCommand.BufferSize">
            <summary>
            The buffer size.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.AddFileCommand.commandPrefix">
            <summary>
            The command unique prefix.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.AddFileCommand.stream">
            <summary>
            The file stream.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.AddFileCommand.hashCode">
            <summary>
            The file hash code.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.AddFileCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.AddFileCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.AddFileCommand.#ctor(Sitecore.Update.Data.Items.FileSystemDataItem,System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.AddFileCommand" /> class.
            </summary>
            <param name="item">The data item.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.AddFileCommand.#ctor(Sitecore.Update.Data.Items.FileSystemDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.AddFileCommand"/> class.
            </summary>
            <param name="item">The data item.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.AddFileCommand.DoCommandDispose">
            <summary>
            Does the command dispose.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.AddFileCommand.Finalize">
            <summary>
            Finalizes an instance of the AddFileCommand class.
            <see cref="T:Sitecore.Update.Commands.AddFileCommand"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Commands.AddFileCommand.FileLength">
            <summary>
            Gets the length of the file.
            </summary>
            <value>The length of the file.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.AddFileCommand.File">
            <summary>
            Gets the file stream.
            </summary>
            <value>The file stream.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.AddFileCommand.CommandPrefix">
            <summary>
            Gets the command prefix.
            </summary>
            <value>The command prefix.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.AddFileCommand.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.AddFileCommand.HashCode">
            <summary>
            Gets the hash code.
            </summary>
            <value>The hash code.</value>
        </member>
        <member name="M:Sitecore.Update.Commands.AddFileCommand.SetStream(System.IO.Stream)">
            <summary>
            Sets the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.AddFileCommand.LoadCommand(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.AddFileCommand.SerializeCommand(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the command.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.AddFileCommand.SerializeCollisionBehavior(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the collision behavior.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.AddFileCommand.LoadCollisionBehavior(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the collision behavior.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Commands.AddFolderCommand">
            <summary>
            The Add folder command.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.AddFolderCommand.commandPrefix">
            <summary>
            The command unique prefix.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.AddFolderCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.AddFolderCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.AddFolderCommand.#ctor(Sitecore.Update.Data.Items.FolderDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.AddFolderCommand"/> class.
            </summary>
            <param name="item">The data item.</param>
        </member>
        <member name="P:Sitecore.Update.Commands.AddFolderCommand.CommandPrefix">
            <summary>
            Gets the command prefix.
            </summary>
            <value>The command prefix.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.AddFolderCommand.Description">
            <summary>
            Gets the command description.
            </summary>
            <value>The command description.</value>
        </member>
        <member name="T:Sitecore.Update.Commands.AddItemCommand">
            <summary>
            The Add item command.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.AddItemCommand.commandPrefix">
            <summary>
            The comamnd unique prefix.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.AddItemCommand.syncItem">
            <summary>
            The command SyncItem.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.AddItemCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.AddItemCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.AddItemCommand.#ctor(Sitecore.Update.Data.Items.ContentDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.AddItemCommand"/> class.
            </summary>
            <param name="item">The data item to be added.</param>
        </member>
        <member name="P:Sitecore.Update.Commands.AddItemCommand.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.AddItemCommand.AddedItem">
            <summary>
            Gets the added item.
            </summary>
            <value>The added item.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.AddItemCommand.CommandPrefix">
            <summary>
            Gets the command prefix.
            </summary>
            <value>The command prefix.</value>
        </member>
        <member name="M:Sitecore.Update.Commands.AddItemCommand.SerializeCommand(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the command.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.AddItemCommand.LoadCommand(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.AddItemCommand.SerializeCollisionBehavior(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the collision behavior.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.AddItemCommand.LoadCollisionBehavior(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the collision behavior.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Commands.AddVersionCommand">
            <summary>
            The Add version command.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.AddVersionCommand.commandPrefix">
            <summary>
            The command unique prefix.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.AddVersionCommand.language">
            <summary>
            The item language.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.AddVersionCommand.version">
            <summary>
            The item version
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.AddVersionCommand.syncVersion">
            <summary>
            The Sync item version to be added.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.AddVersionCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.AddVersionCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.AddVersionCommand.#ctor(Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Data.Serialization.ObjectModel.SyncVersion)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.AddVersionCommand"/> class.
            </summary>
            <param name="item">The data item.</param>
            <param name="version">The version.</param>
        </member>
        <member name="P:Sitecore.Update.Commands.AddVersionCommand.Language">
            <summary>
            Gets the item language.
            </summary>
            <value>The item language.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.AddVersionCommand.Version">
            <summary>
            Gets the item version.
            </summary>
            <value>The item version.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.AddVersionCommand.AddedVersion">
            <summary>
            Gets the added version.
            </summary>
            <value>The added version.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.AddVersionCommand.CommandPrefix">
            <summary>
            Gets the command prefix.
            </summary>
            <value>The command prefix.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.AddVersionCommand.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="M:Sitecore.Update.Commands.AddVersionCommand.SerializeCommand(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the command.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.AddVersionCommand.LoadCommand(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.AddVersionCommand.SerializeCollisionBehavior(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the collision behavior.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.AddVersionCommand.LoadCollisionBehavior(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the collision behavior.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Commands.BaseCommand">
            <summary>
            The base command.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.BaseCommand.behavior">
            <summary>
            The collision behavior.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.BaseCommand.disposed">
            <summary>
            The disposed
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.BaseCommand.item">
            <summary>
            The data item.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.BaseCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseCommand.#ctor(Sitecore.Update.Data.Items.DataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.BaseCommand"/> class.
            </summary>
            <param name="item">The data item.</param>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseCommand.CommandPrefix">
            <summary>
            Gets the command prefix.
            </summary>
            <value>The command prefix.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseCommand.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseCommand.EntityID">
            <summary>
            Gets the entity ID.
            </summary>
            <value>The entity ID.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseCommand.EntityPath">
            <summary>
            Gets the entity path.
            </summary>
            <value>The entity path.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseCommand.Parent">
            <summary>
            Gets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseCommand.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseCommand.CollisionBehavior">
            <summary>
            Gets or sets the collision behavior.
            </summary>
            <value>The collision behavior.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseCommand.Item">
            <summary>
            Gets the data item.
            </summary>
            <value>The data item.</value>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseCommand.GenerateUpdateCommand(Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Generates the update command.
            </summary>
            <param name="command">The command.</param>
            <returns>
            The list of commands to apply to get the Update operation.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseCommand.ApplyFilter(Sitecore.Update.Interfaces.ICommandFilter)">
            <summary>
            Applies the filter to the command.
            </summary>
            <param name="filter">The data filter.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseCommand.Serialize(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the entity.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseCommand.Load(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the entity.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseCommand.SerializeCommand(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the command.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseCommand.LoadCommand(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseCommand.GenerateAddCommand">
            <summary>
            Generates the add command.
            </summary>
            <returns>
            The List of comamnds to implement Add data item operation.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseCommand.GenerateDeleteCommand">
            <summary>
            Generates the delete command.
            </summary>
            <returns>
            The List of comamnds to implement Delete data item operation.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseCommand.GenerateUpdateCommand(Sitecore.Update.Interfaces.IDataItem)">
            <summary>
            Generates the update command.
            </summary>
            <param name="dataItem">The data item.</param>
            <returns>
            The List of comamnds to implement Change data item operation.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseCommand.SerializeCollisionBehavior(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the collision behavior.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseCommand.LoadCollisionBehavior(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the collision behavior.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseCommand.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Sitecore.Update.Commands.BaseCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseCommand.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseCommand.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseCommand.DoCommandDispose">
            <summary>
            Does the command dispose.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Commands.BaseFieldCommand">
            <summary>
            The base command for item field commands.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.BaseFieldCommand.language">
            <summary>
            The item language.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.BaseFieldCommand.version">
            <summary>
            The item version.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.BaseFieldCommand.fieldName">
            <summary>
            The field name.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.BaseFieldCommand.fieldID">
            <summary>
            The field ID.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseFieldCommand.#ctor(Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Data.Serialization.ObjectModel.SyncField)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.BaseFieldCommand"/> class.
            </summary>
            <param name="item">The data item.</param>
            <param name="field">The field.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseFieldCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.BaseFieldCommand"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseFieldCommand.FieldID">
            <summary>
            Gets the field ID.
            </summary>
            <value>The field ID.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseFieldCommand.FieldName">
            <summary>
            Gets the name of the field.
            </summary>
            <value>The name of the field.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseFieldCommand.Language">
            <summary>
            Gets or sets the item language.
            </summary>
            <value>The item language.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseFieldCommand.Version">
            <summary>
            Gets or sets the item version.
            </summary>
            <value>The item version.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseFieldCommand.IsShared">
            <summary>
            Gets a value indicating whether this field is shared.
            </summary>
            <value><c>true</c> if this field is shared; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseFieldCommand.SerializeCommand(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the command.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseFieldCommand.LoadCommand(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseFieldCommand.LoadFieldCommand(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the field command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseFieldCommand.SerializeFieldCommand(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the field command.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Commands.BaseFileCommand">
            <summary>
            The base command for file operations.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.BaseFileCommand.relatedFilePath">
            <summary>
            The related file path.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.BaseFileCommand.fileID">
            <summary>
            The unique file ID.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseFileCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.BaseFileCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseFileCommand.#ctor(Sitecore.Update.Data.Items.FileSystemDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.BaseFileCommand"/> class.
            </summary>
            <param name="item">The data item.</param>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseFileCommand.FilePath">
            <summary>
            Gets the file path.
            </summary>
            <value>The file path.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseFileCommand.CommandPrefix">
            <summary>
            Gets the command prefix.
            </summary>
            <value>The command prefix.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseFileCommand.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseFileCommand.EntityID">
            <summary>
            Gets the entity ID.
            </summary>
            <value>The entity ID.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseFileCommand.EntityPath">
            <summary>
            Gets the entity path.
            </summary>
            <value>The entity path.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseFileCommand.Parent">
            <summary>
            Gets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseFileCommand.GenerateUpdateCommand(Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Generates the update command.
            </summary>
            <param name="command">The command.</param>
            <returns>The list of commands to implement Update file operation.</returns>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseFileCommand.Serialize(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the specified command.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseFileCommand.Load(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the specified command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseFileCommand.SerializeCommand(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the command.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseFileCommand.LoadCommand(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseFileCommand.SerializeCollisionBehavior(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the collision behavior.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseFileCommand.LoadCollisionBehavior(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the collision behavior.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseFileCommand.SetStream(System.IO.Stream)">
            <summary>
            Sets the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="T:Sitecore.Update.Commands.BaseItemCommand">
            <summary>
            The base item command.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.BaseItemCommand.databaseName">
            <summary>
            The database name.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.BaseItemCommand.itemID">
            <summary>
            The data item ID.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.BaseItemCommand.itemPath">
            <summary>
            The item path.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.BaseItemCommand.parentID">
            <summary>
            The Parent ID.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseItemCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.BaseItemCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseItemCommand.#ctor(Sitecore.Update.Data.Items.ContentDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.BaseItemCommand"/> class.
            </summary>
            <param name="item">The data item.</param>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseItemCommand.CommandPrefix">
            <summary>
            Gets the command prefix.
            </summary>
            <value>The command prefix.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseItemCommand.DatabaseName">
            <summary>
            Gets the name of the database.
            </summary>
            <value>The name of the database.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseItemCommand.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseItemCommand.EntityID">
            <summary>
            Gets the entity ID.
            </summary>
            <value>The entity ID.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseItemCommand.EntityPath">
            <summary>
            Gets the entity path.
            </summary>
            <value>The entity path.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseItemCommand.ItemID">
            <summary>
            Gets the item ID.
            </summary>
            <value>The item ID.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseItemCommand.ItemPath">
            <summary>
            Gets the item path.
            </summary>
            <value>The item path.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.BaseItemCommand.Parent">
            <summary>
            Gets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseItemCommand.Load(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the entity.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseItemCommand.LoadCommand(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseItemCommand.Serialize(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the entity.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseItemCommand.SerializeCommand(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the command.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseItemCommand.GenerateUpdateCommand(Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Generates the update command.
            </summary>
            <param name="command">The command.</param>
            <returns>
            The list of commands to apply to get the Update operation.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseItemCommand.GetFieldCommands(Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Update.Data.Items.ContentDataItem,System.Collections.Generic.IList{Sitecore.Data.Serialization.ObjectModel.SyncField},System.Collections.Generic.IList{Sitecore.Data.Serialization.ObjectModel.SyncField},System.String,System.String)">
            <summary>
            Gets the field commands.
            </summary>
            <param name="sourceItem">The source item.</param>
            <param name="targetItem">The target item.</param>
            <param name="sourceFields">The source fields.</param>
            <param name="targetFields">The target fields.</param>
            <param name="language">The language.</param>
            <param name="version">The version.</param>
            <returns>The field commands.</returns>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseItemCommand.LoadCollisionBehavior(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the collision behavior.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseItemCommand.SerializeCollisionBehavior(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the collision behavior.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.BaseItemCommand.InitializeChanges(System.Object,System.Object)">
            <summary>
            Initializes the changes.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <returns>The command changes.</returns>
        </member>
        <member name="T:Sitecore.Update.Commands.ChangeFieldCommand">
            <summary>
            The change field command.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.ChangeFieldCommand.commandPrefix">
            <summary>
            The command unique prefix.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.ChangeFieldCommand.changes">
            <summary>
            The list of changes.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeFieldCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.ChangeFieldCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeFieldCommand.#ctor(Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Data.Serialization.ObjectModel.SyncField,Sitecore.Data.Serialization.ObjectModel.SyncField)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.ChangeFieldCommand"/> class.
            </summary>
            <param name="item">The data item.</param>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeFieldCommand.Changes">
            <summary>
            Gets the changes.
            </summary>
            <value>The changes.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeFieldCommand.HasChanges">
            <summary>
            Gets a value indicating whether this instance has changes.
            </summary>
            <value>
              <c>true</c> if this instance has changes; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeFieldCommand.CommandPrefix">
            <summary>
            Gets the command prefix.
            </summary>
            <value>The command prefix.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeFieldCommand.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeFieldCommand.SerializeFieldCommand(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the field command.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeFieldCommand.LoadFieldCommand(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the field command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeFieldCommand.SerializeCollisionBehavior(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the collision behavior.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeFieldCommand.LoadCollisionBehavior(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the collision behavior.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Commands.ChangeFileCommand">
            <summary>
            Tha change file command.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.ChangeFileCommand.BufferSize">
            <summary>
            The buffer size.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.ChangeFileCommand.commandPrefix">
            <summary>
            The command unique prefix.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.ChangeFileCommand.oldHashCode">
            <summary>
            The hash of old file content.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.ChangeFileCommand.newHashCode">
            <summary>
            The hash of new file content.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.ChangeFileCommand.stream">
            <summary>
            The file content stream.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.ChangeFileCommand.originalStream">
            <summary>
            The original stream
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeFileCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.ChangeFileCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeFileCommand.#ctor(Sitecore.Update.Data.Items.FileSystemDataItem,Sitecore.Update.Data.Items.FileSystemDataItem,System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.ChangeFileCommand"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeFileCommand.#ctor(Sitecore.Update.Data.Items.FileSystemDataItem,Sitecore.Update.Data.Items.FileSystemDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.ChangeFileCommand"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeFileCommand.#ctor(Sitecore.Update.Data.Items.FileSystemDataItem,Sitecore.Update.Data.Items.FileSystemDataItem,System.IO.Stream,System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.ChangeFileCommand" /> class.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <param name="stream">The file stream.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeFileCommand.Finalize">
            <summary>
            Finalizes an instance of the ChangeFileCommand class.
            <see cref="T:Sitecore.Update.Commands.ChangeFileCommand"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeFileCommand.File">
            <summary>
            Gets the file.
            </summary>
            <value>The file content tream.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeFileCommand.OriginalFile">
            <summary>
            Gets the original (source) file.
            </summary>
            <value>
            The original file.
            </value>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeFileCommand.CommandPrefix">
            <summary>
            Gets the command prefix.
            </summary>
            <value>The command prefix.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeFileCommand.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeFileCommand.OldHashCode">
            <summary>
            Gets the old hash code.
            </summary>
            <value>The old hash code.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeFileCommand.NewHashCode">
            <summary>
            Gets the new hash code.
            </summary>
            <value>The new hash code.</value>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeFileCommand.SetStream(System.IO.Stream)">
            <summary>
            Sets the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeFileCommand.SetOriginalStream(System.IO.Stream)">
            <summary>
            Sets the original stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeFileCommand.SerializeCommand(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the command.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeFileCommand.SerializeFileStream(System.IO.Stream,System.String,System.String,System.Boolean,System.Xml.XmlWriter)">
            <summary>
            Serializes the file stream.
            </summary>
            <param name="fileStream">The stream.</param>
            <param name="baseLocation">The base location.</param>
            <param name="tagName">Name of the tag.</param>
            <param name="keepFileInXml">if set to <c>true</c> file should be serialized to diff xml.</param>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeFileCommand.LoadCommand(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeFileCommand.LoadCollisionBehavior(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the collision behavior.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeFileCommand.SerializeCollisionBehavior(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the collision behavior.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Commands.ChangeItemCommand">
            <summary>
            The Change item command.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.ChangeItemCommand.commandPrefix">
            <summary>
            The command unique prefix.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.ChangeItemCommand.changes">
            <summary>
            The list of command changed.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeItemCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.ChangeItemCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeItemCommand.#ctor(Sitecore.Update.Data.Items.ContentDataItem,System.Collections.Generic.List{Sitecore.Update.Interfaces.ICommand})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.ChangeItemCommand"/> class.
            </summary>
            <param name="target">The target.</param>
            <param name="innerCommands">The inner commands.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeItemCommand.#ctor(Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Update.Data.Items.ContentDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.ChangeItemCommand"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeItemCommand.Commands">
            <summary>
            Gets the commands.
            </summary>
            <value>The commands.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeItemCommand.CommandPrefix">
            <summary>
            Gets the command prefix.
            </summary>
            <value>The command prefix.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeItemCommand.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeItemCommand.CollisionBehavior">
            <summary>
            Gets or sets the collision behavior.
            </summary>
            <value>The collision behavior.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeItemCommand.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeItemCommand.SerializeCommand(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the command.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeItemCommand.LoadCommand(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeItemCommand.ApplyFilter(Sitecore.Update.Interfaces.ICommandFilter)">
            <summary>
            Applies the filter.
            </summary>
            <param name="filter">The data filter.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeItemCommand.DoInitializeCommand(Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Update.Data.Items.ContentDataItem)">
            <summary>
            Executes the initialize command event.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeItemCommand.GetVersionCommands(Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Update.Data.Items.ContentDataItem)">
            <summary>
            Gets the version commands.
            </summary>
            <param name="sourceItem">The source item.</param>
            <param name="updatedItem">The updated item.</param>
            <returns>The List of commands for changing item version</returns>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeItemCommand.SerializeCollisionBehavior(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the collision behavior.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeItemCommand.LoadCollisionBehavior(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the collision behavior.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeItemCommand.GetSharedFieldCommands(Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Update.Data.Items.ContentDataItem)">
            <summary>
            Gets the shared field commands.
            </summary>
            <param name="sourceItem">The source item.</param>
            <param name="updatedItem">The updated item.</param>
            <returns>The list of change shared field commands.</returns>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeItemCommand.GetPropertyCommands(Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Update.Data.Items.ContentDataItem)">
            <summary>
            Gets the property commands.
            </summary>
            <param name="sourceItem">The source item.</param>
            <param name="updatedItem">The updated item.</param>
            <returns>The list of change propery comamnds.</returns>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeItemCommand.GetKey(Sitecore.Data.Serialization.ObjectModel.SyncVersion,System.String)">
            <summary>
            Gets the command key.
            </summary>
            <param name="version">The version.</param>
            <param name="databaseName">Name of the database.</param>
            <returns>The command key.</returns>
        </member>
        <member name="T:Sitecore.Update.Commands.ChangePropertyCommand">
            <summary>
            The change property command.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.ChangePropertyCommand.commandPrefix">
            <summary>
            The unique command prefix.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.ChangePropertyCommand.changes">
            <summary>
            The list of changes.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangePropertyCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.ChangePropertyCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangePropertyCommand.#ctor(Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Update.Data.Items.ContentDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.ChangePropertyCommand"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangePropertyCommand.#ctor(Sitecore.Update.Data.Items.ContentDataItem,System.Collections.Generic.List{Sitecore.Update.ChangeEntry})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.ChangePropertyCommand"/> class.
            </summary>
            <param name="dataItem">The data item.</param>
            <param name="changes">The changes.</param>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangePropertyCommand.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangePropertyCommand.Changes">
            <summary>
            Gets the changes.
            </summary>
            <value>The changes.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangePropertyCommand.HasChanges">
            <summary>
            Gets a value indicating whether this instance has changes.
            </summary>
            <value>
              <c>true</c> if this instance has changes; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangePropertyCommand.CommandPrefix">
            <summary>
            Gets the command prefix.
            </summary>
            <value>The command prefix.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangePropertyCommand.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangePropertyCommand.SerializeCommand(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the command.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangePropertyCommand.LoadCommand(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangePropertyCommand.SerializeCollisionBehavior(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the collision behavior.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangePropertyCommand.LoadCollisionBehavior(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the collision behavior.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Commands.ChangeVersionCommand">
            <summary>
            The change item version command.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.ChangeVersionCommand.commandPrefix">
            <summary>
            The command unique prefix.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.ChangeVersionCommand.changeFieldCommands">
            <summary>
            The list of version changes.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.ChangeVersionCommand.language">
            <summary>
            The item language.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.ChangeVersionCommand.version">
            <summary>
            The item version.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeVersionCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.ChangeVersionCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeVersionCommand.#ctor(Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Data.Serialization.ObjectModel.SyncVersion,Sitecore.Data.Serialization.ObjectModel.SyncVersion)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.ChangeVersionCommand"/> class.
            </summary>
            <param name="sourceItem">The source item.</param>
            <param name="targetItem">The target item.</param>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeVersionCommand.HasChanges">
            <summary>
            Gets a value indicating whether this instance has changes.
            </summary>
            <value>
              <c>true</c> if this instance has changes; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeVersionCommand.Language">
            <summary>
            Gets the language.
            </summary>
            <value>The language.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeVersionCommand.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeVersionCommand.Changes">
            <summary>
            Gets the command changes.
            </summary>
            <value>The command changes.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeVersionCommand.CommandPrefix">
            <summary>
            Gets the command prefix.
            </summary>
            <value>The command prefix.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeVersionCommand.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeVersionCommand.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeVersionCommand.CollisionBehavior">
            <summary>
            Gets or sets the collision behavior.
            </summary>
            <value>The collision behavior.</value>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeVersionCommand.SerializeCommand(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the command.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeVersionCommand.LoadCommand(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeVersionCommand.ApplyFilter(Sitecore.Update.Interfaces.ICommandFilter)">
            <summary>
            Applies the filter.
            </summary>
            <param name="filter">The data filter.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeVersionCommand.DoInitializeChanges(Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Data.Serialization.ObjectModel.SyncVersion,Sitecore.Data.Serialization.ObjectModel.SyncVersion)">
            <summary>
            Initialize the command changes.
            </summary>
            <param name="sourceItem">The source item.</param>
            <param name="targetItem">The target item.</param>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeVersionCommand.SerializeCollisionBehavior(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the collision behavior.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeVersionCommand.LoadCollisionBehavior(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the collision behavior.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Commands.ChangeXmlFileCommand">
            <summary>
            Represents the change Xml file operation.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.ChangeXmlFileCommand.commandPrefix">
            <summary>
            The command unique prefix.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.ChangeXmlFileCommand.xmlFileDiff">
            <summary>
            The difference between source and target.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeXmlFileCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.ChangeXmlFileCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeXmlFileCommand.#ctor(Sitecore.Update.Data.Items.FileSystemDataItem,Sitecore.Update.Data.Items.FileSystemDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.ChangeXmlFileCommand"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeXmlFileCommand.XmlChanges">
            <summary>
            Gets the XML changes.
            </summary>
            <value>The XML changes.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.ChangeXmlFileCommand.CommandPrefix">
            <summary>
            Gets the command prefix.
            </summary>
            <value>The command prefix.</value>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeXmlFileCommand.SerializeCommand(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the command.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.ChangeXmlFileCommand.LoadCommand(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Commands.DeleteFieldCommand">
            <summary>
            The Delete field command.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.DeleteFieldCommand.commandPrefix">
            <summary>
            The comamnd prefix.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.DeleteFieldCommand.oldValue">
            <summary>
            The old value in deleted field.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteFieldCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.DeleteFieldCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteFieldCommand.#ctor(Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Data.Serialization.ObjectModel.SyncField)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.DeleteFieldCommand"/> class.
            </summary>
            <param name="item">The Synk item.</param>
            <param name="field">The Synk field.</param>
        </member>
        <member name="P:Sitecore.Update.Commands.DeleteFieldCommand.CommandPrefix">
            <summary>
            Gets the command prefix.
            </summary>
            <value>The command prefix.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.DeleteFieldCommand.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.DeleteFieldCommand.OldValue">
            <summary>
            Gets the filed old value.
            </summary>
            <value>The filed old value.</value>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteFieldCommand.LoadFieldCommand(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the field command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteFieldCommand.SerializeFieldCommand(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the field command.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteFieldCommand.LoadCollisionBehavior(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the collision behavior.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteFieldCommand.SerializeCollisionBehavior(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the collision behavior.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Commands.DeleteFileCommand">
            <summary>
            The Delete file command.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.DeleteFileCommand.commandPrefix">
            <summary>
            The command unique prefix.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.DeleteFileCommand.hashCode">
            <summary>
            The deleted file has code.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteFileCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.DeleteFileCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteFileCommand.#ctor(Sitecore.Update.Data.Items.FileSystemDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.DeleteFileCommand"/> class.
            </summary>
            <param name="item">The data item.</param>
        </member>
        <member name="P:Sitecore.Update.Commands.DeleteFileCommand.CommandPrefix">
            <summary>
            Gets the command prefix.
            </summary>
            <value>The command prefix.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.DeleteFileCommand.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.DeleteFileCommand.HashCode">
            <summary>
            Gets the hash code.
            </summary>
            <value>The hash code.</value>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteFileCommand.SerializeCommand(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the command.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteFileCommand.LoadCommand(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteFileCommand.LoadCollisionBehavior(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the collision behavior.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteFileCommand.SerializeCollisionBehavior(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the collision behavior.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Commands.DeleteFolderCommand">
            <summary>
            The delete folder command.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.DeleteFolderCommand.commandPrefix">
            <summary>
            The command unique prefix.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteFolderCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.DeleteFolderCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteFolderCommand.#ctor(Sitecore.Update.Data.Items.FolderDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.DeleteFolderCommand"/> class.
            </summary>
            <param name="item">The data item.</param>
        </member>
        <member name="P:Sitecore.Update.Commands.DeleteFolderCommand.CommandPrefix">
            <summary>
            Gets the command prefix.
            </summary>
            <value>The command prefix.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.DeleteFolderCommand.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteFolderCommand.LoadCollisionBehavior(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the collision behavior.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteFolderCommand.SerializeCollisionBehavior(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the collision behavior.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Commands.DeleteItemCommand">
            <summary>
            The delete item command.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.DeleteItemCommand.commandPrefix">
            <summary>
            The command unique prefix.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.DeleteItemCommand.versions">
            <summary>
            The item versions.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteItemCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.DeleteItemCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteItemCommand.#ctor(Sitecore.Update.Data.Items.ContentDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.DeleteItemCommand"/> class.
            </summary>
            <param name="item">The data item.</param>
        </member>
        <member name="P:Sitecore.Update.Commands.DeleteItemCommand.Versions">
            <summary>
            Gets the versions.
            </summary>
            <value>The versions.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.DeleteItemCommand.CommandPrefix">
            <summary>
            Gets the command prefix.
            </summary>
            <value>The command prefix.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.DeleteItemCommand.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteItemCommand.LoadCommand(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteItemCommand.SerializeCommand(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the command.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteItemCommand.SerializeCollisionBehavior(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the collision behavior.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteItemCommand.LoadCollisionBehavior(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the collision behavior.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteItemCommand.LoadVersionInfo(System.Xml.XmlReader)">
            <summary>
            Loads the version info.
            </summary>
            <param name="reader">The reader.</param>
            <returns>The version information.</returns>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteItemCommand.SerializeVersionInfo(Sitecore.Update.Commands.DeleteItemCommand.VersionInfo,System.Xml.XmlWriter)">
            <summary>
            Serializes the version info.
            </summary>
            <param name="info">The version information.</param>
            <param name="writer">The writer.</param>
        </member>
        <member name="T:Sitecore.Update.Commands.DeleteItemCommand.VersionInfo">
            <summary>
            The Version information
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.DeleteItemCommand.VersionInfo.language">
            <summary>
            The item language.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.DeleteItemCommand.VersionInfo.version">
            <summary>
            The item version.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.DeleteItemCommand.VersionInfo.revision">
            <summary>
            The item revision.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteItemCommand.VersionInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.DeleteItemCommand.VersionInfo"/> class.
            </summary>
            <param name="language">The language.</param>
            <param name="version">The version.</param>
            <param name="revision">The revision.</param>
        </member>
        <member name="P:Sitecore.Update.Commands.DeleteItemCommand.VersionInfo.Language">
            <summary>
            Gets the item language.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Commands.DeleteItemCommand.VersionInfo.Version">
            <summary>
            Gets the item version.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Commands.DeleteItemCommand.VersionInfo.Revision">
            <summary>
            Gets the item revision.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Commands.DeleteVersionCommand">
            <summary>
            The Delete version command.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.DeleteVersionCommand.commandPrefix">
            <summary>
            The comamnd unique prefix.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.DeleteVersionCommand.language">
            <summary>
            The item language.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.DeleteVersionCommand.version">
            <summary>
            The item version.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.DeleteVersionCommand.revision">
            <summary>
            The item revision.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteVersionCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.DeleteVersionCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteVersionCommand.#ctor(Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Data.Serialization.ObjectModel.SyncVersion)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.DeleteVersionCommand"/> class.
            </summary>
            <param name="item">The data item.</param>
            <param name="version">The version.</param>
        </member>
        <member name="P:Sitecore.Update.Commands.DeleteVersionCommand.CommandPrefix">
            <summary>
            Gets the command prefix.
            </summary>
            <value>The command prefix.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.DeleteVersionCommand.Language">
            <summary>
            Gets the item language.
            </summary>
            <value>The item language.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.DeleteVersionCommand.Version">
            <summary>
            Gets the item version.
            </summary>
            <value>The item version.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.DeleteVersionCommand.Revision">
            <summary>
            Gets the item revision.
            </summary>
            <value>The item revision.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.DeleteVersionCommand.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteVersionCommand.SerializeCommand(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the command.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteVersionCommand.LoadCommand(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteVersionCommand.SerializeCollisionBehavior(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the collision behavior.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteVersionCommand.LoadCollisionBehavior(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the collision behavior.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Commands.DeleteXmlFileCommand">
            <summary>
            The Delete Xml file command
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.DeleteXmlFileCommand.BufferSize">
            <summary>
            The buffer size.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.DeleteXmlFileCommand.TagName">
            <summary>
            The tag name.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.DeleteXmlFileCommand.commandPrefix">
            <summary>
            The command unique prefix.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.DeleteXmlFileCommand.stream">
            <summary>
            The file content stream.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteXmlFileCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.DeleteXmlFileCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteXmlFileCommand.#ctor(Sitecore.Update.Data.Items.FileSystemDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.DeleteXmlFileCommand"/> class.
            </summary>
            <param name="dataItem">The data item.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteXmlFileCommand.#ctor(Sitecore.Update.Data.Items.FileSystemDataItem,System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.DeleteXmlFileCommand"/> class.
            </summary>
            <param name="dataItem">The data item.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteXmlFileCommand.Finalize">
            <summary>
            Finalizes an instance of the DeleteXmlFileCommand class.
            <see cref="T:Sitecore.Update.Commands.DeleteXmlFileCommand"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Commands.DeleteXmlFileCommand.CommandPrefix">
            <summary>
            Gets the command prefix.
            </summary>
            <value>The command prefix.</value>
        </member>
        <member name="P:Sitecore.Update.Commands.DeleteXmlFileCommand.File">
            <summary>
            Gets the file stream.
            </summary>
            <value>The file stream.</value>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteXmlFileCommand.LoadCommand(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteXmlFileCommand.SerializeCommand(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the command.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Commands.DeleteXmlFileCommand.DoCommandDispose">
            <summary>
            Does the command dispose.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Commands.Filters.ChangeCreatedPropertyFilter">
            <summary>
            Wizard does not support to change Create item property since there is API for this change.
            Change should be filtered.
            </summary>
            <seealso cref="T:Sitecore.Update.Interfaces.ICommandFilter" />
        </member>
        <member name="T:Sitecore.Update.Commands.Filters.ChangedFieldsFilter">
            <summary>
            Changed fields Filter 
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.Filters.ChangedFieldsFilter.fields">
            <summary>
            List of fields to be filtered.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.Filters.ChangedFieldsFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.Filters.ChangedFieldsFilter"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Commands.Filters.ChangedFieldsFilter.Fields">
            <summary>
            Gets the fields.
            </summary>
            <value>The fields.</value>
        </member>
        <member name="M:Sitecore.Update.Commands.Filters.ChangedFieldsFilter.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The instance.</returns>
        </member>
        <member name="M:Sitecore.Update.Commands.Filters.ChangedFieldsFilter.FilterCommand(Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Filters the command.
            </summary>
            <param name="command">The command.</param>
            <returns>Filtered command.</returns>
        </member>
        <member name="T:Sitecore.Update.Commands.Filters.SerializationFoldersFilter">
            <summary>
            Filters folder commands for serialization folders.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.Filters.SerializationFoldersFilter.FilterCommand(Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Filters the command.
            </summary>
            <param name="command">The command.</param>
            <returns>The filtered command.</returns>
        </member>
        <member name="M:Sitecore.Update.Commands.Filters.SerializationFoldersFilter.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The command instance.</returns>
        </member>
        <member name="T:Sitecore.Update.Commands.Filters.TemplateBasedFilter">
            <summary>
            Filter that allows to configure fintering items basing on their template.
            </summary>
            <seealso cref="T:Sitecore.Update.Interfaces.ICommandFilter" />
        </member>
        <member name="F:Sitecore.Update.Commands.Filters.TemplateBasedFilter._templateIdList">
            <summary>
            The template identifier list
            </summary>
        </member>
        <member name="P:Sitecore.Update.Commands.Filters.TemplateBasedFilter.TemplateIdList">
            <summary>
            Gets the template identifier list. The list can contain either template name or template ID.
            </summary>
            <value>
            The template identifier list.
            </value>
        </member>
        <member name="P:Sitecore.Update.Commands.Filters.TemplateBasedFilter.WhiteListedItems">
            <summary>
            Gets the list of white listed items. The list can contain either specific items or item paths.
            </summary>
            <value>
            The white listed items list.
            </value>
        </member>
        <member name="M:Sitecore.Update.Commands.Filters.TemplateBasedFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.Filters.TemplateBasedFilter"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.Filters.TemplateBasedFilter.FilterCommand(Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Filters the command.
            </summary>
            <param name="command">The command.</param>
            <returns>
            The filtered command.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sitecore.Update.Commands.Filters.TemplateBasedFilter.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>
            The command instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Sitecore.Update.Commands.Filters.LanguageFilter">
            <summary>
            The language filter.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Commands.Filters.LanguageFilter.languages">
            <summary>
            The list of allowed languages.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.Filters.LanguageFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Commands.Filters.LanguageFilter"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Commands.Filters.LanguageFilter.Languages">
            <summary>
            Gets the allowed languages.
            </summary>
            <value>The allowed languages.</value>
        </member>
        <member name="M:Sitecore.Update.Commands.Filters.LanguageFilter.FilterCommand(Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Filters the command.
            </summary>
            <param name="command">The command.</param>
            <returns>The filtered command.</returns>
        </member>
        <member name="M:Sitecore.Update.Commands.Filters.LanguageFilter.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The command instance.</returns>
        </member>
        <member name="M:Sitecore.Update.Commands.Filters.LanguageFilter.RemoveCommand(System.String)">
            <summary>
            Removes the command.
            </summary>
            <param name="language">The language.</param>
            <returns><c>true</c> if language is to be removed.</returns>
        </member>
        <member name="T:Sitecore.Update.Commands.SerializationCommandFactory">
            <summary>
            The serialization command factory.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Commands.SerializationCommandFactory.SerializeCommand(Sitecore.Update.Interfaces.ICommand,System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the command.
            </summary>
            <param name="command">The command.</param>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
            <exception cref="T:System.Exception">Command is not registered</exception>
        </member>
        <member name="M:Sitecore.Update.Commands.SerializationCommandFactory.SerializeXmlCommand(Sitecore.Update.Xml.BaseChangeXmlCommand,System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the command.
            </summary>
            <param name="command">The command.</param>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
            <exception cref="T:System.Exception">Xml Command is not registered</exception>
        </member>
        <member name="M:Sitecore.Update.Commands.SerializationCommandFactory.DeserializeXmlCommand(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Deserializes the XML command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
            <returns>The change xml command instance.</returns>
            <exception cref="T:System.Exception">Command is not registered</exception>
        </member>
        <member name="M:Sitecore.Update.Commands.SerializationCommandFactory.DeserializeCommand(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Deserializes the command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
            <returns>The deserialized comamnd.</returns>
            <exception cref="T:System.Exception">Command is not registered</exception>
        </member>
        <member name="M:Sitecore.Update.Commands.SerializationCommandFactory.GetSerializationContext">
            <summary>
            Gets the serialization context.
            </summary>
            <returns>The serialization context.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.CommandSource">
            <summary>
            The command source
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandSource.commands">
            <summary>
            The command list.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.CommandSource"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandSource.Entries">
            <summary>
            Gets the commands.
            </summary>
            <value>The commands.</value>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandSource.InternalPopulate(Sitecore.Install.Framework.ISink{Sitecore.Update.Interfaces.ICommand})">
            <summary>
            Populate comamnds from sink
            </summary>
            <param name="sink">The command sink</param>
        </member>
        <member name="T:Sitecore.Update.Installer.CommandToEntryConverter">
            <summary>
            Converter comamnds to package entries.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandToEntryConverter.PlainConvert(Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Plains the convert.
            </summary>
            <param name="entry">The entry.</param>
            <returns>The package entry.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandToEntryConverter.Convert(Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Converts the specified command to package entry.
            </summary>
            <param name="entry">The command.</param>
            <returns>The package entry.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandToEntryConverter.ConvertFileOperationCommand(Sitecore.Update.Commands.BaseFileCommand,System.IO.Stream)">
            <summary>
            Converts the file operation command.
            </summary>
            <param name="entry">The Command.</param>
            <param name="file">The File Stream.</param>
            <returns>The Package Entry.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandToEntryConverter.IsXmlFile(System.String)">
            <summary>
            Determines whether the specified file is an xml file.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandToEntryConverter.InternalConvert(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.IProcessingContext)">
            <summary>
            Conversion method.
            </summary>
            <param name="entry">The command.</param>
            <param name="context">The processing context.</param>
            <returns>The conversion result.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.AddChangeFileKeyProvider">
            <summary>
            Change file item provider.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddChangeFileKeyProvider.GetKey(System.String)">
            <summary>
            Gets the key.
            </summary>
            <param name="key">The comamnd key.</param>
            <returns>The Sorting key.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddChangeFileKeyProvider.GetPathRank(System.String)">
            <summary>
            Gets the path rank.
            </summary>
            <param name="path">The content path.</param>
            <returns>The path rank.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddChangeFileKeyProvider.GetDatabaseRank(System.String)">
            <summary>
            Gets the database rank.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <returns>The database rank.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.AddChangeItemKeyProvider">
            <summary>
            Item key provider.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddChangeItemKeyProvider.GetKey(System.String)">
            <summary>
            Gets the key.
            </summary>
            <param name="key">The comamnd key.</param>
            <returns>The comamnd sorting key.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddChangeItemKeyProvider.GetDependencyRank(System.String,Sitecore.Data.ID)">
            <summary>
            Gets the item dependency rank.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="itemId">The item ID.</param>
            <returns>The rank of the item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddChangeItemKeyProvider.GetPathRank(System.String)">
            <summary>
            Gets the path rank.
            </summary>
            <param name="path">The content path.</param>
            <returns>The rank of the path.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddChangeItemKeyProvider.GetDatabaseRank(System.String)">
            <summary>
            Gets the database rank.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <returns>The database rank.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.CommandSortingKey">
            <summary>
            The command sorting key.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.CommandSortingKey.contentRank">
            <summary>
            The rank of content path.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.CommandSortingKey.databaseRank">
            <summary>
            The rank of database name.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.CommandSortingKey.dependencyRank">
            <summary>
            The rank of item dependency.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.CommandSortingKey.invertResult">
            <summary>
            Indicated whether result should be inverted or not.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.CommandSortingKey.changeItemCommandPrefix">
            <summary>
            The change item command prefix
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.CommandSortingKey.addItemCommandPrefix">
            <summary>
            The add item command prefix
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.CommandSortingKey.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.CommandSortingKey"/> class.
            </summary>
            <param name="prefix">The command prefix.</param>
            <param name="databaseRank">The database rank.</param>
            <param name="contentRank">The content rank.</param>
            <param name="dependencyRank">The dependency rank.</param>
            <param name="path">The data item path.</param>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.CommandSortingKey.InvertResult">
            <summary>
            Gets or sets a value indicating whether result is inverted.
            </summary>
            <value><c>true</c> if result should be inverted; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.CommandSortingKey.ComparePrefixes(Sitecore.Install.Framework.SortingKey,Sitecore.Install.Framework.SortingKey)">
            <summary>
            Compares the prefixes.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.CommandSortingKey.ComparePaths(Sitecore.Install.Framework.SortingKey,Sitecore.Install.Framework.SortingKey)">
            <summary>
            Compares the paths.
            </summary>
            <param name="left">The left key.</param>
            <param name="right">The right key.</param>
            <returns>The result of comparison (-1, 0 or 1)</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.DeleteFileKeyProvider">
            <summary>
            Key provider for delete file commands.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFileKeyProvider.GetKey(System.String)">
            <summary>
            Gets the key.
            </summary>
            <param name="key">The coammand sorting key.</param>
            <returns>The command sorting key.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.DeleteItemKeyProvider">
            <summary>
            The key provider for delete commands.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemKeyProvider.GetKey(System.String)">
            <summary>
            Gets the key.
            </summary>
            <param name="key">The command key.</param>
            <returns>The sorting command key.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.BaseFileCommandInstaller">
            <summary>
            The base class for file installers.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.SafeSuffix">
            <summary>
            The safe suffix for installing files.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.UnsafePaths">
            <summary>
            The list of unsafe paths (can cause ASP.NET restart during installation).
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.detokenizedFilePath">
            <summary>
            The detokenized related file path.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.DetokenizedFilePath">
            <summary>
            Gets the detokenized file path.
            </summary>
            <value>The file path.</value>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Sitecore.Update.Installer.Items.BaseFileCommandInstaller"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.ExtractCommand(Sitecore.Install.Framework.PackageEntry)">
            <summary>
            Extracts the command.
            </summary>
            <param name="entry">The package entry.</param>
            <returns>The command.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.Finish">
            <summary>
            Finishes the installation of this instance.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.DoInstall(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.PackageEntry,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Install the entry.
            </summary>
            <param name="command">The command.</param>
            <param name="entry">The entry.</param>
            <param name="commandContext">The command context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.ExtractCommandFromEntry(Sitecore.Install.Framework.PackageEntry)">
            <summary>
            Extracts the command from package entry.
            </summary>
            <param name="entry">The package entry.</param>
            <returns>The command.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.ExtractCommandFromProperties(Sitecore.Install.Framework.PackageEntry)">
            <summary>
            Extracts the command from package entry properties.
            </summary>
            <param name="entry">The package entry.</param>
            <returns>The command.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.DetokenizePath(System.String)">
            <summary>
            Replaces tokens in the path with correct values.
            </summary>
            <param name="path">Path with or without tokens.</param>
            <param name="context">The command installer context.</param>
            <returns>Path without tokens.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.DoInstall(Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Executes the install event.
            </summary>
            <param name="cmd">The comamnd.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.GetSafePath(System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the safe path.
            </summary>
            <param name="path">The file path.</param>
            <param name="context">The context.</param>
            <returns>The safe command path.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.HasPostAction(Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Determines whether current command has to be installed in post action.
            </summary>
            <param name="context">The context.</param>
            <returns>
              <c>true</c> if current command has to be installed in post action; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.IsUnsafePath(System.String)">
            <summary>
            Determines whether the specified path is in unsafe category.
            </summary>
            <param name="path">The file path.</param>
            <returns>
              <c>true</c> if the specified path is in unsafe category; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.GetXmlPatch(System.String,System.IO.Stream,Sitecore.Xml.Patch.XmlPatchNamespaces)">
            <summary>
            Gets the XML patch.
            </summary>
            <param name="sourceFilePath">The source file path.</param>
            <param name="target">The target.</param>
            <param name="xmlNamespaces">The patch namespaces.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.GetXmlPatch(System.IO.Stream,System.String,Sitecore.Xml.Patch.XmlPatchNamespaces)">
            <summary>
            Gets the XML patch.
            </summary>
            <param name="source">The source.</param>
            <param name="targetFilePath">The target file path.</param>
            <param name="xmlNamespaces">The patch namespaces.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.GetFileStream(System.String)">
            <summary>
            Gets the file stream.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.GetXmlPatch(System.IO.Stream,System.IO.Stream,Sitecore.Xml.Patch.XmlPatchNamespaces)">
            <summary>
            Gets the XML patch.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <param name="xmlNamespaces">The patch namespaces.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.ApplyPatch(System.IO.Stream,System.String)">
            <summary>
            Applies the XML patch to the specified XML file.
            </summary>
            <param name="xmlFile">The XML file.</param>
            <param name="xmlPatch">The XML patch.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.IsXmlPatchSupported(System.String)">
            <summary>
            Determines whether specified mapped file lbelongs to Include files that support patching.
            </summary>
            <param name="mappedPath">The mapped file path.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.IsSafeConfigFile(System.String)">
            <summary>
            Determines whether the specified configuration file is safe to be removed.
            </summary>
            <param name="mappedPath">The mapped path.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.ProposeNewConfigFileName(System.String,System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Proposes the new name of the configuration file.
            </summary>
            <param name="mappedFilePath">The mapped file path.</param>
            <param name="newExtension">The new extension.</param>
            <param name="hashCode">The hash code.</param>
            <param name="context">The command context.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.ProposeNewConfigFileName(System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Proposes the new name of the configuration file.
            </summary>
            <param name="baseName">Name of the base.</param>
            <param name="hashCode">The hash code.</param>
            <param name="context">The command context.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.IsFileExistsAndModified(System.String,System.String)">
            <summary>
            Check if file exists and changed
            </summary>
            <param name="path">path to the file</param>
            <param name="hashCode">hash code of the file</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.IsFileExistsInContext(System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Check if file exists in addedfiles of context
            </summary>
            <param name="path">path to the file</param>
            <param name="context">the context</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.GetCustomizedBackupFilePath(System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the backup file path to the customized configuration file.
            </summary>
            <param name="mappedFilePath">The mapped file path.</param>
            <param name="hashCode">The hash code.</param>
            <param name="context">The command context.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.GetPatchFilePath(System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the backup file path to the customized configuration file.
            </summary>
            <param name="mappedFilePath">The mapped file path.</param>
            <param name="patchHashCode">The patch hash code.</param>
            <param name="context">The command context.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.GetTargetCleanFilePath(System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the target clean file path.
            </summary>
            <param name="mappedFilePath">The mapped file path.</param>
            <param name="hashCode">The hash code.</param>
            <param name="context">The command context.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.GetMergedFilePath(System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the file path that contains target file with merged customizations.
            </summary>
            <param name="mappedFilePath">The mapped file path.</param>
            <param name="hashCode">The hash code.</param>
            <param name="context">The command context.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.BackupCustomizedConfiguration(System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Backups the customized configuration.
            </summary>
            <param name="mappedPath">The mapped path.</param>
            <param name="newFileName">New name of the file.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.GetConfigFileChangesType(System.String,System.String)">
            <summary>
            Gets the type of the configuration file changes.
            </summary>
            <param name="sourcePatch">The source patch.</param>
            <param name="targetPatch">The target patch.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.IsSignigicantChanges(System.String,System.String)">
            <summary>
            new method that will take in the file stream to compare
            </summary>
            <param name="patch">The source patch.</param>
            <param name="targetPath"></param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.ConfigFileChangesType">
            <summary>
            Enumeration that describes level of customizations made by customer in configuration file. 
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.ConfigFileChangesType.Unknown">
            <summary>
            The file change type is unknown.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.ConfigFileChangesType.NonSignificantlyDifferentFromSource">
            <summary>
            The the file has non-significant difference from source.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.ConfigFileChangesType.NonSignificantlyDifferentFromTarget">
            <summary>
            The the file has non-significant difference from target.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.ConfigFileChangesType.NonSignificantlydifferentFromSourceAndTarget">
            <summary>
            The the file has non-significant difference from both source and target.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.ConfigFileChangesType.SignificantlyDifferent">
            <summary>
            The the file has significant changes from both source and target.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.DumpCleanConfigFile(System.String,System.IO.Stream,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Dumps the clean configuration file.
            </summary>
            <param name="mappedPath">The mapped path.</param>
            <param name="stream">The stream.</param>
            <param name="fileHashCode">The file hash code.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.ApplyAndSaveCustomizations(System.String,System.String,System.IO.Stream,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Applies the and save customizations to the target configuration file.
            </summary>
            <param name="mappedPath">The original mapped configuration file path.</param>
            <param name="xmlPatch">The XML patch.</param>
            <param name="stream">The stream.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.BackupCustomizedConfigFile(System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Backups the customized configuration file.
            </summary>
            <param name="mappedPath">The mapped path.</param>
            <param name="customizedFileHash">The customized file hash.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.SavePatchFile(System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Saves the patch file.
            </summary>
            <param name="mappedPath">The mapped path.</param>
            <param name="xmlPatch">The XML patch.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.AddFile(System.String,System.IO.Stream,Sitecore.Update.Installer.CommandInstallerContext,System.Collections.Generic.List{Sitecore.Update.Installer.FileCopyInfo})">
            <summary>
            Adds the file.
            </summary>
            <param name="path">The path.</param>
            <param name="file">The file.</param>
            <param name="context">The context.</param>
            <param name="fileOperationTracker">The file operation tracker.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.GenerateAddFileCommand(System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Generates the change file command.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="context">The context.</param>
            <returns>The change file command.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.GenerateChangeFileCommand(System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Generates the change file command.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="fileHashCode">The file hash code.</param>
            <param name="context">The context.</param>
            <returns>
            The change file command.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.GenerateDeleteFileCommand(System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Generates the delete file command.
            </summary>
            <param name="path">The file path.</param>
            <param name="fileHashCode">The file hash code.</param>
            <param name="context">The context.</param>
            <returns>
            The delete file command.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.RegisterRollbackCommandForAddedFile(System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Registers the rollback command.
            </summary>
            <param name="path">The file path.</param>
            <param name="fileHashCode">The file hash code.</param>
            <param name="context">The installation context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseFileCommandInstaller.RegisterRollbackCommandForDeleteFile(System.String,Sitecore.Update.Commands.DeleteFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Registers the rollback command.
            </summary>
            <param name="path">The file path.</param>
            <param name="command">The add file command.</param>
            <param name="context">The installation context.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.BaseInstaller">
            <summary>
            Base class for command installers.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.BaseInstaller.updateCommand">
            <summary>
            The update command.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.BaseInstaller.LogLevel">
            <summary>
            The supported log levels.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.BaseInstaller.LogLevel.Info">
            <summary>
            The information message.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.BaseInstaller.LogLevel.Warning">
            <summary>
            The warning message.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.BaseInstaller.LogLevel.Error">
            <summary>
            The Error message.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.BaseInstaller.Command">
            <summary>
            Gets or sets the command.
            </summary>
            <value>The command.</value>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseInstaller.Log(Sitecore.Update.Installer.Items.BaseInstaller.LogLevel,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="level">The log level.</param>
            <param name="text">The log text.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseInstaller.GetCommandKey(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.PackageEntry,System.Object[])">
            <summary>
            Gets the command key.
            </summary>
            <param name="command">The command.</param>
            <param name="entry">The entry.</param>
            <param name="parameters">The parameters.</param>
            <returns>The unique command key.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.BaseItemCommandInstaller">
            <summary>
            The base command installer class.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.BaseItemCommandInstaller.processingContext">
            <summary>
            The processing context.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.BaseItemCommandInstaller.IsInitialized">
            <summary>
            Checks whether this instance is initialized.
            </summary>
            <value>
              <c>true</c> if this instance is initialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.BaseItemCommandInstaller.ProcessingContext">
            <summary>
            Gets the processing context.
            </summary>
            <value>The processing context.</value>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseItemCommandInstaller.Finish">
            <summary>
            Finilize the command installation.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseItemCommandInstaller.Flush">
            <summary>
            Flushes the command installation
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseItemCommandInstaller.Initialize(Sitecore.Install.Framework.IProcessingContext)">
            <summary>
            Initializes the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseItemCommandInstaller.Put(Sitecore.Install.Framework.PackageEntry)">
            <summary>
            Installs the specified entry.
            </summary>
            <param name="entry">The package entry.</param>
            <exception cref="T:System.Exception">CommandInstallerContext is not set in current processing context.</exception>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseItemCommandInstaller.ExtractCommand(Sitecore.Install.Framework.PackageEntry)">
            <summary>
            Extracts the command.
            </summary>
            <param name="entry">The package entry.</param>
            <returns>The command.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseItemCommandInstaller.DoInstall(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.PackageEntry,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Install the entry.
            </summary>
            <param name="command">The command.</param>
            <param name="entry">The entry.</param>
            <param name="commandContext">The command context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseItemCommandInstaller.ProcessFolders(Sitecore.Install.Framework.PackageEntry)">
            <summary>
            Processes the folders.
            </summary>
            <param name="entry">The entry.</param>
            <returns>
              <c>true</c> if folder entry can be processed.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseItemCommandInstaller.AssertInit">
            <summary>
            Asserts the initialization.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseItemCommandInstaller.GetReader(Sitecore.Install.Framework.PackageEntry)">
            <summary>
            Gets the command reader.
            </summary>
            <param name="entry">The package entry.</param>
            <returns>The command reader.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.BaseItemCommandInstaller.HandleError(Sitecore.Install.Framework.PackageEntry,System.Exception,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message when error is ocured durig installation.
            </summary>
            <param name="entry">The entry.</param>
            <param name="ex">The exception.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.AddBreakingChangesFileCommandInstaller">
            <summary>
            The installer of Add breaking changes file command.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.AddBreakingChangesFileCommandInstaller.reportParser">
            <summary>
            The breaking changes report parser.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.AddBreakingChangesFileCommandInstaller.usageProvider">
            <summary>
            The usage provider.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddBreakingChangesFileCommandInstaller.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.AddBreakingChangesFileCommandInstaller"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddBreakingChangesFileCommandInstaller.GetAssemblyAnalyzer">
            <summary>
            Gets instance <see cref="T:Sitecore.Update.Update.Installer.Items.Installers.Install.Helpers.AssemblyAnalyzer"/> 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddBreakingChangesFileCommandInstaller.DoInstall(Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Installs the command.
            </summary>
            <param name="cmd">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddBreakingChangesFileCommandInstaller.FilterCodeReferences(Sitecore.Update.CodeAnalysis.CodeReferences.CodeReferenceInfo[],Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Filters the code references.
            </summary>
            <param name="codeReferences">The code references.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddBreakingChangesFileCommandInstaller.FilterReferencesWithDynamicAssembly(Sitecore.Update.CodeAnalysis.CodeReferences.CodeReferenceInfo[],Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Filters the code references with dynamic assembly.
            </summary>
            <param name="codeReferences">The code references.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddBreakingChangesFileCommandInstaller.FilterUpdatedAspxWithDynamicAssembly(Sitecore.Update.CodeAnalysis.CodeReferences.CodeReferenceInfo[],Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Filters the updated aspx with dynamic assembly.
            </summary>
            <param name="codeReferences">The code references.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddBreakingChangesFileCommandInstaller.MapPath(System.String)">
            <summary>
            Maps the path.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddBreakingChangesFileCommandInstaller.ExtractAspxPathFromAssemblyName(System.String)">
            <summary>
            Extracts the name of the aspx path from type.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddBreakingChangesFileCommandInstaller.ExtractAspxPathFromTypeName(System.String)">
            <summary>
            Extracts the name of the aspx path from type.
            </summary>
            <param name="typeName">Name of the type.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddBreakingChangesFileCommandInstaller.WirteBreakingChangesReportToFile(System.IO.StreamReader,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Writes breaking changes report to output file
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddBreakingChangesFileCommandInstaller.SetStreamPositionToStart(System.IO.StreamReader)">
            <summary>
            Set stream position to its start
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddBreakingChangesFileCommandInstaller.GetCustomAssemblies">
            <summary>
            Returns the list of customer assemblies from Application Domain.
            </summary>
            <returns>The list of <see cref="T:System.Reflection.Assembly"/> objects.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddBreakingChangesFileCommandInstaller.FilterAssemblies(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Filters the assemblies.
            </summary>
            <param name="assembliesToProcess">The assemblies to process.</param>
            <param name="context">The command installation context.</param>
            <returns>Filtered assemblies.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddBreakingChangesFileCommandInstaller.FilterAssembliesScheduledToBeUpdatedByPackage(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Filters the assemblies scheduled to be updated by package.
            </summary>
            <param name="assembliesToProcess">The assemblies to process.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddBreakingChangesFileCommandInstaller.HandleBreakingChangeUsage(Sitecore.Update.CodeAnalysis.CodeReferences.CodeReferenceInfo,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message that informs about problem with breaking change.
            </summary>
            <param name="codeReference">The code reference.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddBreakingChangesFileCommandInstaller.GetMessageByCodeReference(Sitecore.Update.CodeAnalysis.CodeReferences.CodeReferenceInfo,Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Returns appropriate message for the <see cref="T:Sitecore.Update.CodeAnalysis.CodeReferences.CodeReferenceInfo"/> object.
            </summary>
            <param name="codeReference">The code reference info object.</param>
            <param name="command">The command.</param>
            <returns>The message.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.AddFileCommandInstaller">
            <summary>
            The installer of Add file command.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddFileCommandInstaller.DoInstall(Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Installs the command.
            </summary>
            <param name="cmd">The command.</param>
            <param name="context">The context.</param>
            <exception cref="T:System.Exception">Path to the folder to be added can't be empty</exception>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddFileCommandInstaller.GetCommandKey(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.PackageEntry,System.Object[])">
            <summary>
            Gets the command key.
            </summary>
            <param name="command">The command.</param>
            <param name="entry">The package entry.</param>
            <param name="parameters">The parameters.</param>
            <returns>The unique command key.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddFileCommandInstaller.BackupFile(System.String,Sitecore.Update.Commands.AddFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Backups the file.
            </summary>
            <param name="path">The file path.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddFileCommandInstaller.HandleConfigurationFileAlreadyExists(System.String@,Sitecore.Update.Commands.AddFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message for situation when the configuration file already exists.
            </summary>
            <param name="mappedPath">The mapped path.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <returns>The behavior.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddFileCommandInstaller.HandleFileAlreadyExists(System.String,Sitecore.Update.Commands.AddFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Create message when file already exists situation occurred.
            </summary>
            <param name="path">The file path.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <returns>The Collision behavior.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddFileCommandInstaller.HasPostAction(Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Determines whether current command has to be installed in post action.
            </summary>
            <param name="context">The context.</param>
            <returns>
              <c>true</c> if current command has to be installed in post action; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.AddFolderCommandInstaller">
            <summary>
            The Installer of Add folder command.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddFolderCommandInstaller.GetCommandKey(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.PackageEntry,System.Object[])">
            <summary>
            Gets the command key.
            </summary>
            <param name="command">The command.</param>
            <param name="entry">The package entry.</param>
            <param name="parameters">The parameters.</param>
            <returns>The unique command key.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddFolderCommandInstaller.ProcessFolders(Sitecore.Install.Framework.PackageEntry)">
            <summary>
            Processes the folders.
            </summary>
            <param name="entry">The entry.</param>
            <returns>
              <c>true</c> if folder entry can be processed.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddFolderCommandInstaller.AddFile(System.String,System.IO.Stream,Sitecore.Update.Installer.CommandInstallerContext,System.Collections.Generic.List{Sitecore.Update.Installer.FileCopyInfo})">
            <summary>
            Adds the file.
            </summary>
            <param name="path">The path.</param>
            <param name="file">The file.</param>
            <param name="context">The context.</param>
            <param name="fileOperationTracker">The file operation tracker.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddFolderCommandInstaller.DoInstall(Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Installs the command.
            </summary>
            <param name="cmd">The comamnd.</param>
            <param name="context">The context.</param>
            <exception cref="T:System.Exception">Path to the folder to be added can't be empty</exception>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddFolderCommandInstaller.HasPostAction(Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Determines whether current command has to be installed in post action.
            </summary>
            <param name="context">The context.</param>
            <returns>
              <c>true</c> if current command has to be installed in post action; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddFolderCommandInstaller.FolderExists(System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Check whether Folder exists.
            </summary>
            <param name="path">The folder path.</param>
            <param name="context">The context.</param>
            <returns><c>true</c> if folder with specified path exists.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddFolderCommandInstaller.HandleFolderExists(Sitecore.Update.Commands.AddFolderCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Handles the folder already exists collision.
            </summary>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddFolderCommandInstaller.AddFolder(System.String,Sitecore.Update.Commands.AddFolderCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Adds the folder.
            </summary>
            <param name="path">The path.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddFolderCommandInstaller.AddFolder(Sitecore.Update.Commands.AddFolderCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Adds the folder.
            </summary>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddFolderCommandInstaller.RegisterRollbackCommand(System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Registers the rollback command.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.AddItemCommandInstaller">
            <summary>
            The installer of add item command.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.AddItemCommandInstaller.LogMethod">
            <summary>
            The log method.
            </summary>
            <param name="logLevel">
            The log level.
            </param>
            <param name="message">
            The message.
            </param>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.AddItemCommandInstaller.LayoutPathIds">
            <summary>
            The layout path ids
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.DoInstall(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.PackageEntry,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Executes the install event.
            </summary>
            <param name="cmd">The command.</param>
            <param name="entry">The entry.</param>
            <param name="commandContext">The command context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.GetDictionaryItemInstaller(Sitecore.Update.Commands.AddItemCommand,System.String)">
            <summary>
            The get dictionary item installer.
            </summary>
            <param name="command">The command.</param>
            <param name="commandKey">The command key.</param>
            <returns>The item installer.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.GetGeneralItemInstaller(Sitecore.Update.Commands.AddItemCommand,System.String)">
            <summary>
            The get general item installer.
            </summary>
            <param name="command">The command.</param>
            <param name="commandKey">The command key.</param>
            <returns>The item installer.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.GetItemInstaller(Sitecore.Update.Commands.AddItemCommand,System.String)">
            <summary>
            The get item installer.
            </summary>
            <param name="command">The command.</param>
            <param name="commandKey">The command key.</param>
            <returns>The Item Installer.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.GetCommandKey(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.PackageEntry,System.Object[])">
            <summary>
            Gets the command key.
            </summary>
            <param name="command">The command.</param>
            <param name="entry">The package entry.</param>
            <param name="parameters">The parameters.</param>
            <returns>The unique command key.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.AddItemCommandInstaller.BaseItemInstaller">
            <summary>
            The base item installer.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.BaseItemInstaller.FindDictionaryItem(Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Data.Database,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            The find dictionary item.
            </summary>
            <param name="item">The Sync item.</param>
            <param name="database">The database.</param>
            <param name="context">The context.</param>
            <returns>The dictionary item instance.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.BaseItemInstaller.FindDictionaryItemUnderParent(Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Data.Items.Item,System.String,Sitecore.Data.Items.Item,System.String)">
            <summary>
            The find dictionary item.
            </summary>
            <param name="item"></param>
            <param name="context"></param>
            <param name="parentItem"></param>
            <param name="itemName"></param>
            <param name="sitecoreItem"></param>
            <param name="key"></param>
            <returns>The dictionary item instance.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.BaseItemInstaller.GetDictionaryItem(Sitecore.Data.ID,System.String,Sitecore.Data.Database,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            The get dictionary item.
            </summary>
            <param name="itemId">The item id.</param>
            <param name="itemPath">The item path.</param>
            <param name="database">The database.</param>
            <param name="context">The context.</param>
            <returns>The Sitecore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.BaseItemInstaller.IsDictionaryLetterFolder(Sitecore.Data.Serialization.ObjectModel.SyncItem)">
            <summary>
            Checks whether item is a dictionary letter folder.
            </summary>
            <param name="item">The Sync item.</param>
            <returns>The is dictionary letter folder.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.BaseItemInstaller.GetItem(Sitecore.Data.ID,Sitecore.Data.Database,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the item.
            </summary>
            <param name="id">The item id.</param>
            <param name="database">The database.</param>
            <param name="context">The context.</param>
            <returns>The Sitecore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.BaseItemInstaller.GetItem(System.String,Sitecore.Data.Database,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the item.
            </summary>
            <param name="path">The item path.</param>
            <param name="database">The database.</param>
            <param name="context">The context.</param>
            <returns>The Sitecore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.BaseItemInstaller.GetItemPath(Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the item path.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="context">The context.</param>
            <returns>The full item path.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.AddItemCommandInstaller.DictionaryItemInstaller">
            <summary>
            The dictionary item installer.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.DictionaryItemInstaller.#ctor(System.String,Sitecore.Update.Commands.AddItemCommand,Sitecore.Update.Installer.Items.AddItemCommandInstaller.LogMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.AddItemCommandInstaller.DictionaryItemInstaller"/> class.
            </summary>
            <param name="commandKey">The command key.</param>
            <param name="command">The command.</param>
            <param name="logMethodMethod">The log method.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.DictionaryItemInstaller.HandleChangeDictionaryItemVersion(Sitecore.Data.Items.Item,Sitecore.Data.Serialization.ObjectModel.SyncVersion,Sitecore.Data.Serialization.ObjectModel.SyncField,Sitecore.Update.CollisionBehavior,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message in situation when field is to be added but already exists.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="syncVersion">The sync version.</param>
            <param name="syncField">The sync field.</param>
            <param name="behavior">The behavior.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.DictionaryItemInstaller.CreateLightweightItem(Sitecore.Update.CollisionBehavior,Sitecore.Data.Items.Item,Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Data.Database,Sitecore.Update.Commands.AddItemCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates the lightweight item.
            </summary>
            <param name="behavior">The behavior.</param>
            <param name="installedItem">The installed item.</param>
            <param name="item">The sync item.</param>
            <param name="database">The database.</param>
            <param name="addCommand">The command.</param>
            <param name="context">The context.</param>
            <returns>The sitecore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.DictionaryItemInstaller.GetAddVersionProcessor">
            <summary>
            The get add version processor.
            </summary>
            <returns>The processor to add versions.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.DictionaryItemInstaller.InstallLightweightItem(Sitecore.Install.Framework.PackageEntry,Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Update.Commands.AddItemCommand,Sitecore.Update.Installer.CommandInstallerContext,System.String,Sitecore.Data.Items.Item@)">
            <summary>
            Installs the lightweight item.
            </summary>
            <param name="entry">The package entry.</param>
            <param name="item">The sync item.</param>
            <param name="addCommand">The command.</param>
            <param name="context">The context.</param>
            <param name="addCommandKey">The command Key.</param>
            <param name="sitecoreItem">The sitecore item.</param>
            <returns>The collision behavior.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.DictionaryItemInstaller.InstallVersion(System.String,Sitecore.Data.Serialization.ObjectModel.SyncVersion,Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Installs the version.
            </summary>
            <param name="addCommandKey">The command key.</param>
            <param name="version">The version.</param>
            <param name="item">The sync item.</param>
            <param name="newItem">The new item.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller">
            <summary>
            The item installer.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.command">
            <summary>
            The command.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.commandKey">
            <summary>
            The command key.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.logger">
            <summary>
            The logger.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.isNewItem">
            <summary>
            Indicates whether item has been created from scratch or updated.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.#ctor(System.String,Sitecore.Update.Commands.AddItemCommand,Sitecore.Update.Installer.Items.AddItemCommandInstaller.LogMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller"/> class.
            </summary>
            <param name="commandKey">The command key.</param>
            <param name="command">The command.</param>
            <param name="loggerMethod">The logger method.</param>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.Command">
            <summary>
            Gets Command.
            </summary>
            <value>The command.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.CommandKey">
            <summary>
            Gets CommandKey.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.IsNewItem">
            <summary>
            Gets or sets a value indicating whether command to be installed installs new item.
            </summary>
            <value>
              <c>true</c> if command to be installed installs new item; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.Log">
            <summary>
            Gets Log method.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.DoInstall(Sitecore.Update.Commands.AddItemCommand,Sitecore.Install.Framework.PackageEntry,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            The do install.
            </summary>
            <param name="addItemCommand">The command.</param>
            <param name="entry">The entry.</param>
            <param name="commandContext">The command context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.CopyVersions(Sitecore.Data.Items.Item,System.Int32)">
            <summary>
            Copies the versions.
            </summary>
            <param name="masterItem">The master item.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.CreateLightweightItem(Sitecore.Update.CollisionBehavior,Sitecore.Data.Items.Item,Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Data.Database,Sitecore.Update.Commands.AddItemCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates the lightweight item.
            </summary>
            <param name="behavior">The behavior.</param>
            <param name="installedItem">The installed item.</param>
            <param name="item">The sync item.</param>
            <param name="database">The database.</param>
            <param name="addCommand">The command.</param>
            <param name="context">The context.</param>
            <returns>The sitecore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.CreateLightweightItem(Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Data.Database,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates the lightweight item.
            </summary>
            <param name="item">The sync item.</param>
            <param name="database">The database.</param>
            <param name="addCommand">The command.</param>
            <param name="context">The context.</param>
            <returns>The Sitecore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.CreateLightweightItem(Sitecore.Data.Items.Item,Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Data.Database,Sitecore.Update.Interfaces.ICommand,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates the lightweight item.
            </summary>
            <param name="destination">The destination.</param>
            <param name="item">The sync item.</param>
            <param name="database">The database.</param>
            <param name="addCommand">The command.</param>
            <param name="path">The parent path.</param>
            <param name="context">The context.</param>
            <returns>The Sitecore item.</returns>
            <exception cref="T:System.Exception">
              <c>Exception</c>.
            </exception>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.InstallLightweightItem(Sitecore.Install.Framework.PackageEntry,Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Update.Commands.AddItemCommand,Sitecore.Update.Installer.CommandInstallerContext,System.String,Sitecore.Data.Items.Item@)">
            <summary>
            Installs the lightweight item.
            </summary>
            <param name="entry">The package entry.</param>
            <param name="item">The sync item.</param>
            <param name="addCommand">The command.</param>
            <param name="context">The context.</param>
            <param name="addCommandKey">The command Key.</param>
            <param name="sitecoreItem">The sitecore item.</param>
            <returns>The collision behavior.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.InstallVersion(System.String,Sitecore.Data.Serialization.ObjectModel.SyncVersion,Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Installs the version.
            </summary>
            <param name="addCommandKey">The command key.</param>
            <param name="version">The version.</param>
            <param name="item">The sync item.</param>
            <param name="newItem">The new item.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.PrepareItem(Sitecore.Data.Items.Item,Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Prepares the item for changing.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="syncItem">The sync item.</param>
            <param name="context">The context.</param>
            <returns>The updated Sitecore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.UpdateSharedFields(System.String,Sitecore.Data.Items.Item,Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Updates the shared fields.
            </summary>
            <param name="addCommandKey">The command key.</param>
            <param name="sitecoreItem">The sitecore item.</param>
            <param name="item">The sync item.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.GenerateUpdateSharedFieldCommands(Sitecore.Data.Items.Item,Sitecore.Update.Data.Items.ContentDataItem)">
            <summary>
            Generates the update shared field commands.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="dataItem">The data item.</param>
            <returns>The list of commands.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.GenerateUpdateVersionCommands(Sitecore.Data.Items.Item,Sitecore.Update.Data.Items.ContentDataItem)">
            <summary>
            Generates the update version commands.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="dataItem">The data item.</param>
            <returns>The list of Update commands.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.GetFieldProcessor">
            <summary>
            Gets the field processor.
            </summary>
            <returns>The processor.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.EnsureTemplateExists(Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Data.Database,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Ensures that the template exists.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="database">The database.</param>
            <param name="addCommand">The command.</param>
            <param name="context">The context.</param>
            <returns><c>true</c> if template exists.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.HandleItemCreation(System.Boolean,Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Update.Commands.AddItemCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates contingency entry for collision during item creation.
            </summary>
            <param name="skipCommand">if set to <c>true</c> operation will not be performed.</param>
            <param name="item">The Sync item.</param>
            <param name="addCommand">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.HandleParentCreation(Sitecore.Data.Serialization.ObjectModel.SyncItem,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates message for parent not found situation.
            </summary>
            <param name="item">The Sync item.</param>
            <param name="key">The message key.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.RegisterRollbackOperationForAddItemCommand(Sitecore.Update.Commands.AddItemCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Registers the rollback operation for add item command.
            </summary>
            <param name="addCommand">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.RegisterRollbackOperationForChangeItemCommand(Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Registers the rollback operation for change item command.
            </summary>
            <param name="item">The existing Sitecore item.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.RegisterRollbackOperationForChangeSVItemCommand(Sitecore.Data.Items.Item,Sitecore.Update.Data.Items.ContentDataItem,System.Collections.Generic.List{Sitecore.Update.Interfaces.ICommand},Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Registers the rollback operation for change Standard Value item command.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="dataItem">The content data item.</param>
            <param name="commands">The inner commands.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.RegisterRollbackOperationForCreateParentCommand(System.String,System.String,Sitecore.Data.Items.Item,Sitecore.Data.Database,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Registers the rollback operation for create parent command.
            </summary>
            <param name="path">The item path.</param>
            <param name="nearestParentPath">The nearest parent path.</param>
            <param name="createdParent">The created parent.</param>
            <param name="database">The database.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.DoCleanupItem(Sitecore.Data.Items.Item,Sitecore.Data.Serialization.ObjectModel.SyncItem)">
            <summary>
            Cleanups the item.
            </summary>
            <param name="installedItem">The installed item.</param>
            <param name="item">The sync item.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.DoCreateParentItem(System.String,Sitecore.Data.Database)">
            <summary>
            Create the parent item from path.
            </summary>
            <param name="path">The item path.</param>
            <param name="database">The database.</param>
            <returns>The parent <see cref="T:Sitecore.Data.Items.Item"/>.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.DoMoveTo(Sitecore.Data.Items.Item,Sitecore.Data.Items.Item)">
            <summary>
            Moves the item to the parent location.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.GetParentItem(System.String,Sitecore.Data.Database,Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the parent item.
            </summary>
            <param name="itemPath">The item path.</param>
            <param name="database">The database.</param>
            <param name="item">The sync item.</param>
            <param name="addCommand">The command.</param>
            <param name="context">The context.</param>
            <returns>The parent item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.GetTemplateItem(Sitecore.Data.ID,Sitecore.Data.Database,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the template item.
            </summary>
            <param name="id">The template id.</param>
            <param name="database">The database.</param>
            <param name="context">The context.</param>
            <returns>The template item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.MoveItem(Sitecore.Data.Items.Item,Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Moves the item.
            </summary>
            <param name="installedItem">The installed item.</param>
            <param name="item">The sync item.</param>
            <param name="addCommand">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.OverwriteItem(Sitecore.Data.Items.Item,Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Data.Database,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Overwrites the item.
            </summary>
            <param name="installedItem">The installed item.</param>
            <param name="item">The sync item.</param>
            <param name="database">The database.</param>
            <param name="addCommand">The command.</param>
            <param name="context">The context.</param>
            <returns>The changed item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.RemoveVersions(Sitecore.Data.Items.Item,System.Boolean)">
            <summary>
            Removes the versions.
            </summary>
            <param name="targetItem">The target item.</param>
            <param name="removeSharedData">if set to <c>true</c> shared data will  be removed.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.ItemInstaller.UpdateItemDefinition(Sitecore.Data.Items.Item,Sitecore.Data.Serialization.ObjectModel.SyncItem)">
            <summary>
            Updates the item definition.
            </summary>
            <param name="targetItem">The target item.</param>
            <param name="item">The sync item.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.AddItemCommandInstaller.SitecoreVersionComparer">
            <summary>
            The item version comparer.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.SitecoreVersionComparer.Compare(Sitecore.Data.Items.Item,Sitecore.Data.Items.Item)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value
            Condition
            Less than zero
            <paramref name="x"/> is less than <paramref name="y"/>.
            Zero
            <paramref name="x"/> equals <paramref name="y"/>.
            Greater than zero
            <paramref name="x"/> is greater than <paramref name="y"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.AddItemCommandInstaller.SyncVersionComparer">
            <summary>
            The sync version comparer.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.AddItemCommandInstaller.SyncVersionComparer.Compare(Sitecore.Data.Serialization.ObjectModel.SyncVersion,Sitecore.Data.Serialization.ObjectModel.SyncVersion)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value
            Condition
            Less than zero
            <paramref name="x"/> is less than <paramref name="y"/>.
            Zero
            <paramref name="x"/> equals <paramref name="y"/>.
            Greater than zero
            <paramref name="x"/> is greater than <paramref name="y"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ChangeFileCommandInstaller">
            <summary>
            The Installer if Change file command.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeFileCommandInstaller.DoInstall(Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Executes the install event.
            </summary>
            <param name="cmd">The Command.</param>
            <param name="context">The context.</param>
            <exception cref="T:System.Exception">Path to the folder to be added can't be empty</exception>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeFileCommandInstaller.HandleLayersConfigChanges(Sitecore.Update.Commands.ChangeFileCommand,Sitecore.Update.Installer.CommandInstallerContext,System.String)">
            <summary>
             Handles the Layers configuration changes.
            </summary>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <param name="mappedPath">The mapped path.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeFileCommandInstaller.GetLayersConfigurationHelper">
            <summary>
            Gets Sitecore update mode.
            </summary>
            <returns><c>true</c> if Sitecore is in update mode; otherwise <c>false</c></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeFileCommandInstaller.BackupCustomLayersConfig(Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Copy custom Layers.config.orig from update layer to App_Config folder.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeFileCommandInstaller.IsLayersConfigInstalling(Sitecore.Update.Commands.ChangeFileCommand)">
            <summary>
            Check whether currently installing file is Layers.config file.
            </summary>
            <param name="command">The command.</param>
            <returns><c>true</c> if Layers.config is in process; otherwise <c>false</c></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeFileCommandInstaller.GetMappedFilePath(System.String,Sitecore.Update.Commands.ChangeFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the mapped file path.
            </summary>
            <param name="detokenizedFilePath">The detokenized file path.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <returns>
            The mapped file path.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeFileCommandInstaller.HandleWebConfigChanges(System.String,Sitecore.Update.Commands.ChangeFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Handles the web configuration changes.
            </summary>
            <param name="originalFilePath">The original file path.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeFileCommandInstaller.WriteProcessingMessage(System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Writes the processing message.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="context">The installation context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeFileCommandInstaller.GetCommandKey(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.PackageEntry,System.Object[])">
            <summary>
            Gets the command key.
            </summary>
            <param name="command">The command.</param>
            <param name="entry">The package entry.</param>
            <param name="parameters">The parameters.</param>
            <returns>The unique command key.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeFileCommandInstaller.HasPostAction(Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Determines whether current command has to be installed in post action.
            </summary>
            <param name="context">The context.</param>
            <returns>
              <c>true</c> if current command has to be installed in post action; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeFileCommandInstaller.BackupFile(System.String,Sitecore.Update.Commands.ChangeFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Backups the file.
            </summary>
            <param name="path">The file path.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeFileCommandInstaller.HandleConfigurationFileAlreadyExists(System.String@,Sitecore.Update.Commands.ChangeFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates the message for situation when the configuration file is to be changed but doesn not corresponds to original one.
            </summary>
            <param name="mappedPath">The mapped path.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <returns>The behavior.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeFileCommandInstaller.MergeBindings(System.String,System.String,Sitecore.Update.Commands.ChangeFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Merges the bindings.
            </summary>
            <param name="mappedPath">The mapped path.</param>
            <param name="mergedCustomizationsFilePath">The merged customizations file path.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeFileCommandInstaller.RemoveAssemblyBindingsFromPatch(System.String,System.String)">
            <summary>
            Removes the assembly bindings from patch.
            </summary>
            <param name="mappedPath">The mapped path.</param>
            <param name="xmlPatch">The XML patch.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeFileCommandInstaller.GetBindingsProcessor">
            <summary>
            Gets the bindings processor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeFileCommandInstaller.HandleSitecoreConfigFileChanges(System.String,Sitecore.Update.Commands.ChangeFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Handles the sitecore configuration file changes.
            </summary>
            <param name="mappedPath">The mapped path.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeFileCommandInstaller.CanExtractCustomizedDataFolder(System.String,Sitecore.Update.Commands.ChangeFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Determines whether data folder location has been customized in specified configuration file and can be extracted to a separate include file.
            </summary>
            <param name="mappedPath">The mapped path.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeFileCommandInstaller.GetDataFolderNormalizationHelper">
            <summary>
            Gets the data folder normalization helper.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeFileCommandInstaller.HandleFileExists(System.String,Sitecore.Update.Commands.ChangeFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Create message for situation when the file with the same name already exists.
            </summary>
            <param name="path">The file path.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <returns>The behavior.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeFileCommandInstaller.HandleFileNotExists(System.String,Sitecore.Update.Commands.ChangeFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Handles the file doesn't exist collision.
            </summary>
            <param name="path">The file path.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeFileCommandInstaller.HandleConfigurationFileNotExists(System.String@,Sitecore.Update.Commands.ChangeFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Handles the situation when configuration file to be changed does not exist.
            </summary>
            <param name="mappedPath">The file path.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeFileCommandInstaller.ReplaceFile(System.String,Sitecore.Update.Commands.ChangeFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Replaces the file.
            </summary>
            <param name="path">The file path.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller">
            <summary>
            The installer of Change item command.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.LogMethod">
            <summary>
            The log method.
            </summary>
            <param name="logLevel">
            The log level.
            </param>
            <param name="message">
            The message.
            </param>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.DoInstall(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.PackageEntry,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Executes the install event.
            </summary>
            <param name="cmd">The command.</param>
            <param name="entry">The entry.</param>
            <param name="commandContext">The command context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.GetCommandKey(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.PackageEntry,System.Object[])">
            <summary>
            Gets the command key.
            </summary>
            <param name="command">The command.</param>
            <param name="entry">The package entry.</param>
            <param name="parameters">The parameters.</param>
            <returns>The unique command key.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.GetDictionaryItemInstaller(Sitecore.Update.Commands.ChangeItemCommand,System.String)">
            <summary>
            The get dictionary item installer.
            </summary>
            <param name="command">The command.</param>
            <param name="commandKey">The command key.</param>
            <returns>The item installer.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.GetGeneralItemInstaller(Sitecore.Update.Commands.ChangeItemCommand,System.String)">
            <summary>
            The get general item installer.
            </summary>
            <param name="command">The command.</param>
            <param name="commandKey">The command key.</param>
            <returns>The item installer.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.GetItemInstaller(Sitecore.Update.Commands.ChangeItemCommand,System.String)">
            <summary>
            The get item installer.
            </summary>
            <param name="command">The command.</param>
            <param name="commandKey">The command key.</param>
            <returns>The item installer.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.IsDictionaryPart(Sitecore.Update.Commands.ChangeItemCommand)">
            <summary>
            Determines whether the specified command represents the Dictionary item change.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.DictionaryItemInstaller">
            <summary>
            The dictionary item installer.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.DictionaryItemInstaller.#ctor(System.String,Sitecore.Update.Commands.ChangeItemCommand,Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.LogMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.DictionaryItemInstaller"/> class.
            </summary>
            <param name="commandKey">The command key.</param>
            <param name="command">The command.</param>
            <param name="loggerMethod">The logger method.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.DictionaryItemInstaller.GetDictionaryItemByKey(System.String,Sitecore.Update.Commands.ChangeItemCommand,Sitecore.Data.Database,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            The get dictionary item by key.
            </summary>
            <param name="key">The dictionary item key.</param>
            <param name="changeCommand">The change command.</param>
            <param name="database">The database.</param>
            <param name="context">The context.</param>
            <returns>The dictionary Item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.DictionaryItemInstaller.GetDictionaryKeys(Sitecore.Update.Commands.ChangeItemCommand)">
            <summary>
            The get dictionary keys.
            </summary>
            <param name="command">The command.</param>
            <returns>The List of dictionary keys.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.DictionaryItemInstaller.GetItemToChange(Sitecore.Update.Commands.ChangeItemCommand,Sitecore.Data.Database,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            The get item to change.
            </summary>
            <param name="changeCommand">The change command.</param>
            <param name="database">The database.</param>
            <param name="context">The context.</param>
            <returns>The item to be changed.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.ItemInstaller">
            <summary>
            The item installer.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.ItemInstaller.command">
            <summary>
            The command.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.ItemInstaller.commandKey">
            <summary>
            The command key.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.ItemInstaller.logger">
            <summary>
            The logger.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.ItemInstaller.#ctor(System.String,Sitecore.Update.Commands.ChangeItemCommand,Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.LogMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.ItemInstaller"/> class.
            </summary>
            <param name="commandKey">The command key.</param>
            <param name="command">The command.</param>
            <param name="loggerMethod">The logger method.</param>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.ItemInstaller.Command">
            <summary>
            Gets Command.
            </summary>
            <value>The command.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.ItemInstaller.CommandKey">
            <summary>
            Gets CommandKey.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.ItemInstaller.Log">
            <summary>
            Gets Log method.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.ItemInstaller.DoInstall(Sitecore.Update.Commands.ChangeItemCommand,Sitecore.Install.Framework.PackageEntry,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Executes the install event.
            </summary>
            <param name="changeCommand">The command.</param>
            <param name="entry">The entry.</param>
            <param name="commandContext">The command context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.ItemInstaller.FilterCommand(Sitecore.Update.Interfaces.ICommand,Sitecore.Data.Database,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Chekcs whether command should not be applied.
            </summary>
            <param name="command">The command.</param>
            <param name="database">The database.</param>
            <param name="commandContext">The command context.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.ItemInstaller.GetCommandProcessor(Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Gets the command processor.
            </summary>
            <param name="changeCommand">The command.</param>
            <returns>The processor.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.ItemInstaller.GetItemToChange(Sitecore.Update.Commands.ChangeItemCommand,Sitecore.Data.Database,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            The get item to change.
            </summary>
            <param name="changeCommand">The change command.</param>
            <param name="database">The database.</param>
            <param name="context">The context.</param>
            <returns>The item to be changed.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.ItemInstaller.HandleItemNotFoundCollision(Sitecore.Update.Commands.ChangeItemCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates the message for situation when item is to be changed but not found.
            </summary>
            <param name="changeCommand">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.ItemInstaller.RegisterRollbackCommand(Sitecore.Data.Items.Item,Sitecore.Update.Commands.ChangeItemCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Registers the rollback command.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="cmd">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ChangeXmlFileCommandInstaller">
            <summary>
            Install the change xml file command.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeXmlFileCommandInstaller.#cctor">
            <summary>
            Initializes the <see cref="T:Sitecore.Update.Installer.Items.ChangeXmlFileCommandInstaller"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.ChangeXmlFileCommandInstaller.AllowPatchXMLFiles">
            <summary>
            Gets or sets a value indicating whether [allow patch XML files].
            </summary>
            <value><c>true</c> if patching of XML files is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeXmlFileCommandInstaller.ExtractCommandFromProperties(Sitecore.Install.Framework.PackageEntry)">
            <summary>
            Extracts the command from package entry properties.
            </summary>
            <param name="entry">The package entry.</param>
            <returns>The command.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeXmlFileCommandInstaller.WriteProcessingMessage(System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Writes the processing message.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="context">The installation context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeXmlFileCommandInstaller.HandleConfigurationFileAlreadyExists(System.String@,Sitecore.Update.Commands.ChangeFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates the message for situation when the configuration file is to be changed but doesn not corresponds to original one.
            </summary>
            <param name="mappedPath">The mapped path.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <returns>The behavior.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeXmlFileCommandInstaller.AllowPatchFiles">
            <summary>
            Identifies whether XML file patching is allowed or it is in experimental state.
            </summary>
            <returns><c>true</c> if patching is allowed.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeXmlFileCommandInstaller.GetFormattedPatchMessages(System.Collections.Generic.List{Sitecore.Update.Xml.XmlMergeResult},System.Boolean@)">
            <summary>
            Gets the formatted patch messages.
            </summary>
            <param name="patchMessages">The patch messages.</param>
            <param name="hasMergeErrors">if set to <c>true</c> than we have errors when patching.</param>
            <returns>The formatted patch messages.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeXmlFileCommandInstaller.PatchAndReplaceFile(System.String,Sitecore.Update.Commands.ChangeFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Patches the and replace file.
            </summary>
            <param name="path">The file path.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeXmlFileCommandInstaller.ReplaceFile(System.String,Sitecore.Update.Commands.ChangeFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Replaces the file.
            </summary>
            <param name="path">The file path.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeXmlFileCommandInstaller.PatchFile(System.Xml.XmlDocument,Sitecore.Update.Xml.XmlDiff,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Patches the file.
            </summary>
            <param name="doc">The xml file.</param>
            <param name="diff">The the list of patches to be applied.</param>
            <param name="context">The context.</param>
            <returns>The list of messages that have been generated during patching.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeXmlFileCommandInstaller.FormatMergeMessages(System.Collections.Generic.List{Sitecore.Update.Xml.XmlMergeResult})">
            <summary>
            Formats the merge messages.
            </summary>
            <returns>The formatted messages.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ChangeXmlFileCommandInstaller.GetCommandKey(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.PackageEntry,System.Object[])">
            <summary>
            Gets the command key.
            </summary>
            <param name="command">The command.</param>
            <param name="entry">The package entry.</param>
            <param name="parameters">The parameters.</param>
            <returns>The unique command key.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.CustomActionInstaller">
            <summary>
            Executes Post Step custom action
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.CustomActionInstaller.action">
            <summary>
            Tha Custom Action.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.CustomActionInstaller.metadata">
            <summary>
            Package Meta Data collection.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.CustomActionInstaller.#ctor(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.CustomActionInstaller"/> class.
            </summary>
            <param name="action">The action.</param>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.CustomActionInstaller.Metadata">
            <summary>
            Gets the metadata.
            </summary>
            <value>The metadata.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.CustomActionInstaller.Action">
            <summary>
            Gets or sets the custom action.
            </summary>
            <value>The custom action.</value>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.CustomActionInstaller.Process(Sitecore.Install.Framework.IProcessingContext,Sitecore.Install.Framework.IProcessingContext)">
            <summary>
            Runs the processor.
            </summary>
            <param name="entry">The entry.</param>
            <param name="context">The processing context.</param>
            <exception cref="T:System.Exception">CommandInstallerContext is not set in current processing context.</exception>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.CustomActionInstaller.GetCommandKey(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.PackageEntry,System.Object[])">
            <summary>
            Gets the command key.
            </summary>
            <param name="command">The command.</param>
            <param name="entry">The entry.</param>
            <param name="parameters">The parameters.</param>
            <returns>The unique command key.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.DeleteFileCommandInstaller">
            <summary>
            Installer of Delete file command.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFileCommandInstaller.DoInstall(Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            installs the command.
            </summary>
            <param name="cmd">The comamnd.</param>
            <param name="context">The context.</param>
            <exception cref="T:System.Exception">Path to the file to be deleted can't be empty</exception>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFileCommandInstaller.ProcessDoInstall(Sitecore.Update.Commands.DeleteFileCommand,System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Processing of installing file
            </summary>
            <param name="command">The command</param>
            <param name="mappedPath">Path to the file</param>
            <param name="detokenizedFilePath">path to the enabled file</param>
            <param name="context">The context</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFileCommandInstaller.EnabledFileExists(System.String)">
            <summary>
            Determine exisiting enabled config in case disabled exists
            </summary>
            <param name="path">path to the disabled config file</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFileCommandInstaller.FileDisabled(System.String)">
            <summary>
            Determine is file disabled or example
            </summary>
            <param name="path">path to the file</param>
            <returns>True if the file is disabled or example</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFileCommandInstaller.GetEnabledPath(System.String)">
            <summary>
            Returns path to enabled file for disabled or example file
            </summary>
            <param name="path">path to the file</param>
            <returns>Returns path to enabled file if file disabled or example. Otherwise - returns path without any changes</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFileCommandInstaller.GetCommandKey(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.PackageEntry,System.Object[])">
            <summary>
            Gets the command key.
            </summary>
            <param name="command">The command.</param>
            <param name="entry">The package entry.</param>
            <param name="parameters">The parameters.</param>
            <returns>The unique command key.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFileCommandInstaller.HasPostAction(Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Determines whether current command has to be installed in post action.
            </summary>
            <param name="context">The context.</param>
            <returns>
              <c>true</c> if current command has to be installed in post action; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFileCommandInstaller.FileExists(System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Files the exists.
            </summary>
            <param name="path">The file path.</param>
            <param name="context">The context.</param>
            <returns><c>true</c> if file with specified name exists.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFileCommandInstaller.HandleConfigurationFileModified(Sitecore.Update.Commands.DeleteFileCommand,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Handles the situation when configuration file is scheduled to be deleted but was modified.
            </summary>
            <param name="command">The command.</param>
            <param name="mappedPath">The mapped path.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFileCommandInstaller.HandleUnsafeConfigurationFileModified(Sitecore.Update.Commands.DeleteFileCommand,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Handles the unsafe configuration file modified.
            </summary>
            <param name="command">The command.</param>
            <param name="mappedPath">The mapped path.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFileCommandInstaller.HandleFileModified(Sitecore.Update.Commands.DeleteFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message for situation when file is scheduled to be deleted but was previously modified.
            </summary>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <returns>The behavior.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFileCommandInstaller.HandleFileNotFound(Sitecore.Update.Commands.DeleteFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Handles the file not found collision.
            </summary>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFileCommandInstaller.IsFileModified(System.String,Sitecore.Update.Commands.DeleteFileCommand)">
            <summary>
            Determines whether file with specified path is modified.
            </summary>
            <param name="command">The command.</param>
            <returns>
              <c>true</c> if file with specified path is modified; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFileCommandInstaller.RemoveFile(Sitecore.Update.Commands.DeleteFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Removes the file.
            </summary>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFileCommandInstaller.RemoveFile(Sitecore.Update.Commands.DeleteFileCommand,Sitecore.Update.Installer.CommandInstallerContext,System.String)">
            <summary>
            Removes the file
            </summary>
            <param name="command">The command</param>
            <param name="context">The context</param>
            <param name="detokenizedFilePath">Detokenized path</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.DeleteFolderCommandInstaller">
            <summary>
            The installer of delete folder command.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFolderCommandInstaller.GetCommandKey(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.PackageEntry,System.Object[])">
            <summary>
            Gets the command key.
            </summary>
            <param name="command">The command.</param>
            <param name="entry">The package entry.</param>
            <param name="parameters">The parameters.</param>
            <returns>The unique command key.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFolderCommandInstaller.ProcessFolders(Sitecore.Install.Framework.PackageEntry)">
            <summary>
            Processes the folders.
            </summary>
            <param name="entry">The entry.</param>
            <returns>
              <c>true</c> if folder entry can be processed.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFolderCommandInstaller.AddFile(System.String,System.IO.Stream,Sitecore.Update.Installer.CommandInstallerContext,System.Collections.Generic.List{Sitecore.Update.Installer.FileCopyInfo})">
            <summary>
            Adds the file.
            </summary>
            <param name="path">The path.</param>
            <param name="file">The file.</param>
            <param name="context">The context.</param>
            <param name="fileOperationTracker">The file operation tracker.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFolderCommandInstaller.HasPostAction(Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Determines whether current command has to be installed in post action.
            </summary>
            <param name="context">The context.</param>
            <returns>
              <c>true</c> if current command has to be installed in post action; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFolderCommandInstaller.DoInstall(Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Install the command.
            </summary>
            <param name="cmd">The comamnd.</param>
            <param name="context">The context.</param>
            <exception cref="T:System.Exception">Path to the folder to be deleted can't be empty</exception>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFolderCommandInstaller.FolderExists(System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Chacks whether Folder exists.
            </summary>
            <param name="path">The folder path.</param>
            <param name="context">The context.</param>
            <returns><c>true</c> if folder exists in specified path.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFolderCommandInstaller.HasChildren(System.String,Sitecore.Update.Commands.DeleteFolderCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Determines whether the specified path has children.
            </summary>
            <param name="path">The folder path.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <returns>
              <c>true</c> if the specified path has children; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFolderCommandInstaller.RemoveFolder(Sitecore.Update.Commands.DeleteFolderCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Removes the folder.
            </summary>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFolderCommandInstaller.HandleFolderHasFiles(Sitecore.Update.Commands.DeleteFolderCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message when folder is to be deleted but still has files.
            </summary>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <returns>The behavior.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteFolderCommandInstaller.RegisterRollbackCommand(System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Registers the rollback command.
            </summary>
            <param name="folderPath">The folder path.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller">
            <summary>
            The installer of delete item command.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.Flush">
            <summary>
            Flushes the command installation
            </summary>
            <exception cref="T:System.Exception">CommandInstallerContext is not set in current processing context.</exception>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.DeleteItem(Sitecore.Data.Items.Item,System.Boolean,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Deletes the item.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="allowPostponning">if set to <c>true</c> postponning operation is allowed.</param>
            <param name="commandKey">The command key.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.TryDeleteTemplatePartItem(Sitecore.Data.Items.Item,System.Boolean,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Tries the delete template part item.
            </summary>
            <param name="item">The item.</param>
            <param name="allowPostponning">if set to <c>true</c> postpone operation is allowed.</param>
            <param name="commandKey">The command key.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.TryDeleteContentItem(Sitecore.Data.Items.Item,System.Boolean,System.Int32,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Tries the delete content item.
            </summary>
            <param name="item">The item to be deleted.</param>
            <param name="allowPostponning">if set to <c>true</c> postpone operation is allowed.</param>
            <param name="postponedChildrenCount">The postponed children count.</param>
            <param name="context">The installation context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.GetTemplateItem(Sitecore.Data.Items.Item)">
            <summary>
            Gets the template item.
            </summary>
            <param name="templatePart">The template part.</param>
            <returns>The template item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.DeleteSingleItem(Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Deletes the single item.
            </summary>
            <param name="item">The item.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.DoDeleteItem(System.String,Sitecore.Data.Items.Item,System.Boolean,Sitecore.Update.CollisionBehavior,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Deletes the item.
            </summary>
            <param name="commandKey">The command key.</param>
            <param name="deletedItem">The deleted item.</param>
            <param name="allowPostpone">if set to <c>true</c> postponnig operation is allowed.</param>
            <param name="behavior">The behavior.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.EnsureReferers(Sitecore.Links.ItemLink[],Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Ensures the referers exist.
            </summary>
            <param name="links">The links.</param>
            <param name="item">The Sitecore item.</param>
            <param name="context">The context.</param>
            <returns><c>true</c> if referers exist.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.EnsureItems(System.Collections.Generic.List{Sitecore.Data.ID},Sitecore.Data.Database,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Ensures the items.
            </summary>
            <param name="ids">The item Ids.</param>
            <param name="database">The database.</param>
            <param name="context">The context.</param>
            <returns><c>true</c> if at least one item with specified id exist.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.GetChildren(Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the children.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="context">The context.</param>
            <returns>The list of children.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.GetCommandKey(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.PackageEntry,System.Object[])">
            <summary>
            Gets the command key.
            </summary>
            <param name="command">The command.</param>
            <param name="entry">The package entry.</param>
            <param name="parameters">The parameters.</param>
            <returns>The unique command key.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.GetCommandKey(Sitecore.Data.Items.Item,System.Object[])">
            <summary>
            Gets the command key.
            </summary>
            <param name="item">The item.</param>
            <param name="parameters">The parameters.</param>
            <returns>
            The unique command key.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.GetItem(Sitecore.Data.ID,Sitecore.Data.Database,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the item.
            </summary>
            <param name="id">The Item id.</param>
            <param name="database">The database.</param>
            <param name="context">The context.</param>
            <returns>The Sitecore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.GetReferers(Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the referers.
            </summary>
            <param name="deleteItem">The delete item.</param>
            <param name="context">The context.</param>
            <returns>The list of referrers.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.HandleHasReferences(Sitecore.Data.Items.Item,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates the message in situation when item is to be deleted but has referrers.
            </summary>
            <param name="deleteItem">The item that is scheduled to be deleted.</param>
            <param name="commandKey">The command key.</param>
            <param name="context">The context.</param>
            <returns>The behavior.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.HandleItemHasBeenChanged(Sitecore.Data.Items.Item,Sitecore.Update.Commands.DeleteItemCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message in situation when item is scheduled to be deleted but has been changed.
            </summary>
            <param name="deletedItem">The item to be deleted.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <returns>The behavior.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.HandleItemHasCollision(Sitecore.Update.Commands.DeleteItemCommand,Sitecore.Data.Items.Item,Sitecore.Install.Framework.PackageEntry,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.CollisionBehavior)">
            <summary>
            Creates a message for situation when item is to be deleted but either has children or has been moved.
            </summary>
            <param name="command">The command.</param>
            <param name="deletedItem">The deleted item.</param>
            <param name="entry">The entry.</param>
            <param name="context">The context.</param>
            <param name="behavior">The behavior.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.HandleTemplateHasBasedItems(Sitecore.Data.Items.Item,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates message when template is to be deleted but is in use.
            </summary>
            <param name="deletedItem">The item to be deleted.</param>
            <param name="commandKey">The command key.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.HasBasedItems(Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Determines whether specified item has based items.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="context">The context.</param>
            <returns>
              <c>true</c> if specified item has based items; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.HasBasedStandardValuesItemOnly(Sitecore.Data.Items.Item,System.Collections.Generic.List{Sitecore.Data.Items.Item})">
            <summary>
            Determines whether specified items is not a StandardValues of <see cref="T:Sitecore.Data.Items.TemplateItem"/> item.
            </summary>
            <param name="item">The item.</param>
            <param name="items">The items.</param>
            <returns>Returns <c>true</c> if any of items is not a StandardValues; otherwise, <c>false</c></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.HasBasedStandardValuesItemOnly(Sitecore.Data.Items.TemplateItem,System.Collections.Generic.List{Sitecore.Data.ID})">
            <summary>
            Determines whether specified items is not a StandardValues of <see cref="T:Sitecore.Data.Items.TemplateItem"/> item.
            </summary>
            <param name="item">The item.</param>
            <param name="ids">The IDs.</param>
            <returns>Returns <c>true</c> if any of items is not a StandardValues; otherwise, <c>false</c></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.HasBeenModified(Sitecore.Data.Items.Item,Sitecore.Update.Commands.DeleteItemCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Determines whether the specified item has been modified.
            </summary>
            <param name="item">The sitecore item.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <returns>
              <c>true</c> if the specified item has been modified; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.HasChildren(Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Determines whether the specified item has children.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="context">The context.</param>
            <returns>
              <c>true</c> if the specified item has children; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.HasChildren(Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext,System.Boolean,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Determines whether the specified item has children.
            </summary>
            <param name="item">The sitecore item.</param>
            <param name="context">The context.</param>
            <param name="fillOutputData">if set to <c>true</c> count the children that were previously skipped.</param>
            <param name="countPreviouslySkippedChildren">The count previously skipped children.</param>
            <returns>
              <c>true</c> if the specified item has children; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.IsPostponnedToBeDeleted(Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Determines whether specified item is postponned to be deleted.
            </summary>
            <param name="item">The item.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.IsPreviouslySkippedToBeDeleted(Sitecore.Data.ID,Sitecore.Data.Database,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Determines whether the specified item ID was previously prevented for deletion.
            </summary>
            <param name="itemID">The item ID.</param>
            <param name="database">The database.</param>
            <param name="context">The context.</param>
            <returns>
              <c>true</c> if the specified item ID was previously prevented for deletion; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.DoInstall(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.PackageEntry,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Executes the install event.
            </summary>
            <param name="cmd">The CMD.</param>
            <param name="entry">The entry.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.ItemDeletedFromDifferentLocation(Sitecore.Update.Commands.DeleteItemCommand,Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Items the deleted from different location.
            </summary>
            <param name="command">The command.</param>
            <param name="deletedItem">The deleted item.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.GetItemPath(Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the item path.
            </summary>
            <param name="item">The item.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.RegisterRollbackCommand(Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Registers the rollback command.
            </summary>
            <param name="item">The item to be deleted.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteItemCommandInstaller.RemoveContextReferers(Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Removes the context referers.
            </summary>
            <param name="item">The sitecore item.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.DeleteXmlFileCommandInstaller">
            <summary>
            The installer of Delete xml file command.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteXmlFileCommandInstaller.GetCustomizedBackupFilePath(System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the backup file path to the customized configuration file.
            </summary>
            <param name="mappedFilePath">The mapped file path.</param>
            <param name="hashCode">The hash code.</param>
            <param name="context">The command context.</param>
            <returns>The backup file path.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteXmlFileCommandInstaller.GetTargetCleanFilePath(System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the target clean file path.
            </summary>
            <param name="mappedFilePath">The mapped file path.</param>
            <param name="hashCode">The hash code.</param>
            <param name="context">The command context.</param>
            <returns>The clean file path.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteXmlFileCommandInstaller.GetPatchFilePath(System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the backup file path to the customized configuration file.
            </summary>
            <param name="mappedFilePath">The mapped file path.</param>
            <param name="patchHashCode">The patch hash code.</param>
            <param name="context">The command context.</param>
            <returns>The patch file path.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteXmlFileCommandInstaller.IsXmlPatchSupported(System.String)">
            <summary>
            Determines whether specified mapped file belongs to Include files that support patching.
            </summary>
            <param name="mappedPath">The mapped file path.</param>
            <returns>Value indicating whether xml patch supported.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteXmlFileCommandInstaller.GetEnabledConfigFilePath(System.String)">
            <summary>
            Returns the file path for enabled config that corresponds current file path.
            </summary>
            <param name="filePath">The file path.</param>
            <returns>The file path for enabled config that corresponds current file path</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteXmlFileCommandInstaller.RemoveFileExtension(System.String)">
            <summary>
            Returns the file path without extension.
            </summary>
            <param name="filePath">The file path.</param>
            <returns>The file path without extension.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DeleteXmlFileCommandInstaller.HandleConfigurationFileModified(Sitecore.Update.Commands.DeleteFileCommand,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Handles the situation when configuration file is scheduled to be deleted but was modified.
            </summary>
            <param name="command">The command.</param>
            <param name="mappedPath">The mapped path.</param>
            <param name="context">The context.</param>
            <returns>The collision behavior.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.DataFolderNormalizationHelper">
            <summary>
            Helper methods to determine whether data folder path has been customized and extract customized path to a separate include file.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.DataFolderNormalizationHelper.DataFolderIncludeFilePath">
            <summary>
            The data folder include file path
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.DataFolderNormalizationHelper.SitecoreConfigFilePath">
            <summary>
            The path to Sitecore.config
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DataFolderNormalizationHelper.CanExtractCustomDataLocation(System.IO.Stream)">
            <summary>
            Determines whether data folder variable has been customized in the specified XML file.
            </summary>
            <param name="xmlFileContent">Content of the XML file.</param>
            <returns><c>true</c> when customization detected.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DataFolderNormalizationHelper.GetDataFolderPath(System.IO.Stream)">
            <summary>
            Gets the data folder path.
            </summary>
            <param name="xmlFileContent">Content of the XML file.</param>
            <returns>The path to the Data folder. Null when not found.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.DataFolderNormalizationHelper.ExtractDataFolderCustomization(System.IO.Stream)">
            <summary>
            Extracts the data folder customization to a separate include file.
            </summary>
            <param name="xmlFileContent">Content of the XML file.</param>
            <returns>A stream with patch.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.WebConfigBindingMerger">
            <summary>
            Responsible for merging binding section of two xml files.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.WebConfigBindingMerger.MergeBindings(System.IO.Stream,System.IO.Stream)">
            <summary>
            Merges the bindings.
            </summary>
            <param name="sourceConfig">The source configuration.</param>
            <param name="targetConfig">The target configuration.</param>
            <returns>Merged configuration file. Source file will be returned in case no changes were made.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.WebConfigBindingMerger.DoMergeBindings(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>
            Merges two bindings node. Result is saved to the source node.
            </summary>
            <param name="sourceBindings">The source bindings node.</param>
            <param name="targetBindings">The target bindings node.</param>
            <returns><c>true</c> in case source node has been modified, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.WebConfigBindingMerger.FindMatchingBinding(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>
            Finds the matching binding.
            </summary>
            <param name="sourceBindings">The source bindings.</param>
            <param name="bindingNode">The binding node.</param>
            <returns>Node from source document that describes the same binding.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.WebConfigBindingMerger.GetBindingId(System.Xml.XmlNode)">
            <summary>
            Gets the binding node identifier.
            </summary>
            <param name="bindingNode">The binding node.</param>
            <returns>The identifier string.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.WebConfigBindingMerger.ReplaceBindingNode(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>
            Replaces the binding node.
            </summary>
            <param name="sourceBinding">The source binding.</param>
            <param name="targetBinding">The target binding.</param>
            <returns><c>true</c> is source document has been modified.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.WebConfigBindingMerger.AddBinding(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>
            Adds the binding.
            </summary>
            <param name="sourceBindings">The source bindings.</param>
            <param name="bindingToAdd">The binding to add.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.WebConfigBindingMerger.SaveToStream(System.Xml.XmlDocument)">
            <summary>
            Saves to stream.
            </summary>
            <param name="doc">The document.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.WebConfigBindingMerger.LoadConfigFile(System.IO.Stream)">
            <summary>
            Loads the configuration file.
            </summary>
            <param name="file">The file.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.WebConfigBindingMerger.GetBindingsNode(System.Xml.XmlDocument)">
            <summary>
            Gets the bindings node.
            </summary>
            <param name="doc">The document.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.WebConfigBindingMerger.ImportBindingsNode(System.Xml.XmlDocument,System.Xml.XmlNode)">
            <summary>
            Imports the bindings node.
            </summary>
            <param name="source">The source.</param>
            <param name="bindingsNode">The bindings node.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.WebConfigBindingMerger.GetNodePath(System.Xml.XmlNode)">
            <summary>
            Gets the node path.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PostStepInstaller">
            <summary>
            The post installation step installer.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperation">
            <summary>
            The file operation type.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperation.DeleteFile">
            <summary>
            Delete file operation.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperation.DeleteDir">
            <summary>
            Delete folder operation.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperation.AddDir">
            <summary>
            Create folder operation.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperation.AddFile">
            <summary>
            Add file operation.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperation.ChangeFile">
            <summary>
            Change file operation
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PostStepInstaller.CopyDirectory(System.String,System.String)">
            <summary>
            Copies the directory.
            </summary>
            <param name="src">The source.</param>
            <param name="dst">The destination.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PostStepInstaller.Process(Sitecore.Install.Framework.IProcessingContext,Sitecore.Install.Framework.IProcessingContext)">
            <summary>
            Runs the processor.
            </summary>
            <param name="entry">The entry.</param>
            <param name="context">The processing context.</param>
            <exception cref="T:Sitecore.Update.Installer.Exceptions.PostStepInstallerException"><c>PostStepInstallerException</c>.</exception>
            <exception cref="T:System.Exception">CommandInstallerContext is not set in current processing context.</exception>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PostStepInstaller.GenerateCommandFile(System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Generates the command batch file.
            </summary>
            <param name="path">The path to the batch file.</param>
            <param name="commandContext">The command context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PostStepInstaller.GenerateOperationList(Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Generates the operation list.
            </summary>
            <param name="context">The context.</param>
            <returns>The list of operaiotns to be executed.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PostStepInstaller.GetCommandKey(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.PackageEntry,System.Object[])">
            <summary>
            Gets the command key.
            </summary>
            <param name="command">The command.</param>
            <param name="entry">The entry.</param>
            <param name="parameters">The parameters.</param>
            <returns>The unique command key.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PostStepInstaller.HandleError(System.Exception,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message when error is occured.
            </summary>
            <param name="ex">The exception.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PostStepInstaller.CreateDomain(Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates separate appdomain that will install files
            </summary>
            <param name="context">The context.</param>
            <returns>The domain.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PostStepInstaller.CreateWorker(Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates the worker.
            </summary>
            <param name="context">The context.</param>
            <returns>The file installer.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationInfo">
            <summary>
            File Operation information.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationInfo.Operation">
            <summary>
            The file operation information.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationInfo.SourcePath">
            <summary>
            The source path.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationInfo.TargetPath">
            <summary>
            The target path.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationInfo.#ctor(Sitecore.Update.Installer.Items.PostStepInstaller.FileOperation,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationInfo"/> class.
            </summary>
            <param name="operation">The operation.</param>
            <param name="sourcePath">The source path.</param>
            <param name="targetPath">The target path.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationWorker">
            <summary>
            The file operation worker.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationWorker.context">
            <summary>
            The context.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationWorker.finish">
            <summary>
            The finish event.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationWorker.log">
            <summary>
            The logger.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationWorker.logFile">
            <summary>
            The log file path.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationWorker.operations">
            <summary>
            The operations to execute.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationWorker.start">
            <summary>
            Start event.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationWorker.Context">
            <summary>
            Gets or sets the context.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationWorker.Finish">
            <summary>
            Sets the finish event.
            </summary>
            <value>The finish event.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationWorker.LogFile">
            <summary>
            Sets the log file path.
            </summary>
            <value>The log file path.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationWorker.Operations">
            <summary>
            Sets the file operations to execute.
            </summary>
            <value>The operations.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationWorker.Start">
            <summary>
            Sets the start event.
            </summary>
            <value>The start event.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationWorker.AppDomain">
            <summary>
            Gets the application domain.
            </summary>
            <value>The application domain.</value>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationWorker.Move(System.String,System.String)">
            <summary>
            Move a directory to a new location. Allows for directories to be moved across volumes/partitions.
            </summary>
            <param name="sourceDirName">The directory which should be moved.</param>
            <param name="destDirName">The destination where the directory should be moved to. This should include the new directory name.</param>
            <exception cref="T:System.ArgumentNullException">When either <paramref name="sourceDirName"/> or <paramref name="destDirName"/> is null or empty.</exception>
            <exception cref="T:System.ArgumentException">When the <paramref name="sourceDirName"/> or <paramref name="destDirName"/> contains one or more invalid characters as defined by System.IO.Path.GetInvalidPathChars().</exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name or both exceed the system-defined maximum length.</exception>
            <exception cref="T:System.IO.IOException">destDirName already exists.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller doesn't have the required permission.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">The path specified by <paramref name="sourceDirName"/> is invalid</exception>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationWorker.Run">
            <summary>
            Runs the installation.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationWorker.Runaway">
            <summary>
            Run the installation.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationWorker.MoveRecursive(System.IO.DirectoryInfo,System.IO.DirectoryInfo)">
            <summary>
            Moves files recursively.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationWorker.CatchAll(System.Threading.ThreadStart)">
            <summary>
            Catches all.
            </summary>
            <param name="callback">The callback.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationWorker.RunawayThread">
            <summary>
            Runaways the thread.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationWorker.CreateText(System.String)">
            <summary>
            Creates the text.
            </summary>
            <param name="filename">The filename.</param>
            <returns>The writer.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationWorker.LogError(System.Exception)">
            <summary>
            Logs the error.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationWorker.ProcessOperation(Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationInfo)">
            <summary>
            Processes the operation.
            </summary>
            <param name="info">The file information.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationWorker.RemoveEmptyDirectory(System.String)">
            <summary>
            Removes the empty directory.
            </summary>
            <param name="path">The directory path.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PostStepInstaller.FileOperationWorker.WriteLog(System.String)">
            <summary>
            Writes to the log.
            </summary>
            <param name="s">The message.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewAddBreakingChangesFileCommandInstaller">
            <summary>
            The preview installer of Add breaking changes file command.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddBreakingChangesFileCommandInstaller.Log(Sitecore.Update.Installer.Items.BaseInstaller.LogLevel,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="level">The log level.</param>
            <param name="text">The log text.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddBreakingChangesFileCommandInstaller.BackupFile(System.String,Sitecore.Update.Commands.AddFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Backups the file.
            </summary>
            <param name="path">The file path.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddBreakingChangesFileCommandInstaller.AddFile(System.String,System.IO.Stream,Sitecore.Update.Installer.CommandInstallerContext,System.Collections.Generic.List{Sitecore.Update.Installer.FileCopyInfo})">
            <summary>
            Adds the file.
            </summary>
            <param name="path">The path.</param>
            <param name="file">The file.</param>
            <param name="context">The context.</param>
            <param name="fileOperationTracker">The file operation tracker.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewAddFileCommandInstaller">
            <summary>
            The preview installer for Add file command.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddFileCommandInstaller.HasPostAction(Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Determines whether current command has to be installed in post action.
            </summary>
            <param name="context">The context.</param>
            <returns>
              <c>true</c> if current command has to be installed in post action; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddFileCommandInstaller.Log(Sitecore.Update.Installer.Items.BaseInstaller.LogLevel,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="level">The log level.</param>
            <param name="text">The log text.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddFileCommandInstaller.BackupFile(System.String,Sitecore.Update.Commands.AddFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Backups the file.
            </summary>
            <param name="path">The file path.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddFileCommandInstaller.AddFile(System.String,System.IO.Stream,Sitecore.Update.Installer.CommandInstallerContext,System.Collections.Generic.List{Sitecore.Update.Installer.FileCopyInfo})">
            <summary>
            Adds the file.
            </summary>
            <param name="path">The path.</param>
            <param name="file">The file.</param>
            <param name="context">The context.</param>
            <param name="fileOperationTracker">The file operation tracker.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewAddFolderCommandInstaller">
            <summary>
            Installaer for Add folder command in Preview mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddFolderCommandInstaller.Finish">
            <summary>
            Finalize the command installation.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddFolderCommandInstaller.Log(Sitecore.Update.Installer.Items.BaseInstaller.LogLevel,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="level">The log level.</param>
            <param name="text">The log text.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddFolderCommandInstaller.AddFolder(System.String,Sitecore.Update.Commands.AddFolderCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Adds the folder.
            </summary>
            <param name="path">The path.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller">
            <summary>
            The installer of Add item command in Preview mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.GetDictionaryItemInstaller(Sitecore.Update.Commands.AddItemCommand,System.String)">
            <summary>
            The get dictionary item installer.
            </summary>
            <param name="command">The command.</param>
            <param name="commandKey">The command key.</param>
            <returns>The item installer.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.GetGeneralItemInstaller(Sitecore.Update.Commands.AddItemCommand,System.String)">
            <summary>
            The get general item installer.
            </summary>
            <param name="command">The command.</param>
            <param name="commandKey">The command key.</param>
            <returns>The item installer.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.Log(Sitecore.Update.Installer.Items.BaseInstaller.LogLevel,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="level">The log level.</param>
            <param name="text">The log text.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewDictionaryItemInstaller">
            <summary>
            The preview dictionary item installer.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewDictionaryItemInstaller.#ctor(System.String,Sitecore.Update.Commands.AddItemCommand,Sitecore.Update.Installer.Items.AddItemCommandInstaller.LogMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewDictionaryItemInstaller"/> class.
            </summary>
            <param name="commandKey">The command key.</param>
            <param name="command">The command.</param>
            <param name="logMethodMethod">The log method method.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewDictionaryItemInstaller.CopyVersions(Sitecore.Data.Items.Item,System.Int32)">
            <summary>
            Copies the versions.
            </summary>
            <param name="masterItem">The master item.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewDictionaryItemInstaller.CreateLightweightItem(Sitecore.Data.Items.Item,Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Data.Database,Sitecore.Update.Interfaces.ICommand,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates the lightweight item.
            </summary>
            <param name="destination">The destination.</param>
            <param name="item">The Sync item.</param>
            <param name="database">The database.</param>
            <param name="addCommand">The command.</param>
            <param name="path">The item path.</param>
            <param name="context">The context.</param>
            <returns>The cleared item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewDictionaryItemInstaller.DoCleanupItem(Sitecore.Data.Items.Item,Sitecore.Data.Serialization.ObjectModel.SyncItem)">
            <summary>
            Cleanups the item.
            </summary>
            <param name="installedItem">The installed item.</param>
            <param name="item">The sync item.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewDictionaryItemInstaller.DoCreateParentItem(System.String,Sitecore.Data.Database)">
            <summary>
            Create the parent item from path.
            </summary>
            <param name="path">The item path.</param>
            <param name="database">The database.</param>
            <returns>The parent <see cref="T:Sitecore.Data.Items.Item"/>.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewDictionaryItemInstaller.DoMoveTo(Sitecore.Data.Items.Item,Sitecore.Data.Items.Item)">
            <summary>
            Moves the item to the parent location.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewDictionaryItemInstaller.GetAddVersionProcessor">
            <summary>
            Gets the add version processor.
            </summary>
            <returns>
            The processor.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewDictionaryItemInstaller.GetFieldProcessor">
            <summary>
            Gets the field processor.
            </summary>
            <returns>
            The field comamnds processor.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewDictionaryItemInstaller.GetItem(Sitecore.Data.ID,Sitecore.Data.Database,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the item.
            </summary>
            <param name="id">The item id.</param>
            <param name="database">The database.</param>
            <param name="context">The context.</param>
            <returns>The Sitecore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewDictionaryItemInstaller.GetItemPath(Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the item path.
            </summary>
            <param name="item">The item.</param>
            <param name="context">The context.</param>
            <returns>The full item path.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewDictionaryItemInstaller.GetTemplateItem(Sitecore.Data.ID,Sitecore.Data.Database,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the template item.
            </summary>
            <param name="id">The template id.</param>
            <param name="database">The database.</param>
            <param name="context">The context.</param>
            <returns>The Template item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewDictionaryItemInstaller.OverwriteItem(Sitecore.Data.Items.Item,Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Data.Database,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Overwrites the item.
            </summary>
            <param name="installedItem">The installed item.</param>
            <param name="item">The Sync item.</param>
            <param name="database">The database.</param>
            <param name="addCommand">The command.</param>
            <param name="context">The context.</param>
            <returns>The overwritten item.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewItemInstaller">
            <summary>
            The preview item installer.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewItemInstaller.#ctor(System.String,Sitecore.Update.Commands.AddItemCommand,Sitecore.Update.Installer.Items.AddItemCommandInstaller.LogMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewItemInstaller"/> class.
            </summary>
            <param name="commandKey">The command key.</param>
            <param name="command">The command.</param>
            <param name="logMethodMethod">The log method method.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewItemInstaller.CopyVersions(Sitecore.Data.Items.Item,System.Int32)">
            <summary>
            Copies the versions.
            </summary>
            <param name="masterItem">The master item.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewItemInstaller.CreateLightweightItem(Sitecore.Data.Items.Item,Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Data.Database,Sitecore.Update.Interfaces.ICommand,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates the lightweight item.
            </summary>
            <param name="destination">The destination.</param>
            <param name="item">The Sync item.</param>
            <param name="database">The database.</param>
            <param name="addCommand">The command.</param>
            <param name="path">The item path.</param>
            <param name="context">The context.</param>
            <returns>The cleared item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewItemInstaller.DoCleanupItem(Sitecore.Data.Items.Item,Sitecore.Data.Serialization.ObjectModel.SyncItem)">
            <summary>
            Cleanups the item.
            </summary>
            <param name="installedItem">The installed item.</param>
            <param name="item">The sync item.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewItemInstaller.DoCreateParentItem(System.String,Sitecore.Data.Database)">
            <summary>
            Create the parent item from path.
            </summary>
            <param name="path">The item path.</param>
            <param name="database">The database.</param>
            <returns>The parent <see cref="T:Sitecore.Data.Items.Item"/>.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewItemInstaller.DoMoveTo(Sitecore.Data.Items.Item,Sitecore.Data.Items.Item)">
            <summary>
            Moves the item to the parent location.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewItemInstaller.GetFieldProcessor">
            <summary>
            Gets the field processor.
            </summary>
            <returns>
            The field comamnds processor.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewItemInstaller.GetItem(Sitecore.Data.ID,Sitecore.Data.Database,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the item.
            </summary>
            <param name="id">The item id.</param>
            <param name="database">The database.</param>
            <param name="context">The context.</param>
            <returns>The Sitecore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewItemInstaller.GetItemPath(Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the item path.
            </summary>
            <param name="item">The item.</param>
            <param name="context">The context.</param>
            <returns>The full item path.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewItemInstaller.GetTemplateItem(Sitecore.Data.ID,Sitecore.Data.Database,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the template item.
            </summary>
            <param name="id">The template id.</param>
            <param name="database">The database.</param>
            <param name="context">The context.</param>
            <returns>The Template item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewItemInstaller.InstallVersion(System.String,Sitecore.Data.Serialization.ObjectModel.SyncVersion,Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Installs the version.
            </summary>
            <param name="addCommandKey">The command key.</param>
            <param name="version">The version.</param>
            <param name="item">The Sync item.</param>
            <param name="newItem">The new item.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewAddItemCommandInstaller.PreviewItemInstaller.OverwriteItem(Sitecore.Data.Items.Item,Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Data.Database,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Overwrites the item.
            </summary>
            <param name="installedItem">The installed item.</param>
            <param name="item">The Sync item.</param>
            <param name="database">The database.</param>
            <param name="addCommand">The command.</param>
            <param name="context">The context.</param>
            <returns>The overwritten item.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewChangeFileCommandInstaller">
            <summary>
            The installer of change file command in preview mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewChangeFileCommandInstaller.HasPostAction(Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Determines whether current command has to be installed in post action.
            </summary>
            <param name="context">The context.</param>
            <returns>
              <c>true</c> if current command has to be installed in post action; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewChangeFileCommandInstaller.Log(Sitecore.Update.Installer.Items.BaseInstaller.LogLevel,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="level">The log level.</param>
            <param name="text">The log text.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewChangeFileCommandInstaller.BackupFile(System.String,Sitecore.Update.Commands.ChangeFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Backups the file.
            </summary>
            <param name="path">The file path.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewChangeFileCommandInstaller.AddFile(System.String,System.IO.Stream,Sitecore.Update.Installer.CommandInstallerContext,System.Collections.Generic.List{Sitecore.Update.Installer.FileCopyInfo})">
            <summary>
            Adds the file.
            </summary>
            <param name="path">The path.</param>
            <param name="file">The file.</param>
            <param name="context">The context.</param>
            <param name="fileOperationTracker">The file operation tracker.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewChangeItemCommandInstaller">
            <summary>
            Installer of Change item command in preview mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewChangeItemCommandInstaller.GetDictionaryItemInstaller(Sitecore.Update.Commands.ChangeItemCommand,System.String)">
            <summary>
            The get dictionary item installer.
            </summary>
            <param name="command">The command.</param>
            <param name="commandKey">The command key.</param>
            <returns>The item installer.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewChangeItemCommandInstaller.GetGeneralItemInstaller(Sitecore.Update.Commands.ChangeItemCommand,System.String)">
            <summary>
            The get general item installer.
            </summary>
            <param name="command">The command.</param>
            <param name="commandKey">The command key.</param>
            <returns>The item installer.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewChangeItemCommandInstaller.Log(Sitecore.Update.Installer.Items.BaseInstaller.LogLevel,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="level">The log level.</param>
            <param name="text">The log text.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewChangeItemCommandInstaller.PreviewDictionaryItemInstaller">
            <summary>
            The preview dictionary item installer.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewChangeItemCommandInstaller.PreviewDictionaryItemInstaller.#ctor(System.String,Sitecore.Update.Commands.ChangeItemCommand,Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.LogMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.PreviewChangeItemCommandInstaller.PreviewDictionaryItemInstaller"/> class.
            </summary>
            <param name="commandKey">The command key.</param>
            <param name="command">The command.</param>
            <param name="loggerMethod">The logger method.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewChangeItemCommandInstaller.PreviewDictionaryItemInstaller.GetCommandProcessor(Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Gets the command processor.
            </summary>
            <param name="changeCommand">The command.</param>
            <returns>The command processor.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewChangeItemCommandInstaller.PreviewItemInstaller">
            <summary>
            The preview item installer.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewChangeItemCommandInstaller.PreviewItemInstaller.#ctor(System.String,Sitecore.Update.Commands.ChangeItemCommand,Sitecore.Update.Installer.Items.ChangeItemCommandInstaller.LogMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.PreviewChangeItemCommandInstaller.PreviewItemInstaller"/> class.
            </summary>
            <param name="commandKey">The command key.</param>
            <param name="command">The command.</param>
            <param name="loggerMethod">The logger method.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewChangeItemCommandInstaller.PreviewItemInstaller.GetCommandProcessor(Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Gets the command processor.
            </summary>
            <param name="changeCommand">The command.</param>
            <returns>The command processor.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewChangeXmlFileCommandInstaller">
            <summary>
            The installer of change file command in preview mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewChangeXmlFileCommandInstaller.Log(Sitecore.Update.Installer.Items.BaseInstaller.LogLevel,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="level">The log level.</param>
            <param name="text">The log text.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewChangeXmlFileCommandInstaller.BackupFile(System.String,Sitecore.Update.Commands.ChangeFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Backups the file.
            </summary>
            <param name="path">The file path.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewChangeXmlFileCommandInstaller.AddFile(System.String,System.IO.Stream,Sitecore.Update.Installer.CommandInstallerContext,System.Collections.Generic.List{Sitecore.Update.Installer.FileCopyInfo})">
            <summary>
            Adds the file.
            </summary>
            <param name="path">The path.</param>
            <param name="file">The file.</param>
            <param name="context">The context.</param>
            <param name="fileOperationTracker">The file operation tracker.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewDeleteFileCommandInstaller">
            <summary>
            Installer of Delete file command in preview mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewDeleteFileCommandInstaller.HasPostAction(Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Determines whether current command has to be installed in post action.
            </summary>
            <param name="context">The context.</param>
            <returns>
              <c>true</c> if current command has to be installed in post action; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewDeleteFileCommandInstaller.Log(Sitecore.Update.Installer.Items.BaseInstaller.LogLevel,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="level">The log level.</param>
            <param name="text">The log text.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewDeleteFileCommandInstaller.RemoveFile(Sitecore.Update.Commands.DeleteFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Removes the file.
            </summary>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewDeleteFileCommandInstaller.AddFile(System.String,System.IO.Stream,Sitecore.Update.Installer.CommandInstallerContext,System.Collections.Generic.List{Sitecore.Update.Installer.FileCopyInfo})">
            <summary>
            Adds the file.
            </summary>
            <param name="path">The path.</param>
            <param name="file">The file.</param>
            <param name="context">The context.</param>
            <param name="fileOperationTracker">The file operation tracker.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewDeleteFolderCommandInstaller">
            <summary>
            The installer of Delete folder command in Preview mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewDeleteFolderCommandInstaller.Finish">
            <summary>
            Finishes the installation of this instance.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewDeleteFolderCommandInstaller.Log(Sitecore.Update.Installer.Items.BaseInstaller.LogLevel,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="level">The log level.</param>
            <param name="text">The log text.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewDeleteFolderCommandInstaller.RemoveFolder(Sitecore.Update.Commands.DeleteFolderCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Removes the folder.
            </summary>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewDeleteItemCommandInstaller">
            <summary>
            Preview processor for delete item command.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewDeleteItemCommandInstaller.Log(Sitecore.Update.Installer.Items.BaseInstaller.LogLevel,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="level">The log level.</param>
            <param name="text">The log text.</param>
            <param name="context">The installation context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewDeleteItemCommandInstaller.DeleteSingleItem(Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Deletes the single item.
            </summary>
            <param name="item">The item.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewDeleteItemCommandInstaller.RemoveContextReferers(Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Removes the context referers.
            </summary>
            <param name="item">The sitecore item.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewDeleteItemCommandInstaller.GetItemPath(Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the item path.
            </summary>
            <param name="item">The item.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewDeleteXmlFileCommandInstaller">
            <summary>
            The installer of delete xml file command in preview mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewDeleteXmlFileCommandInstaller.AddFile(System.String,System.IO.Stream,Sitecore.Update.Installer.CommandInstallerContext,System.Collections.Generic.List{Sitecore.Update.Installer.FileCopyInfo})">
            <summary>
            Adds the file.
            </summary>
            <param name="path">The path.</param>
            <param name="file">The file.</param>
            <param name="context">The context.</param>
            <param name="fileOperationTracker">The file operation tracker.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewDeleteXmlFileCommandInstaller.HasPostAction(Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Determines whether current command has to be installed in post action.
            </summary>
            <param name="context">The context.</param>
            <returns>
              <c>true</c> if current command has to be installed in post action; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewDeleteXmlFileCommandInstaller.Log(Sitecore.Update.Installer.Items.BaseInstaller.LogLevel,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="level">The log level.</param>
            <param name="text">The log text.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewDeleteXmlFileCommandInstaller.RemoveFile(Sitecore.Update.Commands.DeleteFileCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Removes the file.
            </summary>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.IFieldInstallationHelper">
            <summary>
            Defines helper methods for field processors.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.IFieldInstallationHelper.IsFieldShared(Sitecore.Data.Fields.Field,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Determines whether field is shared.
            </summary>
            <param name="field">The field.</param>
            <param name="context">The context.</param>
            <returns>
              <c>true</c> if field is shared; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.IFieldInstallationHelper.IsFieldUnversioned(Sitecore.Data.Fields.Field,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Determines whether the field is unversioned.
            </summary>
            <param name="field">The field.</param>
            <param name="context">The context.</param>
            <returns>
              <c>true</c> if the field is unversioned; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.FieldInstallationHelper">
            <summary>
            Defines helper methods for field installing.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.FieldInstallationHelper.IsFieldShared(Sitecore.Data.Fields.Field,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Determines whether field is shared.
            </summary>
            <param name="field">The field.</param>
            <param name="context">The context.</param>
            <returns>
            	<c>true</c> if field is shared; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.FieldInstallationHelper.IsFieldUnversioned(Sitecore.Data.Fields.Field,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Determines whether the field is unversioned.
            </summary>
            <param name="field">The field.</param>
            <param name="context">The context.</param>
            <returns>
            	<c>true</c> if the field is unversioned; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewFieldInstallationHelper">
            <summary>
            Defines helper methods for field processors in preview mode.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor">
            <summary>
            The processor of Add field command.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.GenerateRollbackCommands(Sitecore.Data.Items.Item,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Generates the rollback commands.
            </summary>
            <param name="item">The sitecore item to be changed.</param>
            <param name="installCommand">The install command.</param>
            <param name="dataItem">The data item.</param>
            <param name="context">The context.</param>
            <param name="owner">The parent command.</param>
            <returns>
            The rollback command list that to be included into ChangeItemCommand.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.Process(Sitecore.Data.Items.Item,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Installs the comamnd.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <param name="owner">The parent command.</param>
            <returns>The processed Sitecore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.Process(Sitecore.Data.Items.Item,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.Worker,Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Installs the comamnd.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <param name="worker">The worker.</param>
            <param name="owner">The parent command.</param>
            <returns>The processed Sitecore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.GetFieldSupportedValues(Sitecore.Update.Commands.AddFieldCommand,Sitecore.Update.Installer.SharingChangeType,Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Gets the supported values.
            </summary>
            <param name="addCommand">The add command.</param>
            <param name="changeType">Type of the change.</param>
            <param name="owner">The parent command.</param>
            <returns>The supported values.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.GetInstallationWorker">
            <summary>
            Gets the installation worker.
            </summary>
            <returns>The Worker.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.GetRollbackWorker(Sitecore.Update.Data.Items.ContentDataItem)">
            <summary>
            Gets the rollback worker.
            </summary>
            <param name="dataItem">The data item.</param>
            <returns>The Worker.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.GetCommandKey(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.PackageEntry,System.Object[])">
            <summary>
            Gets the command key.
            </summary>
            <param name="command">The command.</param>
            <param name="entry">The entry.</param>
            <param name="parameters">The parameters.</param>
            <returns>The comamnd uniques key.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.RollbackWorker">
            <summary>
            Generates the rollback commands.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.RollbackWorker.rollbackCommands">
            <summary>
            The rollback commands.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.RollbackWorker.dataItem">
            <summary>
            The data item.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.RollbackWorker.#ctor(Sitecore.Update.Installer.Items.ItemFieldAddedProcessor,Sitecore.Update.Data.Items.ContentDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.RollbackWorker"/> class.
            </summary>
            <param name="processor">The processor.</param>
            <param name="dataItem">The data item.</param>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.RollbackWorker.RollbackCommands">
            <summary>
            Gets the rollback commands.
            </summary>
            <value>The rollback commands.</value>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.RollbackWorker.HandleFieldSharingChanged(System.String,Sitecore.Update.Commands.AddFieldCommand,Sitecore.Data.Fields.Field,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Handles the situation when we are going to add the field and sharing of this field has been changed.
            </summary>
            <param name="key">The command key.</param>
            <param name="command">The command.</param>
            <param name="field">The field.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.RollbackWorker.HandleVersionNotFound(System.String,Sitecore.Data.Items.Item,Sitecore.Update.Commands.AddFieldCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message in situation when field is to be changed but the version not found.
            </summary>
            <param name="key">The command key.</param>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.RollbackWorker.HandleAddFieldCollision(Sitecore.Data.Items.Item,Sitecore.Update.Commands.AddFieldCommand,Sitecore.Update.CollisionBehavior,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message in situation when field is to be added but already exists.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="behavior">The behavior.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.RollbackWorker.AddField(Sitecore.Data.Items.Item,Sitecore.Update.Commands.AddFieldCommand)">
            <summary>
            Adds the field.
            </summary>
            <param name="versionedItem">The versioned item.</param>
            <param name="addCommand">The add command.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.RollbackWorker.AddField(Sitecore.Data.Items.Item,System.Boolean,Sitecore.Data.Serialization.ObjectModel.SyncField,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Adds the field.
            </summary>
            <param name="versionedItem">The versioned item.</param>
            <param name="shared">if set to <c>true</c> the field is shared.</param>
            <param name="addedField">The added field.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.Worker">
            <summary>
            The installation actions.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.Worker.processor">
            <summary>
            The command processor.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.Worker.#ctor(Sitecore.Update.Installer.Items.ItemFieldAddedProcessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.Worker"/> class.
            </summary>
            <param name="processor">The processor.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.Worker.HandleFieldSharingChanged(System.String,Sitecore.Update.Commands.AddFieldCommand,Sitecore.Data.Fields.Field,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Handles the situation when we are going to add the field and sharing of this field has been changed.
            </summary>
            <param name="key">The command key.</param>
            <param name="command">The command.</param>
            <param name="field">The field.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.Worker.HandleVersionNotFound(System.String,Sitecore.Data.Items.Item,Sitecore.Update.Commands.AddFieldCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message in situation when field is to be changed but the version not found.
            </summary>
            <param name="key">The command key.</param>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.Worker.HandleAddFieldCollision(Sitecore.Data.Items.Item,Sitecore.Update.Commands.AddFieldCommand,Sitecore.Update.CollisionBehavior,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message in situation when field is to be added but already exists.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="behavior">The behavior.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.Worker.AddField(Sitecore.Data.Items.Item,System.Boolean,Sitecore.Data.Serialization.ObjectModel.SyncField,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Adds the field.
            </summary>
            <param name="versionedItem">The versioned item.</param>
            <param name="shared">if set to <c>true</c> [shared].</param>
            <param name="addedField">The added field.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.Worker.AddField(Sitecore.Data.Items.Item,Sitecore.Data.Serialization.ObjectModel.SyncField)">
            <summary>
            Adds the field.
            </summary>
            <param name="versionedItem">The versioned item.</param>
            <param name="addedField">The added field.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.Worker.AddField(Sitecore.Data.Items.Item,Sitecore.Update.Commands.AddFieldCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Adds the field.
            </summary>
            <param name="versionedItem">The versioned item.</param>
            <param name="addCommand">The add command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.Worker.AddField(Sitecore.Data.Items.Item,Sitecore.Update.Commands.AddFieldCommand)">
            <summary>
            Adds the field.
            </summary>
            <param name="versionedItem">The versioned item.</param>
            <param name="addCommand">The add command.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldAddedProcessor.Worker.GetFieldInstallationHelper">
            <summary>
            Gets the field installation helper.
            </summary>
            <returns>The Helper.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor">
            <summary>
            The processor of change field command.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.GetChangeType(System.String,Sitecore.Data.ID,Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            The get change type.
            </summary>
            <param name="value">
            The value.
            </param>
            <param name="fieldID">
            The field id.
            </param>
            <param name="item">
            The item.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.IsSharedChecked(Sitecore.Data.Items.Item)">
            <summary>
            The is shared checked.
            </summary>
            <param name="item">
            The item.
            </param>
            <returns>
            The is shared checked.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.IsUnversionedChecked(Sitecore.Data.Items.Item)">
            <summary>
            The is unversioned checked.
            </summary>
            <param name="item">
            The item.
            </param>
            <returns>
            The is unversioned checked.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.GenerateRollbackCommands(Sitecore.Data.Items.Item,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Generates the rollback commands.
            </summary>
            <param name="item">
            The sitecore item to be changed.
            </param>
            <param name="installCommand">
            The install command.
            </param>
            <param name="dataItem">
            The data item.
            </param>
            <param name="context">
            The context.
            </param>
            <param name="owner">
            The parent command.
            </param>
            <returns>
            The rollback command list that to be included into ChangeItemCommand.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.Process(Sitecore.Data.Items.Item,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Installs the comamnd.
            </summary>
            <param name="item">
            The Sitecore item.
            </param>
            <param name="command">
            The command.
            </param>
            <param name="context">
            The context.
            </param>
            <param name="owner">
            The parent command.
            </param>
            <returns>
            The processed Sitecore item.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.Process(System.String,Sitecore.Data.Items.Item,Sitecore.Data.Fields.Field,Sitecore.Update.ChangeEntry,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Runs the processor.
            </summary>
            <param name="commandKey">
            The command key.
            </param>
            <param name="versionedItem">
            The versioned item.
            </param>
            <param name="field">
            The field.
            </param>
            <param name="valueEntry">
            The value entry.
            </param>
            <param name="command">
            The command.
            </param>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.GetCommandKey(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.PackageEntry,System.Object[])">
            <summary>
            Gets the command key.
            </summary>
            <param name="command">
            The command.
            </param>
            <param name="entry">
            The package entry.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <returns>
            The unique command key.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.GetInstallationWorker">
            <summary>
            Gets the installation worker.
            </summary>
            <returns>
            The installation worker.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.GetRollbackWorker(Sitecore.Update.Data.Items.ContentDataItem)">
            <summary>
            Gets the rollback worker.
            </summary>
            <param name="dataItem">
            The data item.
            </param>
            <returns>
            The rollback worker.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.IsAllowedUnversionedValue(System.String,Sitecore.Update.ChangeEntry)">
            <summary>
            The is allowed unversioned value.
            </summary>
            <param name="fieldValue">
            The field value.
            </param>
            <param name="valueEntry">
            The value entry.
            </param>
            <returns>
            The is allowed unversioned value.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.Process(Sitecore.Data.Items.Item,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.Worker)">
            <summary>
            Installs the comamnd.
            </summary>
            <param name="item">
            The Sitecore item.
            </param>
            <param name="command">
            The command.
            </param>
            <param name="context">
            The context.
            </param>
            <param name="worker">
            The worker.
            </param>
            <returns>
            The processed Sitecore item.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.Process(System.String,Sitecore.Data.Items.Item,Sitecore.Data.Fields.Field,Sitecore.Update.ChangeEntry,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.Worker)">
            <summary>
            Runs the processor.
            </summary>
            <param name="commandKey">
            The command key.
            </param>
            <param name="versionedItem">
            The versioned item.
            </param>
            <param name="field">
            The field.
            </param>
            <param name="valueEntry">
            The value entry.
            </param>
            <param name="command">
            The command.
            </param>
            <param name="context">
            The context.
            </param>
            <param name="worker">
            The worker.
            </param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.AreFieldValuesEqual(System.String,System.String,Sitecore.Data.Fields.Field)">
            <summary>
            Ares the field values equal.
            </summary>
            <param name="sourceValue">The source value.</param>
            <param name="targetValue">The target value.</param>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.RollbackWorker">
            <summary>
            Records the rollback commands.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.RollbackWorker.dataItem">
            <summary>
            The data item.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.RollbackWorker.rollbackCommands">
            <summary>
            The rollback commands.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.RollbackWorker.#ctor(Sitecore.Update.Installer.Items.ItemFieldChangedProcessor,Sitecore.Update.Data.Items.ContentDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.RollbackWorker"/> class.
            </summary>
            <param name="processor">
            The processor.
            </param>
            <param name="dataItem">
            The data item.
            </param>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.RollbackWorker.RollbackCommands">
            <summary>
            Gets the rollback commands.
            </summary>
            <value>The rollback commands.</value>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.RollbackWorker.HandleFieldNotFound(System.String,Sitecore.Update.Commands.ChangeFieldCommand,Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message in situation when field is to be changed but not found.
            </summary>
            <param name="key">
            The command key.
            </param>
            <param name="command">
            The command.
            </param>
            <param name="item">
            The Sitecore item.
            </param>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.RollbackWorker.HandleFieldSharingChanged(System.String,Sitecore.Update.Commands.ChangeFieldCommand,Sitecore.Data.Fields.Field,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Handles the situation when we are going to update the field and sharing of this field has been changed.
            </summary>
            <param name="key">
            The command key.
            </param>
            <param name="command">
            The command.
            </param>
            <param name="field">
            The field.
            </param>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.RollbackWorker.HandleFieldValueCollision(System.String,Sitecore.Update.CollisionBehavior,Sitecore.Data.Fields.Field,Sitecore.Update.ChangeEntry,Sitecore.Update.ChangeEntry,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message in situation when field is to be changed but has been modified.
            </summary>
            <param name="key">
            The command key.
            </param>
            <param name="behavior">
            The behavior.
            </param>
            <param name="field">
            The field.
            </param>
            <param name="valueChange">
            The value change.
            </param>
            <param name="valueEntry">
            The value entry.
            </param>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.RollbackWorker.HandleVersionNotFound(System.String,Sitecore.Data.Items.Item,Sitecore.Update.Commands.ChangeFieldCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message in situation when field is to be changed but the version not found.
            </summary>
            <param name="key">
            The comand key.
            </param>
            <param name="item">
            The Sitecore item.
            </param>
            <param name="command">
            The command.
            </param>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.RollbackWorker.UpdateField(Sitecore.Data.Fields.Field,Sitecore.Update.ChangeEntry)">
            <summary>
            Updates the field.
            </summary>
            <param name="field">The field.</param>
            <param name="entry">The entry.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.Worker">
            <summary>
            Performs the installation actions.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.Worker.processor">
            <summary>
            The command processor.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.Worker.#ctor(Sitecore.Update.Installer.Items.ItemFieldChangedProcessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.Worker"/> class.
            </summary>
            <param name="processor">
            The processor.
            </param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.Worker.HandleFieldNotFound(System.String,Sitecore.Update.Commands.ChangeFieldCommand,Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message in situation when field is to be changed but not found.
            </summary>
            <param name="key">
            The command key.
            </param>
            <param name="command">
            The command.
            </param>
            <param name="item">
            The Sitecore item.
            </param>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.Worker.HandleFieldSharingChanged(System.String,Sitecore.Update.Commands.ChangeFieldCommand,Sitecore.Data.Fields.Field,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Handles the situation when we are going to update the field and sharing of this field has been changed.
            </summary>
            <param name="key">
            The command key.
            </param>
            <param name="command">
            The command.
            </param>
            <param name="field">
            The field.
            </param>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.Worker.HandleFieldValueCollision(System.String,Sitecore.Update.CollisionBehavior,Sitecore.Data.Fields.Field,Sitecore.Update.ChangeEntry,Sitecore.Update.ChangeEntry,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message in situation when field is to be changed but has been modified.
            </summary>
            <param name="key">
            The command key.
            </param>
            <param name="behavior">
            The behavior.
            </param>
            <param name="field">
            The field.
            </param>
            <param name="valueChange">
            The value change.
            </param>
            <param name="valueEntry">
            The value entry.
            </param>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.Worker.ShouldReportFieldModifiedMessage(System.String,Sitecore.Update.CollisionBehavior,Sitecore.Data.Fields.Field,Sitecore.Update.ChangeEntry,Sitecore.Update.ChangeEntry,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Returns <c>true</c> if message about collision in current field should be reported.
            </summary>
            <param name="key">
            The command key.
            </param>
            <param name="behavior">
            The behavior.
            </param>
            <param name="field">
            The field.
            </param>
            <param name="valueChange">
            The value change.
            </param>
            <param name="valueEntry">
            The value entry.
            </param>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.Worker.HandleVersionNotFound(System.String,Sitecore.Data.Items.Item,Sitecore.Update.Commands.ChangeFieldCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message in situation when field is to be changed but the version not found.
            </summary>
            <param name="key">
            The comand key.
            </param>
            <param name="item">
            The Sitecore item.
            </param>
            <param name="command">
            The command.
            </param>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.Worker.UpdateField(Sitecore.Data.Fields.Field,Sitecore.Update.ChangeEntry,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Updates the field.
            </summary>
            <param name="field">
            The field.
            </param>
            <param name="entry">
            The entry.
            </param>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.Worker.GetFieldInstallationHelper">
            <summary>
            Gets the field installation helper.
            </summary>
            <returns>
            The Helper.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldChangedProcessor.Worker.UpdateField(Sitecore.Data.Fields.Field,Sitecore.Update.ChangeEntry)">
            <summary>
            Updates the field.
            </summary>
            <param name="field">
            The field.
            </param>
            <param name="entry">
            The entry.
            </param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor">
            <summary>
            The processor of Delete field command.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor.GenerateRollbackCommands(Sitecore.Data.Items.Item,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Generates the rollback commands.
            </summary>
            <param name="item">The sitecore item to be changed.</param>
            <param name="installCommand">The install command.</param>
            <param name="dataItem">The data item.</param>
            <param name="context">The context.</param>
            <param name="owner">The parent command.</param>
            <returns>
            The rollback command list that to be included into ChangeItemCommand.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor.Process(Sitecore.Data.Items.Item,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Installs the comamnd.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <param name="owner">The parent command.</param>
            <returns>The processed Sitecore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor.Process(Sitecore.Data.Items.Item,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor.Worker)">
            <summary>
            Installs the comamnd.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <param name="worker">The worker.</param>
            <returns>The processed Sitecore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor.GetInstallationWorker">
            <summary>
            Creates the installation worker.
            </summary>
            <returns>The Installation worker.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor.GetRollbackWorker(Sitecore.Update.Data.Items.ContentDataItem)">
            <summary>
            Gets the rollback worker.
            </summary>
            <param name="dataItem">The data item.</param>
            <returns>The rollback worker.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor.GetCommandKey(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.PackageEntry,System.Object[])">
            <summary>
            Gets the command key.
            </summary>
            <param name="command">The command.</param>
            <param name="entry">The entry.</param>
            <param name="parameters">The parameters.</param>
            <returns>The uniques command key.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor.RollbackWorker">
            <summary>
            Generates the rollback commands.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor.RollbackWorker.rollbackCommands">
            <summary>
            The rollback commands.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor.RollbackWorker.dataItem">
            <summary>
            The content data item.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor.RollbackWorker.#ctor(Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor,Sitecore.Update.Data.Items.ContentDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor.RollbackWorker"/> class.
            </summary>
            <param name="processor">The processor.</param>
            <param name="dataItem">The data item.</param>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor.RollbackWorker.RollbackCommands">
            <summary>
            Gets the rollback commands.
            </summary>
            <value>The rollback commands.</value>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor.RollbackWorker.HandleDeleteFieldCollision(Sitecore.Data.Items.Item,Sitecore.Update.Commands.DeleteFieldCommand,Sitecore.Update.CollisionBehavior,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message for situation when field is to be deleted but has been changed.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="behavior">The behavior.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor.RollbackWorker.DeleteField(Sitecore.Data.Fields.Field,Sitecore.Data.Items.Item)">
            <summary>
            Deletes the field.
            </summary>
            <param name="field">The field.</param>
            <param name="versionedItem">The versioned item.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor.Worker">
            <summary>
            Performs installation actions.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor.Worker.processor">
            <summary>
            The command processor.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor.Worker.#ctor(Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor.Worker"/> class.
            </summary>
            <param name="processor">The processor.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor.Worker.HandleDeleteFieldCollision(Sitecore.Data.Items.Item,Sitecore.Update.Commands.DeleteFieldCommand,Sitecore.Update.CollisionBehavior,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message for situation when field is to be deleted but has been changed.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="behavior">The behavior.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor.Worker.GetItem(System.String,Sitecore.Data.Database)">
            <summary>
            Gets the item.
            </summary>
            <param name="id">The item id.</param>
            <param name="database">The database.</param>
            <returns>The Sietcore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor.Worker.DeleteField(Sitecore.Data.Fields.Field,Sitecore.Data.Items.Item)">
            <summary>
            Deletes the field.
            </summary>
            <param name="field">The field.</param>
            <param name="versionedItem">The versioned item.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor.Worker.GetFieldInstallationHelper">
            <summary>
            Creates a message for situation when field is to be deleted but has been changed.
            Gets the field installation helper.
            </summary>
            <returns>The Helper.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor.Worker.DeleteField(Sitecore.Data.Fields.Field,Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Deletes the field.
            </summary>
            <param name="field">The field.</param>
            <param name="versionedItem">The versioned item.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor">
            <summary>
            The processor of change item properties comamnd.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.GenerateRollbackCommands(Sitecore.Data.Items.Item,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Generates the rollback commands.
            </summary>
            <param name="item">The sitecore item to be changed.</param>
            <param name="installCommand">The install command.</param>
            <param name="dataItem">The data item.</param>
            <param name="context">The context.</param>
            <param name="owner">The parent command.</param>
            <returns>
            The rollback command list that to be included into ChangeItemCommand.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Process(Sitecore.Data.Items.Item,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Installs the comamnd.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <param name="owner">The parent command.</param>
            <returns>The processed Sitecore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Process(Sitecore.Data.Items.Item,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker)">
            <summary>
            Installs the comamnd.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <param name="worker">The worker.</param>
            <returns>The processed Sitecore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.GetInstallationWorker">
            <summary>
            Gets the installation worker.
            </summary>
            <returns>The installation worker.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.GetRollbackWorker">
            <summary>
            Gets the rollback worker.
            </summary>
            <returns>The rollback worker.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.GetCommandKey(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.PackageEntry,System.Object[])">
            <summary>
            Gets the command key.
            </summary>
            <param name="command">The command.</param>
            <param name="entry">The package entry.</param>
            <param name="parameters">The parameters.</param>
            <returns>The unique command key.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.RollbackWorker">
            <summary>
            Rollback commands generator.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.RollbackWorker.rollbackCommands">
            <summary>
            The rollback commands.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.RollbackWorker.#ctor(Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.RollbackWorker"/> class.
            </summary>
            <param name="processor">The processor.</param>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.RollbackWorker.RollbackCommands">
            <summary>
            Gets the rollback commands.
            </summary>
            <value>The rollback commands.</value>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.RollbackWorker.HandleParenNotFoud(Sitecore.Data.Items.Item,Sitecore.Update.ChangeEntry,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message for situation when items is to be moved but target location not found.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="entry">The change entry.</param>
            <param name="key">The comamnd key.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.RollbackWorker.HandleParentChangedCollision(Sitecore.Data.Items.Item,Sitecore.Update.ChangeEntry,System.String,Sitecore.Update.CollisionBehavior,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message for situation when the item is to be moved but has already been moved to a different location.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="changeEntry">The change entry.</param>
            <param name="key">The command key.</param>
            <param name="behavior">The behavior.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.RollbackWorker.HandleParentCreation(Sitecore.Update.Commands.BaseItemCommand,Sitecore.Update.ChangeEntry,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates message for parent not found situation.
            </summary>
            <param name="command">The command.</param>
            <param name="changeEntry">The change entry.</param>
            <param name="key">The message key.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.RollbackWorker.HandleNameChangedCollision(Sitecore.Data.Items.Item,Sitecore.Update.ChangeEntry,System.String,Sitecore.Update.CollisionBehavior,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message for situation when the name for the item is to be changed but has already been changed manually.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="changeEntry">The change entry.</param>
            <param name="key">The command key.</param>
            <param name="behavior">The behavior.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.RollbackWorker.HandleMasterChangedCollision(Sitecore.Data.Items.Item,Sitecore.Update.ChangeEntry,System.String,Sitecore.Update.CollisionBehavior,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message for situation when the master for the item is to be changed but has already been changed manually.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="changeEntry">The change entry.</param>
            <param name="key">The command key.</param>
            <param name="behavior">The behavior.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.RollbackWorker.HandleMasterNotFound(System.String,System.String,System.String,System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message for situation when master for the item is to be changed but master not found.
            </summary>
            <param name="masterID">The master ID.</param>
            <param name="itemID">The item ID.</param>
            <param name="itemPath">The item path.</param>
            <param name="key">The comamnd key.</param>
            <param name="databaseName">Name of the database.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.RollbackWorker.HandleIncorrectMasterID(System.String,System.String,System.String,System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message in situation when master for the item is to be changed but master ID is incorrect.
            </summary>
            <param name="masterID">The master ID.</param>
            <param name="itemID">The item ID.</param>
            <param name="itemPath">The item path.</param>
            <param name="databaseName">Name of the database.</param>
            <param name="key">The comamnd key.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.RollbackWorker.HandleTemplateChangedCollision(Sitecore.Data.Items.Item,Sitecore.Update.ChangeEntry,System.String,Sitecore.Update.CollisionBehavior,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message for situation when the template for the item is to be changed but has already been changed manually.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="changeEntry">The change entry.</param>
            <param name="key">The command key.</param>
            <param name="behavior">The behavior.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.RollbackWorker.HandleTemplateNotFound(System.String,System.String,System.String,System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message in situation when template is to be changed but not found.
            </summary>
            <param name="templateID">The template ID.</param>
            <param name="itemID">The item ID.</param>
            <param name="itemPath">The item path.</param>
            <param name="key">The comamnd key.</param>
            <param name="databaseName">Name of the database.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.RollbackWorker.HandleIncorrectTemplateID(System.String,System.String,System.String,System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message in situation when template for the item is to be changed but template ID is incorrect.
            </summary>
            <param name="templateID">The template ID.</param>
            <param name="itemID">The item ID.</param>
            <param name="itemPath">The item path.</param>
            <param name="databaseName">Name of the database.</param>
            <param name="key">The command key.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.RollbackWorker.MoveItem(Sitecore.Data.Items.Item,Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Moves the item.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="parent">The new parent item.</param>
            <param name="context">The context.</param>
            <returns>
            The moved item.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.RollbackWorker.RenameItem(System.String,Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Renames the item.
            </summary>
            <param name="name">The new name.</param>
            <param name="item">The Sitecore item.</param>
            <param name="context">The context.</param>
            <returns>
            The changed item.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.RollbackWorker.ChangeMaster(System.String,Sitecore.Data.Items.Item)">
            <summary>
            Changes the master.
            </summary>
            <param name="masterID">The master ID.</param>
            <param name="item">The Sitecore item to change the master for.</param>
            <returns>The changed item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.RollbackWorker.ChangeTemplate(System.String,Sitecore.Data.Items.Item)">
            <summary>
            Changes the template.
            </summary>
            <param name="templateID">The template ID.</param>
            <param name="item">The Sitecore item to change template for.</param>
            <returns>The changed item.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker">
            <summary>
            Implements all installation functionality.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker.processor">
            <summary>
            The processor.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker.#ctor(Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker"/> class.
            </summary>
            <param name="processor">The processor.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker.HandleParenNotFoud(Sitecore.Data.Items.Item,Sitecore.Update.ChangeEntry,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message for situation when items is to be moved but target location not found.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="entry">The change entry.</param>
            <param name="key">The comamnd key.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker.HandleParentChangedCollision(Sitecore.Data.Items.Item,Sitecore.Update.ChangeEntry,System.String,Sitecore.Update.CollisionBehavior,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message for situation when the item is to be moved but has already been moved to a different location.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="changeEntry">The change entry.</param>
            <param name="key">The command key.</param>
            <param name="behavior">The behavior.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker.HandleParentCreation(Sitecore.Update.Commands.BaseItemCommand,Sitecore.Update.ChangeEntry,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates message for parent not found situation.
            </summary>
            <param name="command">The command.</param>
            <param name="changeEntry">The change entry.</param>
            <param name="key">The message key.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker.HandleNameChangedCollision(Sitecore.Data.Items.Item,Sitecore.Update.ChangeEntry,System.String,Sitecore.Update.CollisionBehavior,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message for situation when the name for the item is to be changed but has already been changed manually.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="changeEntry">The change entry.</param>
            <param name="key">The command key.</param>
            <param name="behavior">The behavior.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker.HandleMasterChangedCollision(Sitecore.Data.Items.Item,Sitecore.Update.ChangeEntry,System.String,Sitecore.Update.CollisionBehavior,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message for situation when the master for the item is to be changed but has already been changed manually.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="changeEntry">The change entry.</param>
            <param name="key">The command key.</param>
            <param name="behavior">The behavior.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker.HandleMasterNotFound(System.String,System.String,System.String,System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message for situation when master for the item is to be changed but master not found.
            </summary>
            <param name="masterID">The master ID.</param>
            <param name="itemID">The item ID.</param>
            <param name="itemPath">The item path.</param>
            <param name="key">The comamnd key.</param>
            <param name="databaseName">Name of the database.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker.HandleIncorrectMasterID(System.String,System.String,System.String,System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message in situation when master for the item is to be changed but master ID is incorrect.
            </summary>
            <param name="masterID">The master ID.</param>
            <param name="itemID">The item ID.</param>
            <param name="itemPath">The item path.</param>
            <param name="databaseName">Name of the database.</param>
            <param name="key">The comamnd key.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker.HandleTemplateChangedCollision(Sitecore.Data.Items.Item,Sitecore.Update.ChangeEntry,System.String,Sitecore.Update.CollisionBehavior,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message for situation when the template for the item is to be changed but has already been changed manually.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="changeEntry">The change entry.</param>
            <param name="key">The command key.</param>
            <param name="behavior">The behavior.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker.HandleTemplateNotFound(System.String,System.String,System.String,System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message in situation when template is to be changed but not found.
            </summary>
            <param name="templateID">The template ID.</param>
            <param name="itemID">The item ID.</param>
            <param name="itemPath">The item path.</param>
            <param name="key">The comamnd key.</param>
            <param name="databaseName">Name of the database.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker.HandleIncorrectTemplateID(System.String,System.String,System.String,System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message in situation when template for the item is to be changed but template ID is incorrect.
            </summary>
            <param name="templateID">The template ID.</param>
            <param name="itemID">The item ID.</param>
            <param name="itemPath">The item path.</param>
            <param name="databaseName">Name of the database.</param>
            <param name="key">The command key.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker.GetItem(Sitecore.Data.ID,Sitecore.Data.Database,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the item.
            </summary>
            <param name="id">The item id.</param>
            <param name="database">The database.</param>
            <param name="context">The context.</param>
            <returns>The Sitecore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker.CreateParent(Sitecore.Data.Items.Item,Sitecore.Data.Database,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates the parent.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="database">The database.</param>
            <param name="itemPath">The item path.</param>
            <param name="context">The context.</param>
            <returns>The created parent.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker.MoveItem(Sitecore.Data.Items.Item,Sitecore.Data.Items.Item)">
            <summary>
            Moves the item.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="parent">The new parent item.</param>
            <returns>The moved item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker.MoveItem(Sitecore.Data.Items.Item,Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Moves the item.
            </summary>
            <param name="item">The item.</param>
            <param name="parent">The parent.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker.RenameItem(System.String,Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Renames the item.
            </summary>
            <param name="name">The new name.</param>
            <param name="item">The Sitecore item.</param>
            <param name="context">The context.</param>
            <returns>
            The changed item.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker.RenameItem(System.String,Sitecore.Data.Items.Item)">
            <summary>
            Renames the item.
            </summary>
            <param name="name">The new name.</param>
            <param name="item">The Sitecore item.</param>
            <returns>The changed item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker.GetMaster(Sitecore.Data.ID,Sitecore.Data.Database,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the master.
            </summary>
            <param name="id">The master id.</param>
            <param name="database">The database.</param>
            <param name="context">The context.</param>
            <returns>The Master item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker.ChangeMaster(System.String,Sitecore.Data.Items.Item)">
            <summary>
            Changes the master.
            </summary>
            <param name="masterID">The master ID.</param>
            <param name="item">The Sitecore item to change the master for.</param>
            <returns>The changed item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker.GetTemplate(Sitecore.Data.ID,Sitecore.Data.Database,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the template.
            </summary>
            <param name="id">The template id.</param>
            <param name="database">The database.</param>
            <param name="context">The context.</param>
            <returns>The template item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker.ChangeTemplate(System.String,Sitecore.Data.Items.Item)">
            <summary>
            Changes the template.
            </summary>
            <param name="templateID">The template ID.</param>
            <param name="item">The Sitecore item to change template for.</param>
            <returns>The changed item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker.GetItemPath(Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the item path.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="context">The context.</param>
            <returns>The full item path.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor.Worker.RegisterRollbackOperationForCreateParentCommand(System.String,System.String,Sitecore.Data.Items.Item,Sitecore.Data.Database,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Registers the rollback operation for create parent command.
            </summary>
            <param name="path">The item path.</param>
            <param name="nearestParentPath">The nearest parent path.</param>
            <param name="createdParent">The created parent.</param>
            <param name="database">The database.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor">
            <summary>
            The processor of add version command.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.GenerateRollbackCommands(Sitecore.Data.Items.Item,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Generates the rollback commands.
            </summary>
            <param name="item">The sitecore item to be changed.</param>
            <param name="installCommand">The install command.</param>
            <param name="dataItem">The data item.</param>
            <param name="context">The context.</param>
            <param name="owner">The parent command.</param>
            <returns>
            The rollback command list that to be included into ChangeItemCommand.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.InstallVersion(Sitecore.Data.Serialization.ObjectModel.SyncVersion,System.String,System.String,System.String,Sitecore.Data.Items.Item)">
            <summary>
            Installs the version.
            </summary>
            <param name="version">The version.</param>
            <param name="itemID">The item ID.</param>
            <param name="itemName">Name of the item.</param>
            <param name="masterID">The master ID.</param>
            <param name="sitecoreItem">The sitecore item.</param>
            <returns>The installed version.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.MergeVersion(System.String,Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Data.Serialization.ObjectModel.SyncVersion,Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Merges the version.
            </summary>
            <param name="commandKey">The command key.</param>
            <param name="item">The sync item.</param>
            <param name="version">The version.</param>
            <param name="sitecoreItem">The sitecore item.</param>
            <param name="context">The context.</param>
            <returns>The updated item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.Process(Sitecore.Data.Items.Item,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Processes the comamnd.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <param name="owner">The parent command.</param>
            <returns>The processed Sitecore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.Process(Sitecore.Data.Items.Item,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.Worker)">
            <summary>
            Processes the comamnd.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <param name="worker">The worker.</param>
            <returns>The processed Sitecore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.GetInstallationWorker">
            <summary>
            Gets the installation worker.
            </summary>
            <returns>The Installation worker.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.GetRollbackWorker(Sitecore.Update.Data.Items.ContentDataItem)">
            <summary>
            Gets the rollback worker.
            </summary>
            <param name="dataItem">The data item.</param>
            <returns>The Rollback worker.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.GetCommandKey(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.PackageEntry,System.Object[])">
            <summary>
            Gets the command key.
            </summary>
            <param name="command">The command.</param>
            <param name="entry">The package entry.</param>
            <param name="parameters">The parameters.</param>
            <returns>The unique command key.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.GetFieldProcessor">
            <summary>
            Gets the field processor.
            </summary>
            <returns>The processor.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.RollbackWorker">
            <summary>
            Generates the rollbacl commands.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.RollbackWorker.rollbackCommands">
            <summary>
            The rollback command list.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.RollbackWorker.dataItem">
            <summary>
            The content data item.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.RollbackWorker.#ctor(Sitecore.Update.Installer.Items.ItemVersionAddedProcessor,Sitecore.Update.Data.Items.ContentDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.RollbackWorker"/> class.
            </summary>
            <param name="processor">The processor.</param>
            <param name="dataItem">The data item.</param>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.RollbackWorker.RollbackCommands">
            <summary>
            Gets the rollback commands.
            </summary>
            <value>The rollback commands.</value>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.RollbackWorker.HandleCollision(Sitecore.Data.Items.Item,Sitecore.Update.Commands.AddVersionCommand,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.CollisionBehavior@)">
            <summary>
            Creates a message for situation when version is to be added for the item but it has already been added manually.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <param name="behavior">The behavior.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.RollbackWorker.InstallVersion(Sitecore.Data.Serialization.ObjectModel.SyncVersion,System.String,System.String,System.String,Sitecore.Data.Items.Item)">
            <summary>
            Installs the version.
            </summary>
            <param name="version">The version.</param>
            <param name="itemID">The item ID.</param>
            <param name="itemName">Name of the item.</param>
            <param name="masterID">The master ID.</param>
            <param name="sitecoreItem">The sitecore item.</param>
            <returns>The installed version.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.RollbackWorker.ProcessExistingVersion(Sitecore.Data.Items.Item,Sitecore.Update.Commands.AddVersionCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Processes the existing version.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.Worker">
            <summary>
            Processes the installation actions.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.Worker.processor">
            <summary>
            The command installer.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.Worker.#ctor(Sitecore.Update.Installer.Items.ItemVersionAddedProcessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.Worker"/> class.
            </summary>
            <param name="processor">The processor.</param>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.Worker.Processor">
            <summary>
            Gets the processor.
            </summary>
            <value>The processor.</value>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.Worker.HandleCollision(Sitecore.Data.Items.Item,Sitecore.Update.Commands.AddVersionCommand,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.CollisionBehavior@)">
            <summary>
            Creates a message for situation when version is to be added for the item but it has already been added manually.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <param name="behavior">The behavior.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.Worker.InstallVersion(Sitecore.Data.Serialization.ObjectModel.SyncVersion,System.String,System.String,System.String,Sitecore.Data.Items.Item)">
            <summary>
            Installs the version.
            </summary>
            <param name="version">The version.</param>
            <param name="itemID">The item ID.</param>
            <param name="itemName">Name of the item.</param>
            <param name="masterID">The master ID.</param>
            <param name="sitecoreItem">The sitecore item.</param>
            <returns>The installed version.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.Worker.MergeVersion(System.String,Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Data.Serialization.ObjectModel.SyncVersion,Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Merges the version.
            </summary>
            <param name="commandKey">The command key.</param>
            <param name="item">The sync item.</param>
            <param name="version">The version.</param>
            <param name="sitecoreItem">The sitecore item.</param>
            <param name="context">The context.</param>
            <returns>The updated item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.Worker.ProcessExistingVersion(Sitecore.Data.Items.Item,Sitecore.Update.Commands.AddVersionCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Processes the existing version.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionAddedProcessor.Worker.BuildField(Sitecore.Data.Serialization.ObjectModel.SyncField,Sitecore.Data.Items.CoreItem.Builder)">
            <summary>
            Builds the field.
            </summary>
            <param name="field">The field.</param>
            <param name="builder">The builder.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ItemVersionChangedProcessor">
            <summary>
            The processor of Change item version command.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionChangedProcessor.GenerateRollbackCommands(Sitecore.Data.Items.Item,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Generates the rollback commands.
            </summary>
            <param name="item">The sitecore item to be changed.</param>
            <param name="installCommand">The install command.</param>
            <param name="dataItem">The data item.</param>
            <param name="context">The context.</param>
            <param name="owner">The parent command.</param>
            <returns>
            The rollback command list that to be included into ChangeItemCommand.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionChangedProcessor.Process(Sitecore.Data.Items.Item,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Processes the comamnd.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <param name="owner">The parent command.</param>
            <returns>The processed Sitecore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionChangedProcessor.Process(Sitecore.Data.Items.Item,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.Installer.Items.ItemVersionChangedProcessor.Worker)">
            <summary>
            Processes the comamnd.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <param name="worker">The worker.</param>
            <returns>The processed Sitecore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionChangedProcessor.GetInstallationWorker">
            <summary>
            Gets the installation worker.
            </summary>
            <returns>The Installation worker.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionChangedProcessor.GetRollbackWorker(Sitecore.Update.Data.Items.ContentDataItem)">
            <summary>
            Gets the rollback worker.
            </summary>
            <param name="dataItem">The data item.</param>
            <returns>The rollback commands generator.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionChangedProcessor.GetCommandKey(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.PackageEntry,System.Object[])">
            <summary>
            Gets the command key.
            </summary>
            <param name="command">The command.</param>
            <param name="entry">The package entry.</param>
            <param name="parameters">The parameters.</param>
            <returns>The unique command key.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ItemVersionChangedProcessor.RollbackWorker">
            <summary>
            Generated rollback instructions.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.ItemVersionChangedProcessor.RollbackWorker.rollbackCommands">
            <summary>
            The rollback operations.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.ItemVersionChangedProcessor.RollbackWorker.dataItem">
            <summary>
            The data item.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionChangedProcessor.RollbackWorker.#ctor(Sitecore.Update.Installer.Items.ItemVersionChangedProcessor,Sitecore.Update.Data.Items.ContentDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.ItemVersionChangedProcessor.RollbackWorker"/> class.
            </summary>
            <param name="processor">The processor.</param>
            <param name="dataItem">The data item.</param>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.ItemVersionChangedProcessor.RollbackWorker.RollbackCommands">
            <summary>
            Gets the rollback commands.
            </summary>
            <value>The rollback commands.</value>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionChangedProcessor.RollbackWorker.HandleVersionNotFound(Sitecore.Data.Items.Item,Sitecore.Update.Commands.ChangeVersionCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message for situation when item version is to be changed but not found.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionChangedProcessor.RollbackWorker.ProcessChanges(Sitecore.Update.Commands.ChangeVersionCommand,Sitecore.Data.Items.Item,Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Processes the changes.
            </summary>
            <param name="command">The command.</param>
            <param name="version">The item version.</param>
            <param name="originalItem">The original item.</param>
            <param name="context">The context.</param>
            <returns>The updated item.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ItemVersionChangedProcessor.Worker">
            <summary>
            Performs the installation actions.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.ItemVersionChangedProcessor.Worker.processor">
            <summary>
            The command installer.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionChangedProcessor.Worker.#ctor(Sitecore.Update.Installer.Items.ItemVersionChangedProcessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.ItemVersionChangedProcessor.Worker"/> class.
            </summary>
            <param name="processor">The processor.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionChangedProcessor.Worker.HandleVersionNotFound(Sitecore.Data.Items.Item,Sitecore.Update.Commands.ChangeVersionCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message for situation when item version is to be changed but not found.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionChangedProcessor.Worker.ProcessChanges(Sitecore.Update.Commands.ChangeVersionCommand,Sitecore.Data.Items.Item,Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Processes the changes.
            </summary>
            <param name="command">The command.</param>
            <param name="version">The item version.</param>
            <param name="originalItem">The original item.</param>
            <param name="context">The context.</param>
            <returns>The updated item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionChangedProcessor.Worker.GetCommandProcessor(Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Gets the command processor.
            </summary>
            <param name="command">The command.</param>
            <returns>The processor.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor">
            <summary>
            The processor of Delete item version command.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor.GenerateRollbackCommands(Sitecore.Data.Items.Item,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Generates the rollback commands.
            </summary>
            <param name="item">The sitecore item to be changed.</param>
            <param name="installCommand">The install command.</param>
            <param name="dataItem">The data item.</param>
            <param name="context">The context.</param>
            <param name="owner">The parent command.</param>
            <returns>
            The rollback command list that to be included into ChangeItemCommand.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor.Process(Sitecore.Data.Items.Item,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Processes the comamnd.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <param name="owner">The parent command.</param>
            <returns>The processed Sitecore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor.Process(Sitecore.Data.Items.Item,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor.Worker)">
            <summary>
            Processes the comamnd.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <param name="worker">The worker.</param>
            <returns>The processed Sitecore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor.GetInstallationWorker">
            <summary>
            Gets the installation worker.
            </summary>
            <returns>The installation worker.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor.GetRollbackWorker(Sitecore.Update.Data.Items.ContentDataItem)">
            <summary>
            Gets the rollback worker.
            </summary>
            <param name="dataItem">The data item.</param>
            <returns>The rollback worker.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor.GetCommandKey(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.PackageEntry,System.Object[])">
            <summary>
            Gets the command key.
            </summary>
            <param name="command">The command.</param>
            <param name="entry">The entry.</param>
            <param name="parameters">The parameters.</param>
            <returns>The unique command key.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor.RollbackWorker">
            <summary>
            Generates the rollback operations.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor.RollbackWorker.rollbackCommands">
            <summary>
            The rollback commands.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor.RollbackWorker.dataItem">
            <summary>
            The data item.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor.RollbackWorker.#ctor(Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor,Sitecore.Update.Data.Items.ContentDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor.RollbackWorker"/> class.
            </summary>
            <param name="processor">The processor.</param>
            <param name="dataItem">The data item.</param>
        </member>
        <member name="P:Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor.RollbackWorker.RollbackCommands">
            <summary>
            Gets the rollback commands.
            </summary>
            <value>The rollback commands.</value>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor.RollbackWorker.HandleVersionChanged(System.String,Sitecore.Data.Items.Item,Sitecore.Update.Commands.DeleteVersionCommand,Sitecore.Update.CollisionBehavior,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message for the situation when item version is to be deleted but has been modified manually.
            </summary>
            <param name="key">The command key.</param>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="behavior">The behavior.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor.RollbackWorker.DeleteVersion(Sitecore.Data.Items.Item,Sitecore.Data.Items.Item)">
            <summary>
            Deletes the version.
            </summary>
            <param name="version">The version.</param>
            <param name="item">The sitecore item.</param>
            <returns>The changed item.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor.Worker">
            <summary>
            Performs installation actions
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor.Worker.processor">
            <summary>
            The command processor.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor.Worker.#ctor(Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor.Worker"/> class.
            </summary>
            <param name="processor">The processor.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor.Worker.HandleVersionChanged(System.String,Sitecore.Data.Items.Item,Sitecore.Update.Commands.DeleteVersionCommand,Sitecore.Update.CollisionBehavior,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates a message for the situation when item version is to be deleted but has been modified manually.
            </summary>
            <param name="key">The command key.</param>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="behavior">The behavior.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor.Worker.DeleteVersion(Sitecore.Data.Items.Item,Sitecore.Data.Items.Item)">
            <summary>
            Deletes the version.
            </summary>
            <param name="version">The version.</param>
            <param name="item">The sitecore item.</param>
            <returns>The changed item.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewItemFieldAddedProcessor">
            <summary>
            Processor for Add field command in Preview mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemFieldAddedProcessor.Log(Sitecore.Update.Installer.Items.BaseInstaller.LogLevel,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="level">The log level.</param>
            <param name="text">The log text.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemFieldAddedProcessor.GetInstallationWorker">
            <summary>
            Gets the installation worker.
            </summary>
            <returns>The Worker.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewItemFieldAddedProcessor.PreviewWorker">
            <summary>
            Installer in preview mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemFieldAddedProcessor.PreviewWorker.#ctor(Sitecore.Update.Installer.Items.ItemFieldAddedProcessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.PreviewItemFieldAddedProcessor.PreviewWorker"/> class.
            </summary>
            <param name="processor">The processor.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemFieldAddedProcessor.PreviewWorker.AddField(Sitecore.Data.Items.Item,Sitecore.Update.Commands.AddFieldCommand)">
            <summary>
            Adds the field.
            </summary>
            <param name="versionedItem">The versioned item.</param>
            <param name="addCommand">The add command.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemFieldAddedProcessor.PreviewWorker.AddField(Sitecore.Data.Items.Item,Sitecore.Data.Serialization.ObjectModel.SyncField)">
            <summary>
            Adds the field.
            </summary>
            <param name="versionedItem">The versioned item.</param>
            <param name="addedField">The added field.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemFieldAddedProcessor.PreviewWorker.GetFieldInstallationHelper">
            <summary>
            Gets the field installation helper.
            </summary>
            <returns>The Helper.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewItemFieldChangedProcessor">
            <summary>
            Preview processor for change field command.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemFieldChangedProcessor.Log(Sitecore.Update.Installer.Items.BaseInstaller.LogLevel,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="level">The log level.</param>
            <param name="text">The log text.</param>
            <param name="context">The installation context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemFieldChangedProcessor.GetInstallationWorker">
            <summary>
             Gets the installation worker.
            </summary>
            <returns>The installation worker.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewItemFieldChangedProcessor.PreviewWorker">
            <summary>
            Installs the command in preview mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemFieldChangedProcessor.PreviewWorker.#ctor(Sitecore.Update.Installer.Items.ItemFieldChangedProcessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.PreviewItemFieldChangedProcessor.PreviewWorker"/> class.
            </summary>
            <param name="processor">The processor.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemFieldChangedProcessor.PreviewWorker.UpdateField(Sitecore.Data.Fields.Field,Sitecore.Update.ChangeEntry)">
            <summary>
            Updates the field.
            </summary>
            <param name="field">The field to be updated.</param>
            <param name="entry">The change entry that contains changes.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemFieldChangedProcessor.PreviewWorker.GetFieldInstallationHelper">
            <summary>
            Gets the field installation helper.
            </summary>
            <returns>The Helper.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewItemFieldDeletedProcessor">
            <summary>
            Processor for delete item field command in Preview mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemFieldDeletedProcessor.Log(Sitecore.Update.Installer.Items.BaseInstaller.LogLevel,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="level">The log level.</param>
            <param name="text">The log text.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemFieldDeletedProcessor.GetInstallationWorker">
            <summary>
            Logs the specified message.
            </summary>
            <returns>The Installation worker.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewItemFieldDeletedProcessor.PreviewWorker">
            <summary>
            Performs installation actions in Preview mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemFieldDeletedProcessor.PreviewWorker.GetFieldInstallationHelper">
            <summary>
            Creates the installation worker.
            Gets the field installation helper.
            </summary>
            <returns>The Helper.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemFieldDeletedProcessor.PreviewWorker.#ctor(Sitecore.Update.Installer.Items.ItemFieldDeletedProcessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.PreviewItemFieldDeletedProcessor.PreviewWorker"/> class.
            </summary>
            <param name="processor">The processor.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemFieldDeletedProcessor.PreviewWorker.DeleteField(Sitecore.Data.Fields.Field,Sitecore.Data.Items.Item)">
            <summary>
            Deletes the field.
            </summary>
            <param name="field">The field.</param>
            <param name="versionedItem">The versioned item.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewItemPropertyChangedProcessor">
            <summary>
            Processor of Change item property command in Preview mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemPropertyChangedProcessor.Log(Sitecore.Update.Installer.Items.BaseInstaller.LogLevel,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="level">The log level.</param>
            <param name="text">The log text.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemPropertyChangedProcessor.GetInstallationWorker">
            <summary>
            Gets the installation worker.
            </summary>
            <returns>The installation worker.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewItemPropertyChangedProcessor.PreviewWorker">
            <summary>
            Installer in preview mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemPropertyChangedProcessor.PreviewWorker.#ctor(Sitecore.Update.Installer.Items.ItemPropertyChangedProcessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.PreviewItemPropertyChangedProcessor.PreviewWorker"/> class.
            </summary>
            <param name="processor">The processor.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemPropertyChangedProcessor.PreviewWorker.ChangeTemplate(System.String,Sitecore.Data.Items.Item)">
            <summary>
            Changes the template.
            </summary>
            <param name="templateID">The template ID.</param>
            <param name="item">The item to change template for.</param>
            <returns>Item with changed template.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemPropertyChangedProcessor.PreviewWorker.ChangeMaster(System.String,Sitecore.Data.Items.Item)">
            <summary>
            Changes the master.
            </summary>
            <param name="masterID">The master ID.</param>
            <param name="item">The item to change the master for.</param>
            <returns>The item with changed master.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemPropertyChangedProcessor.PreviewWorker.RenameItem(System.String,Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Renames the item.
            </summary>
            <param name="name">The new item name.</param>
            <param name="item">The item to change name for.</param>
            <param name="context">The context.</param>
            <returns>
            The changed item.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemPropertyChangedProcessor.PreviewWorker.MoveItem(Sitecore.Data.Items.Item,Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Moves the item.
            </summary>
            <param name="item">The item to move.</param>
            <param name="parent">The parent to move to.</param>
            <param name="context">The context.</param>
            <returns>
            The changed item.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemPropertyChangedProcessor.PreviewWorker.GetItem(Sitecore.Data.ID,Sitecore.Data.Database,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the item.
            </summary>
            <param name="id">The item id.</param>
            <param name="database">The database.</param>
            <param name="context">The context.</param>
            <returns>The Sitecote item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemPropertyChangedProcessor.PreviewWorker.GetMaster(Sitecore.Data.ID,Sitecore.Data.Database,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the master.
            </summary>
            <param name="id">The master id.</param>
            <param name="database">The database.</param>
            <param name="context">The context.</param>
            <returns>The master item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemPropertyChangedProcessor.PreviewWorker.GetTemplate(Sitecore.Data.ID,Sitecore.Data.Database,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the template.
            </summary>
            <param name="id">The template id.</param>
            <param name="database">The database.</param>
            <param name="context">The context.</param>
            <returns>The template item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemPropertyChangedProcessor.PreviewWorker.CreateParent(Sitecore.Data.Items.Item,Sitecore.Data.Database,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Creates the parent.
            </summary>
            <param name="item">The item to create parentr for.</param>
            <param name="database">The database.</param>
            <param name="itemPath">The item path.</param>
            <param name="context">The context.</param>
            <returns>The created parent item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemPropertyChangedProcessor.PreviewWorker.GetItemPath(Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the item path.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="context">The context.</param>
            <returns>The full item path.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewItemVersionAddedProcessor">
            <summary>
            Processor of Add Item version command in Preview mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemVersionAddedProcessor.Log(Sitecore.Update.Installer.Items.BaseInstaller.LogLevel,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="level">The log level.</param>
            <param name="text">The log text.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemVersionAddedProcessor.GetFieldProcessor">
            <summary>
            Gets the field processor.
            </summary>
            <returns>The exact field processor.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemVersionAddedProcessor.GetInstallationWorker">
            <summary>
            Gets the installation worker.
            </summary>
            <returns>The Installation worker.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewItemVersionAddedProcessor.PreviewWorker">
            <summary>
            Performs installation actions in Preview mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemVersionAddedProcessor.PreviewWorker.#ctor(Sitecore.Update.Installer.Items.ItemVersionAddedProcessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.PreviewItemVersionAddedProcessor.PreviewWorker"/> class.
            </summary>
            <param name="processor">The processor.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemVersionAddedProcessor.PreviewWorker.ProcessExistingVersion(Sitecore.Data.Items.Item,Sitecore.Update.Commands.AddVersionCommand,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Processes the existing version.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemVersionAddedProcessor.PreviewWorker.InstallVersion(Sitecore.Data.Serialization.ObjectModel.SyncVersion,System.String,System.String,System.String,Sitecore.Data.Items.Item)">
            <summary>
            Installs the version.
            </summary>
            <param name="version">The version.</param>
            <param name="itemID">The item ID.</param>
            <param name="itemName">Name of the item.</param>
            <param name="masterID">The master ID.</param>
            <param name="sitecoreItem">The sitecore item.</param>
            <returns>The installed version.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewItemVersionChangedProcessor">
            <summary>
            Processor for Change item version command in Preview mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemVersionChangedProcessor.Log(Sitecore.Update.Installer.Items.BaseInstaller.LogLevel,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="level">The log level.</param>
            <param name="text">The log text.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemVersionChangedProcessor.GetInstallationWorker">
            <summary>
            Gets the installation worker.
            </summary>
            <returns>The Installation worker.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewItemVersionChangedProcessor.PreviewWorker">
            <summary>
            Perfdroms installation actions in Preview mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemVersionChangedProcessor.PreviewWorker.#ctor(Sitecore.Update.Installer.Items.ItemVersionChangedProcessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.PreviewItemVersionChangedProcessor.PreviewWorker"/> class.
            </summary>
            <param name="processor">The processor.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemVersionChangedProcessor.PreviewWorker.GetCommandProcessor(Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Gets the command processor.
            </summary>
            <param name="command">The command.</param>
            <returns>The processor for the command.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewItemVersionDeletedProcessor">
            <summary>
            Preview processor for Delete Item version command.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemVersionDeletedProcessor.Log(Sitecore.Update.Installer.Items.BaseInstaller.LogLevel,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="level">The log level.</param>
            <param name="text">The log text.</param>
            <param name="context">The installation context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemVersionDeletedProcessor.GetInstallationWorker">
            <summary>
            Gets the installation worker.
            </summary>
            <returns>The installation worker.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.PreviewItemVersionDeletedProcessor.PreviewWorker">
            <summary>
            Performs installation actions in Preview mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemVersionDeletedProcessor.PreviewWorker.#ctor(Sitecore.Update.Installer.Items.ItemVersionDeletedProcessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Items.PreviewItemVersionDeletedProcessor.PreviewWorker"/> class.
            </summary>
            <param name="processor">The processor.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.PreviewItemVersionDeletedProcessor.PreviewWorker.DeleteVersion(Sitecore.Data.Items.Item,Sitecore.Data.Items.Item)">
            <summary>
            Deletes the version.
            </summary>
            <param name="version">The item version to be deleted.</param>
            <param name="item">The Sitecore item, version owner.</param>
            <returns>The Sitecore item with deleted version.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Items.SinkItemFactory">
            <summary>
            The Sync item factory.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.SinkItemFactory.installers">
            <summary>
            The comamnd installers.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Items.SinkItemFactory.processors">
            <summary>
            The Comamnd processors.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.SinkItemFactory.#cctor">
            <summary>
            Initializes the <see cref="T:Sitecore.Update.Installer.Items.SinkItemFactory"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.SinkItemFactory.GetInstallerSink(System.String,Sitecore.Update.Installer.Utils.UpgradeAction,Sitecore.Install.Framework.IProcessingContext)">
            <summary>
            Gets the installer sink.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="action">The action.</param>
            <param name="context">The context.</param>
            <returns>The installer sink.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.SinkItemFactory.GetCommandProcessor(System.String,Sitecore.Update.Installer.Utils.UpgradeAction)">
            <summary>
            Gets the command processor.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="action">The action.</param>
            <returns>The command processor.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Items.SinkItemFactory.GetPrefix(System.String,Sitecore.Update.Installer.Utils.UpgradeAction)">
            <summary>
            Gets the prefix.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="action">The action.</param>
            <returns>The command prefix.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.DiffInstaller">
            <summary>
            The installer.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Installer.DiffInstaller.UpdateTaskOutput">
            <summary>
            The Update Task Output.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.DiffInstaller.UpdateTaskOutput.logger">
            <summary>
            The logger.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.UpdateTaskOutput.#ctor(log4net.ILog)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.DiffInstaller.UpdateTaskOutput"/> class.
            </summary>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.UpdateTaskOutput.Execute(System.Threading.ThreadStart)">
            <summary>
            Executes the callback asynchronuosly
            </summary>
            <param name="callback">The callback.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.UpdateTaskOutput.Execute(Sitecore.Jobs.AsyncUI.Callback)">
            <summary>
            Executes the specified callback.
            </summary>
            <param name="callback">The callback.</param>
            <returns>The execute.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.UpdateTaskOutput.RunPipeline(Sitecore.Jobs.AsyncUI.PipelineCallback)">
            <summary>
            Executes the specified pipeline callback.
            </summary>
            <param name="callback">The callback.</param>
            <returns>The execute.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.UpdateTaskOutput.Alert(System.String)">
            <summary>
            Shows an alert form.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.UpdateTaskOutput.Confirm(System.String)">
            <summary>
            Shows the confirmation dialog.
            </summary>
            <param name="message">The message.</param>
            <returns>The confirmation result.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.UpdateTaskOutput.WriteMessage(System.String)">
            <summary>
            Writes the message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="F:Sitecore.Update.Installer.DiffInstaller.action">
            <summary>
            The installation action.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.#cctor">
            <summary>
            Initializes the <see cref="T:Sitecore.Update.Installer.DiffInstaller"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.#ctor(Sitecore.Update.Installer.Utils.UpgradeAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.DiffInstaller"/> class.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.CreateInstallationContext(System.String,Sitecore.Update.Utils.InstallMode,log4net.ILog,System.Collections.Generic.IList{Sitecore.Update.Installer.ContingencyEntry})">
            <summary>
            Creates the installation context.
            </summary>
            <param name="packageName">Name of the package.</param>
            <param name="mode">The installation mode.</param>
            <param name="installationProcessLogger">The installation process logger.</param>
            <param name="entries">The entries.</param>
            <returns>The installation context.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.CreateInstallationContext(System.String,System.String,System.String,Sitecore.Update.Utils.InstallMode,log4net.ILog,System.Collections.Generic.IList{Sitecore.Update.Installer.ContingencyEntry})">
            <summary>
            Creates the installation context.
            </summary>
            <param name="packageName">Name of the package.</param>
            <param name="rollbackPackagePath">The rollback package path.</param>
            <param name="historyRoot">The history root.</param>
            <param name="mode">The installation mode.</param>
            <param name="installationProcessLogger">The installation process logger.</param>
            <param name="entries">The entries.</param>
            <returns>The Installation context.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.CreateInstallationContext(log4net.ILog)">
            <summary>
            Creates the installation context.
            </summary>
            <param name="logger">The logger.</param>
            <returns>The context.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.ExecutePostInstallationInstructions(System.String,System.String,Sitecore.Update.Utils.InstallMode,Sitecore.Update.Metadata.MetadataView,log4net.ILog,System.Collections.Generic.List{Sitecore.Update.Installer.ContingencyEntry}@)">
            <summary>
            Executes the post installation instructions.
            </summary>
            <param name="packagePath">The package path.</param>
            <param name="historyPath">The history folder path.</param>
            <param name="mode">The installation mode.</param>
            <param name="view">The package metadata.</param>
            <param name="installationProcessLogger">The installation process logger.</param>
            <param name="entries">The entries.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.InstallPackage(System.String)">
            <summary>
            Installs the package.
            </summary>
            <param name="packagePath">The package path.</param>
            <returns>
            The list of potential problems that ocured during the package installation.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.InstallPackage(System.String,System.String)">
            <summary>
            Installs the package.
            </summary>
            <param name="packagePath">The package path.</param>
            <param name="rollbackPackagePath">The rollback package path.</param>
            <returns>
            The list of potential problems that ocured during the package installation.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.InstallPackage(System.String,System.String,System.String)">
            <summary>
            Installs the package.
            </summary>
            <param name="packagePath">The package path.</param>
            <param name="rollbackPackagePath">The rollback package path.</param>
            <param name="logFolderPath">The path to the installation logs folder.</param>
            <returns>
            The list of potential problems that ocured during the package installation.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.InstallPackage(System.String,System.String,System.String,log4net.ILog)">
            <summary>
            Installs the package.
            </summary>
            <param name="packagePath">The package path.</param>
            <param name="rollbackPackagePath">The rollback package path.</param>
            <param name="logFolderPath">The path to the installation logs folder.</param>
            <param name="installationProcessLogger">The installation process logger.</param>
            <returns>
            The list of potential problems that ocured during the package installation.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.InstallPackage(System.String,Sitecore.Update.Utils.InstallMode)">
            <summary>
            Installs the package.
            </summary>
            <param name="path">The package path.</param>
            <param name="mode">The installation mode.</param>
            <returns>The list of installation problems.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.InstallPackage(System.String,Sitecore.Update.Utils.InstallMode,log4net.ILog)">
            <summary>
            Installs the package.
            </summary>
            <param name="path">The package path.</param>
            <param name="mode">The installation mode.</param>
            <param name="installationProcessLogger">The installation process logger.</param>
            <returns>The list of installation problems.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.InstallPackage(System.String,Sitecore.Update.Utils.InstallMode,log4net.ILog,System.Boolean@,System.String@)">
            <summary>
            Installs the package.
            </summary>
            <param name="path">The package path.</param>
            <param name="mode">The installation mode.</param>
            <param name="installationProcessLogger">The installation process logger.</param>
            <param name="hasPostAction">if set to <c>true</c> than package has post installation action (file installation).</param>
            <param name="historyPath">The history path.</param>
            <returns>The list of installation problems.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.InstallPackage(System.String,Sitecore.Update.Utils.InstallMode,log4net.ILog,System.Collections.Generic.IList{Sitecore.Update.Installer.ContingencyEntry},System.Boolean@,System.String@)">
            <summary>
            Installs the package.
            </summary>
            <param name="path">The package path.</param>
            <param name="mode">The installation mode.</param>
            <param name="installationProcessLogger">The installation process logger.</param>
            <param name="entries">The entries.</param>
            <param name="hasPostAction"><c>true</c> when package contains files.</param>
            <param name="historyPath">The history path.</param>
            <returns>List of installation messages.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.InstallPackage(System.String,Sitecore.Update.Utils.InstallMode,log4net.ILog,System.Collections.Generic.IList{Sitecore.Update.Installer.ContingencyEntry},System.String,System.Boolean@,System.String@)">
            <summary>
            Installs the package.
            </summary>
            <param name="path">The package path.</param>
            <param name="mode">The installation mode.</param>
            <param name="installationProcessLogger">The installation process logger.</param>
            <param name="entries">The entries.</param>
            <param name="rollbackPackagePath">The rollback package path.</param>
            <param name="hasPostAction"><c>true</c> when package contains files.</param>
            <param name="historyPath">The history path.</param>
            <returns>List of installation messages.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.InstallPackage(System.String,Sitecore.Update.Utils.InstallMode,Sitecore.Update.Utils.ProcessingMode,log4net.ILog,System.Collections.Generic.IList{Sitecore.Update.Installer.ContingencyEntry},System.String,System.Boolean@,System.String@)">
            <summary>
            Installs the package.
            </summary>
            <param name="path">The package path.</param>
            <param name="mode">The installation mode.</param>
            <param name="processingMode">The processing mode.</param>
            <param name="installationProcessLogger">The installation process logger.</param>
            <param name="entries">The entries.</param>
            <param name="rollbackPackagePath">The rollback package path.</param>
            <param name="hasPostAction"><c>true</c> when package contains files.</param>
            <param name="historyPath">The history path.</param>
            <returns>List of installation messages.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.DoCreateInstallerSink(Sitecore.Install.Framework.IProcessingContext)">
            <summary>
            Creates installer sink.
            </summary>
            <param name="context">The context.</param>
            <returns>
            The <see cref="!:ISink&lt;Sitecore.Install.Framework.PackageEntry&gt;"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.DoCreateInstallerSink(Sitecore.Install.Framework.IProcessingContext,Sitecore.Update.Utils.ProcessingMode)">
            <summary>
            Creates installer sink.
            </summary>
            <param name="context">The context.</param>
            <param name="processingMode">The processing mode.</param>
            <returns>
            The <see cref="!:ISink&lt;Sitecore.Install.Framework.PackageEntry&gt;"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.GetInstallerSink(System.String,Sitecore.Update.Installer.Utils.UpgradeAction,Sitecore.Install.Framework.IProcessingContext)">
            <summary>
            Gets the installer sink.
            </summary>
            <param name="commandPrefix">The command prefix.</param>
            <param name="upgradeAction">The upgrade action.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.NeedToProcessInstallerSink(Sitecore.Install.Framework.ISink{Sitecore.Install.Framework.PackageEntry},Sitecore.Update.Utils.ProcessingMode)">
            <summary>
            Checks if need to process installer sink.
            </summary>
            <param name="sink">The installer sink</param>
            <param name="processingMode">The processing mode</param>
            <returns><c>true</c> if we need to process installer sink; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><c>processingMode</c> is out of range.</exception>
        </member>
        <member name="M:Sitecore.Update.Installer.DiffInstaller.GetContextWithMetadata(System.String)">
            <summary>
            Gets the context with metadata.
            </summary>
            <param name="packagePath">The package path.</param>
            <returns>The context.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Exceptions.BrokenPackageException">
            <summary>
            The broken package exception.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Exceptions.BrokenPackageException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Exceptions.BrokenPackageException"/> class.
            </summary>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="T:Sitecore.Update.Installer.Exceptions.CriticalInstallationException">
            <summary>
            The critical installation exception.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Exceptions.CriticalInstallationException.#ctor(System.String,System.Exception,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Exceptions.CriticalInstallationException"/> class.
            </summary>
            <param name="message">
            The message.
            </param>
            <param name="innerException">
            The inner Exception.
            </param>
            <param name="historyPath">
            The history path.
            </param>
        </member>
        <member name="P:Sitecore.Update.Installer.Exceptions.CriticalInstallationException.HistoryPath">
            <summary>
            Gets the history path.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Installer.Exceptions.PostStepInstallerException">
            <summary>
            Post Step installation exception
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Exceptions.PostStepInstallerException.processBatchPath">
            <summary>
            The path to the batch file with installation commands
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Exceptions.PostStepInstallerException.entries">
            <summary>
            The list of contingencies.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Exceptions.PostStepInstallerException.historyPath">
            <summary>
            The path to the history folder.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Exceptions.PostStepInstallerException.exceptions">
            <summary>
            The list of installation exceptions.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Exceptions.PostStepInstallerException.#ctor(System.Exception,System.String,System.Collections.Generic.List{Sitecore.Update.Installer.ContingencyEntry},System.String,System.Collections.Generic.List{System.Exception})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Exceptions.PostStepInstallerException"/> class.
            </summary>
            <param name="ex">The exception.</param>
            <param name="batchPath">The batch path.</param>
            <param name="entries">The entries.</param>
            <param name="historyPath">The history path.</param>
            <param name="exceptions">The exceptions.</param>
        </member>
        <member name="P:Sitecore.Update.Installer.Exceptions.PostStepInstallerException.Exceptions">
            <summary>
            Gets the exceptions.
            </summary>
            <value>The exceptions.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.Exceptions.PostStepInstallerException.HistoryPath">
            <summary>
            Gets the history path.
            </summary>
            <value>The history path.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.Exceptions.PostStepInstallerException.Entries">
            <summary>
            Gets the entries.
            </summary>
            <value>The entries.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.Exceptions.PostStepInstallerException.ProcessBatchPath">
            <summary>
            Gets the batch path.
            </summary>
            <value>The batch path.</value>
        </member>
        <member name="T:Sitecore.Update.Installer.Constants">
            <summary>
            The Installer logic Constants. 
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Constants.PatchConfigFileExtension">
            <summary>
            The configuration file extension that contains extracted customization of the configuration file.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Constants.EnabledPatchConfigFileExtension">
            <summary>
            The configuration file extension that contains extracted customization of the configuration file which is enabled.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Constants.MergedConfigFileExtension">
            <summary>
            The configuration file extension that contains merged customization to the original configuration file.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Constants.CleanConfigFileExtension">
            <summary>
            The clean configuration file extension that has been extracted from the package.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Constants.CustomizedConfigFileExtension">
            <summary>
            The configuration file extension that contains backup of the customized configuration file.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Constants.DeletedConfigFileExtension">
            <summary>
            The configuration file extension that contains configuration file to be deleted but has some modifications.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Constants.ExampleConfigFileExtension">
            <summary>
            The example configuration file extension.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Constants.DisabledConfigFileExtension">
            <summary>
            The disabled configuration file extension.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Constants.ConfigFileExtension">
            <summary>
            The configuration file extension
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Constants.DisabledExtension">
            <summary>
            The extension ".disabled".
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Constants.ExampleExtension">
            <summary>
            The extension ".example".
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Constants.DefaultIndexConfigurationExtension">
            <summary>
            The extension for active default index configuration file ".DefaultIndexConfiguration.config".
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Constants.ThumbsFileName">
            <summary>
            The thumbs file name.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Constants.OriginalFileExtension">
            <summary>
            The extension ".orig".
            </summary>
        </member>
        <member name="T:Sitecore.Update.Installer.SharingChangeType">
            <summary>
            Change charing type
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.SharingChangeType.VersionedToShared">
            <summary>
            Change from versioned to shared.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.SharingChangeType.UnversionedToShared">
            <summary>
            Change from Unversioned to Shared.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.SharingChangeType.VersionedToUnversioned">
            <summary>
            Change from Versioned to Unversioned.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.SharingChangeType.SharedToVersioned">
            <summary>
            Change from Shared to Versioned.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.SharingChangeType.SharedToUnversioned">
            <summary>
            Change from Shared to Unversioned.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.SharingChangeType.UnversionedToVersioned">
            <summary>
            Change from Unversioned to Versioned.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.SharingChangeType.Undefined">
            <summary>
            Undefined - changes were no performed.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Installer.ContingencyLevel">
            <summary>
            The contingency level type.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.ContingencyLevel.Error">
            <summary>
            The error type.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.ContingencyLevel.Collision">
            <summary>
            The collision type.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.ContingencyLevel.Warning">
            <summary>
            The warning type.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.ContingencyLevel.Info">
            <summary>
            The information type.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Installer.ContingencyEntryComparer">
            <summary>
            The contingency entry comparer.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.ContingencyEntryComparer.fieldName">
            <summary>
            The field name.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.ContingencyEntryComparer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.ContingencyEntryComparer"/> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.ContingencyEntryComparer.Compare(Sitecore.Update.Installer.ContingencyEntry,Sitecore.Update.Installer.ContingencyEntry)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value
            Condition
            Less than zero
            <paramref name="x"/> is less than <paramref name="y"/>.
            Zero
            <paramref name="x"/> equals <paramref name="y"/>.
            Greater than zero
            <paramref name="x"/> is greater than <paramref name="y"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Update.Installer.ContingencyEntry">
            <summary>
            The contingency entry.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.ContingencyEntry.databaseName">
            <summary>
            The database name.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.ContingencyEntry.message">
            <summary>
            The message.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.ContingencyEntry.level">
            <summary>
            The contingency level.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.ContingencyEntry.#ctor(Sitecore.Update.Installer.ContingencyLevel,System.String,Sitecore.Update.Installer.Messages.Message)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.ContingencyEntry"/> class.
            </summary>
            <param name="level">The level.</param>
            <param name="databaseName">Name of the database.</param>
            <param name="message">The message.</param>
        </member>
        <member name="P:Sitecore.Update.Installer.ContingencyEntry.Action">
            <summary>
            Gets the contingency action.
            </summary>
            <value>The contingency action.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.ContingencyEntry.Behavior">
            <summary>
            Gets or sets the behavior.
            </summary>
            <value>The behavior.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.ContingencyEntry.CommandKey">
            <summary>
            Gets the command key.
            </summary>
            <value>The command key.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.ContingencyEntry.Database">
            <summary>
            Gets the database.
            </summary>
            <value>The database.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.ContingencyEntry.Level">
            <summary>
            Gets the level.
            </summary>
            <value>The level.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.ContingencyEntry.LongDescription">
            <summary>
            Gets the long description.
            </summary>
            <value>The long description.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.ContingencyEntry.MessageGroup">
            <summary>
            Gets the message group.
            </summary>
            <value>The message group.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.ContingencyEntry.MessageGroupDescription">
            <summary>
            Gets the message group description.
            </summary>
            <value>The message group description.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.ContingencyEntry.MessageID">
            <summary>
            Gets the message ID.
            </summary>
            <value>The message ID.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.ContingencyEntry.MessageType">
            <summary>
            Gets the message type ID.
            </summary>
            <value>The message type ID.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.ContingencyEntry.Number">
            <summary>
            Gets or sets the number of the message.
            </summary>
            <value>The number.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.ContingencyEntry.ShortDescription">
            <summary>
            Gets the short description.
            </summary>
            <value>The short description.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.ContingencyEntry.CustomData">
            <summary>
            Gets the message custom data.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Installer.ContingencyEntry.Message">
            <summary>
            Gets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="M:Sitecore.Update.Installer.ContingencyEntry.DecreaseContingencyLevel">
            <summary>
            Decreases the contingency level.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Installer.InstallationLogger">
            <summary>
            The installation logger.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.InstallationLogger.logger">
            <summary>
            The logger.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.InstallationLogger.path">
            <summary>
            The history folder path.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.InstallationLogger.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.InstallationLogger"/> class.
            </summary>
            <param name="historyPath">The history path.</param>
        </member>
        <member name="P:Sitecore.Update.Installer.InstallationLogger.Logger">
            <summary>
            Gets the logger.
            </summary>
            <value>The logger.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.InstallationLogger.IsDebugEnabled">
            <summary>
            Gets a value indicating whether this instance is debug enabled.
            </summary>
            <value>
             <c>true</c> if this instance is debug enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Update.Installer.InstallationLogger.IsErrorEnabled">
            <summary>
            Gets a value indicating whether this instance is error enabled.
            </summary>
            <value>
             <c>true</c> if this instance is error enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Update.Installer.InstallationLogger.IsFatalEnabled">
            <summary>
            Gets a value indicating whether this instance is fatal enabled.
            </summary>
            <value>
             <c>true</c> if this instance is fatal enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Update.Installer.InstallationLogger.IsInfoEnabled">
            <summary>
            Gets a value indicating whether this instance is info enabled.
            </summary>
            <value>
             <c>true</c> if this instance is info enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Update.Installer.InstallationLogger.IsWarnEnabled">
            <summary>
            Gets a value indicating whether this instance is warn enabled.
            </summary>
            <value>
             <c>true</c> if this instance is warn enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.Update.Installer.InstallationLogger.GetInstallationLogPath(System.String)">
            <summary>
            Gets the installation log path.
            </summary>
            <param name="historyPath">The history path.</param>
            <returns>The path to the log file.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.InstallationLogger.Debug(System.Object,System.Exception)">
            <summary>
            Debugs the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="t">The exception.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.InstallationLogger.Debug(System.Object)">
            <summary>
            Debugs the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.InstallationLogger.Error(System.Object,System.Exception)">
            <summary>
            Errors the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="t">The exception.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.InstallationLogger.Fatal(System.Object,System.Exception)">
            <summary>
            Fatals the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="t">The exception.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.InstallationLogger.Fatal(System.Object)">
            <summary>
            Fatals the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.InstallationLogger.Info(System.Object,System.Exception)">
            <summary>
            Infoes the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="t">The exception.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.InstallationLogger.Info(System.Object)">
            <summary>
            Infoes the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.InstallationLogger.Warn(System.Object,System.Exception)">
            <summary>
            Warns the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="t">The exception.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.InstallationLogger.Warn(System.Object)">
            <summary>
            Warns the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.InstallationLogger.WriteMessage(System.Object,System.Exception,log4net.spi.Level)">
            <summary>
            Writes the log message.
            </summary>
            <param name="message">The log message.</param>
            <param name="ex">The exeption.</param>
            <param name="level">The log level.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.InstallationLogger.log4net#ILog#Error(System.Object)">
            <summary>
            Errors the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.CommandInstallerContext">
            <summary>
            The command installation context.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.CommandInstallerContextKey">
            <summary>
            The context command key.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.action">
            <summary>
            The upgrade action
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.addedFiles">
            <summary>
            The list of added fields.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.addedFolders">
            <summary>
            The list of added folders.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.addedItems">
            <summary>
            The list of added items.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.xPathMapping">
            <summary>
            The mapping of XPath node paths.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.appPath">
            <summary>
            The application path.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.dataFolderPath">
            <summary>
            The data folder path.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.deletedFiles">
            <summary>
            The list of deleted files.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.deletedFilesFolder">
            <summary>
            The name of the folder for soring deleted files.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.deletedFolders">
            <summary>
            The list of deleted folders.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.deletedItems">
            <summary>
            The list of deleted items.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.postponnedItemDeletions">
            <summary>
            The postponned deletions od items.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.entries">
            <summary>
            The list of contingency entries.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.baseTemplateChangedList">
            <summary>
            The list of template IDs where base templates field was changed.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.movedItemPathsMap">
            <summary>
            The paths mapping in format [old location, new location] for the moved items.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.installationInfoLogger">
            <summary>
            The installation process logger.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.mode">
            <summary>
            The installation mode.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.modifiedFilesFolder">
            <summary>
            The name of the folder that contains modified files.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.patchedFilesFolder">
            <summary>
            The name of the patched files folder.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.sourceFilesFolder">
            <summary>
            The name of the backup source files folder.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.packageName">
            <summary>
            The package name.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.postAddFiles">
            <summary>
            The list of files to be installed.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.postAddFolders">
            <summary>
            The list of folders to be created.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.postChangeFiles">
            <summary>
            The list of files to be changed.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.postDeleteFiles">
            <summary>
            The list of files to be deleted.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.postDeleteFolders">
            <summary>
            The list of folders to be deleted.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext._processingEntityId">
            <summary>
            This filed used in case when we try to replace __StandardValues
            that already exist in Sitecore through additem command.
            Adding __SV in update package in case of __SV already exist will trun on 
            logic that will compare ids of __SV in Sitecore and in package.
            If ids the same, then __SV fields value can be erased,
            otherwise field values won't be erased
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.transactionFolder">
            <summary>
            The name of transaction folder.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.upgradeHistoryRoot">
            <summary>
            The path to the history folder.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.installationProcessLogger">
            <summary>
            The installation logger.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.rollbackPackagePath">
            <summary>
            The path to rollbackPackage.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.rollBackWriter">
            <summary>
            The rollback package writer.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.rollbackEnabled">
            <summary>
            Flag that indicates whether rollback enabled or not.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.CommandInstallerContext.tracker">
            <summary>
            The tracker.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.#ctor(System.String,Sitecore.Update.Installer.Utils.UpgradeAction,Sitecore.Update.Utils.InstallMode,System.Collections.Generic.IEnumerable{Sitecore.Update.Installer.ContingencyEntry})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.CommandInstallerContext"/> class.
            </summary>
            <param name="packageName">Name of the package.</param>
            <param name="action">The action.</param>
            <param name="mode">The installation mode.</param>
            <param name="entries">The entries.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.#ctor(System.String,System.String,Sitecore.Update.Installer.Utils.UpgradeAction,Sitecore.Update.Utils.InstallMode,System.Collections.Generic.IEnumerable{Sitecore.Update.Installer.ContingencyEntry})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.CommandInstallerContext"/> class.
            </summary>
            <param name="packageName">Name of the package.</param>
            <param name="installationHistoryRoot">The installation history root.</param>
            <param name="action">The action.</param>
            <param name="mode">The installation mode.</param>
            <param name="entries">The entries.</param>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.XPathMap">
            <summary>
            Gets the XPath map.
            </summary>
            <value>The XPath map.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.ItemsNotToDelete">
            <summary>
            Gets the item IDs that should not be removed for some reason, e.g. we have a commant to modify the item
            </summary>
            <value>
            The item IDs should be skipped for delete operation.
            </value>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.IsRollbackSupported">
            <summary>
            Gets a value indicating whether the rollback operation is supported.
            </summary>
            <value>
              <c>true</c> if this the rollback operation is supported; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.AppPath">
            <summary>
            Gets the application path.
            </summary>
            <value>The application path.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.DataFolderPath">
            <summary>
            Gets the data folder path.
            </summary>
            <value>The data folder path.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.DeletedRoot">
            <summary>
            Gets the deleted root.
            </summary>
            <value>The deleted root.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.HistoryRoot">
            <summary>
            Gets the history root.
            </summary>
            <value>The history root.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.InstallationInfoLogger">
            <summary>
            Gets the installation info logger.
            </summary>
            <value>The installation info logger.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.InstallationProcessLogger">
            <summary>
            Gets the installation process logger.
            </summary>
            <value>The installation process logger.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.ItemsToBeDeleted">
            <summary>
            Gets the items to be deleted.
            </summary>
            <value>The items to be deleted.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.ItemsPostponnedToBeDeleted">
            <summary>
            Gets the items postponned to be deleted.
            </summary>
            <value>
            The items postponned to be deleted.
            </value>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.ModifiedRoot">
            <summary>
            Gets the modified root.
            </summary>
            <value>The modified root.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.PatchedFilesRoot">
            <summary>
            Gets the patched files root.
            Note: thisi is an experiment.
            </summary>
            <value>The patched files root.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.SourceFilesRoot">
            <summary>
            Gets the backup source files root.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.PackageName">
            <summary>
            Gets the name of the package.
            </summary>
            <value>The name of the package.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.TransactionRoot">
            <summary>
            Gets the transaction root.
            </summary>
            <value>The transaction root.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.UpgradeAction">
            <summary>
            Gets the upgrade action.
            </summary>
            <value>The upgrade action.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.ProcessingEntityID">
            <summary>
            Gets processing entity id.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.AddedFiles">
            <summary>
            Gets the added files.
            </summary>
            <value>The added files.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.AddedFolders">
            <summary>
            Gets the added folders.
            </summary>
            <value>The added folders.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.ChangedFiles">
            <summary>
            Gets the changed files.
            </summary>
            <value>The changed files.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.DeletedFiles">
            <summary>
            Gets the deleted files.
            </summary>
            <value>The deleted files.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.DeletedFolders">
            <summary>
            Gets the deleted folders.
            </summary>
            <value>The deleted folders.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.MergedDictionaryItems">
            <summary>
            Gets the added dictionary items.
            </summary>
            <value>
            The added dictionary items.
            </value>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.GetRootPath(System.String)">
            <summary>
            Returns DataFolderPath is path is under data folder. Otherwise, returns AppPath.
            </summary>
            <param name="path">Path to file or folder.</param>
            <returns></returns>
        </member>
        <member name="P:Sitecore.Update.Installer.CommandInstallerContext.HasPostAction">
            <summary>
            Gets a value indicating whether this instance has post action.
            </summary>
            <value>
              <c>true</c> if this instance has post action; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.GetContext(Sitecore.Install.Framework.IProcessingContext)">
            <summary>
            Gets the context.
            </summary>
            <param name="context">The context.</param>
            <returns>The command context.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.SetContext(Sitecore.Install.Framework.IProcessingContext,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Sets the context.
            </summary>
            <param name="context">The context.</param>
            <param name="installerContext">The installer context.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.Setup(Sitecore.Install.Framework.IProcessingContext,System.String,Sitecore.Update.Installer.Utils.UpgradeAction,Sitecore.Update.Utils.InstallMode,log4net.ILog,System.Collections.Generic.IList{Sitecore.Update.Installer.ContingencyEntry})">
            <summary>
            Setups the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="packageName">Name of the package.</param>
            <param name="action">The action.</param>
            <param name="mode">The installation mode.</param>
            <param name="logger">The logger.</param>
            <param name="entries">The entries.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.Setup(Sitecore.Install.Framework.IProcessingContext,System.String,System.String,System.String,Sitecore.Update.Installer.Utils.UpgradeAction,Sitecore.Update.Utils.InstallMode,log4net.ILog,System.Collections.Generic.IList{Sitecore.Update.Installer.ContingencyEntry})">
            <summary>
            Setups the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="packageName">Name of the package.</param>
            <param name="rollbackPackagePath">The rollback package path.</param>
            <param name="historyRoot">The history root.</param>
            <param name="action">The action.</param>
            <param name="mode">The installation mode.</param>
            <param name="logger">The logger.</param>
            <param name="entries">The entries.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.RecordRollbackCommands(System.Boolean)">
            <summary>
            Sets the rollback enabler flag.
            </summary>
            <param name="flag">if set to <c>true</c> rollback commands will be recorded (if sollback is configured).</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.CommandWriter(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.BaseSink{Sitecore.Install.Framework.PackageEntry})">
            <summary>
            Writes the command.
            </summary>
            <param name="command">The command.</param>
            <param name="writer">The command writer.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.RegisterRollbackCommand(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.BaseSink{Sitecore.Install.Framework.PackageEntry},Sitecore.Update.Installer.CommandInstallerContext.BackupCommand)">
            <summary>
            Registers the rollback command.
            </summary>
            <param name="command">The rollback command.</param>
            <param name="writer">The command writer.</param>
            <param name="backupHandler">The backup handler.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.SetRollbackPackagePath(System.String)">
            <summary>
            Sets the rollback package path.
            </summary>
            <param name="path">The path to the rollbacl package.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.RegisterRollbackCommand(Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Registers the rollback command.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.RegisterRollbackCommands(System.Collections.Generic.IEnumerable{Sitecore.Update.Interfaces.ICommand})">
            <summary>
            Registers the rollback command.
            </summary>
            <param name="commands">The commands.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.RegisterRollbackCommand(Sitecore.Update.Interfaces.ICommand,Sitecore.Install.Framework.BaseSink{Sitecore.Install.Framework.PackageEntry})">
            <summary>
            Registers the rollback command.
            </summary>
            <param name="command">The command.</param>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.AddContingencyEntry(Sitecore.Update.Installer.ContingencyEntry)">
            <summary>
            Adds the contingency entry.
            </summary>
            <param name="entry">The entry.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.RegisterBaseTemplateChanges(Sitecore.Data.ID)">
            <summary>
            Registers the templateId that has a change in Base Templates field.
            </summary>
            <param name="templateId">The template identifier.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.HasChangesInBaseTemplateField(Sitecore.Data.ID)">
            <summary>
            Determines whether the template with the specified ID has changed in Base Templates field.
            </summary>
            <param name="templateId">The template identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.GetBehavior(System.String)">
            <summary>
            Gets the behavior.
            </summary>
            <param name="commandKey">The command key.</param>
            <returns>The behavior</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.GetBehavior">
            <summary>
            Gets the behavior.
            </summary>
            <returns>The behavior.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.GetBehavior(System.String,Sitecore.Update.Interfaces.ICommand,System.String,Sitecore.Install.Framework.PackageEntry)">
            <summary>
            Gets the behavior.
            </summary>
            <param name="commandKey">The command key.</param>
            <param name="command">The command.</param>
            <param name="collisionPrefix">The collision prefix.</param>
            <param name="entry">The package entry.</param>
            <returns>The collision behavior.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.GetContingencyEntries">
            <summary>
            Gets the contingency entries.
            </summary>
            <returns>The entries.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.InitializeInstallationProcessLogger(log4net.ILog)">
            <summary>
            Initializes the installation process logger.
            </summary>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.RegisterCommand(Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Registers the command.
            </summary>
            <param name="command">
            The command.
            </param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.WriteCommandProcessingMessage(System.String)">
            <summary>
            Writes the command processing message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.IsProcessingEntity(System.String)">
            <summary>
            Checks whether entityId and processingEntityId equals. 
            </summary>
            <param name="entityId">The entity ID.</param>
            <returns><c>true</c> if entityId eqal to processingEntityId; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.GetFieldSharing(Sitecore.Data.ID,Sitecore.Data.Database)">
            <summary>
            Gets the field sharing.
            </summary>
            <param name="fieldID">The field ID.</param>
            <param name="database">The database.</param>
            <returns>The field sharing.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.ChangeFieldSharing(Sitecore.Data.ID,Sitecore.Data.Database,Sitecore.Update.Installer.SharingChangeType)">
            <summary>
            Memorizes the change of template field sharing.
            </summary>
            <param name="fieldID">The field ID.</param>
            <param name="database">The database.</param>
            <param name="sharedFieldChanged">if set to <c>true</c> shared field id changed.</param>
            <param name="set">if set to <c>true</c> field is set.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.GetUniqueID(Sitecore.Data.ID,Sitecore.Data.Database)">
            <summary>
            Gets the unique ID.
            </summary>
            <param name="fieldID">The field ID.</param>
            <param name="database">The database.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.TrackMoveItemOperation(System.String,System.String)">
            <summary>
            Tracks the move item operation paths mapping.
            </summary>
            <param name="oldItemPath">The old item path.</param>
            <param name="newItemPath">The new item path.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.GetItemPath(System.String)">
            <summary>
            Gets the new item path.
            </summary>
            <param name="commandItemPath">The command item path.</param>
            <returns>
            In case item or it's parent was moved, new path will be returned, otherwise, given path will be returned.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.AddFile(System.String)">
            <summary>
            Adds the file.
            </summary>
            <param name="path">The file path.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.AddFolder(System.String)">
            <summary>
            Adds the folder.
            </summary>
            <param name="path">The folder path.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.DeleteFile(System.String)">
            <summary>
            Deletes the file.
            </summary>
            <param name="path">The file path.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.DeleteFolder(System.String)">
            <summary>
            Deletes the folder.
            </summary>
            <param name="path">The folder path.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.GetFilePath(System.String,System.String@)">
            <summary>
            Gets the file path.
            </summary>
            <param name="path">The file path.</param>
            <param name="result">The result.</param>
            <returns><c>true</c> if file has been added to the list.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.GetFolderPath(System.String,System.String@)">
            <summary>
            Gets the folder path.
            </summary>
            <param name="path">The folder path.</param>
            <param name="result">The result.</param>
            <returns><c>true</c> if folder has been added to the list.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.GetEntityPath(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String,System.String@)">
            <summary>
            Gets the entity path.
            </summary>
            <param name="added">The added.</param>
            <param name="deleted">The deleted.</param>
            <param name="path">The entiry path.</param>
            <param name="result">The result.</param>
            <returns><c>true</c> if entity has been added to the list.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.PerformFileCommandOperation(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Performs the file command operation.
            </summary>
            <param name="first">The first.</param>
            <param name="second">The second.</param>
            <param name="path">The file path.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.HaveFilesSceduledToBeProcessed">
            <summary>
            Haves the files sceduled to be processed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.IsFileAdded(System.String)">
            <summary>
            Determines whether the specified file was accessed added during installation.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.IsFileAccessed(System.String)">
            <summary>
            Determines whether the specified file was accessed (added or deleted) during installation.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.IsFileAccessed(System.Func{System.String,System.Boolean})">
            <summary>
            Determines whether the specified file was accessed (added or deleted) during installation.
            </summary>
            <param name="predicateFunc">The predicate function.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.GetIndex(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Gets the index.
            </summary>
            <param name="key">The entity key.</param>
            <param name="list">The list of entities.</param>
            <returns>The index in the list.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.GetParent(Sitecore.Data.Items.Item)">
            <summary>
            Gets the parent.
            </summary>
            <param name="item">The item.</param>
            <returns>The parent item.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.AddItem(Sitecore.Data.ItemDefinition,Sitecore.Data.Items.Item,Sitecore.Data.Database)">
            <summary>
            Adds the item.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="database">The database.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.ClearItemOperation(Sitecore.Data.ItemDefinition,Sitecore.Data.Database)">
            <summary>
            Clears the item operation.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="database">The database.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.DeleteItem(Sitecore.Data.ItemDefinition,Sitecore.Data.Database)">
            <summary>
            Deletes the item.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="database">The database.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.ClearPostponnedItems">
            <summary>
            Clears the postponned items.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.PostponeDeleteItem(Sitecore.Data.ItemDefinition,Sitecore.Data.Database)">
            <summary>
            Deletes the item.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="database">The database.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.GetItem(Sitecore.Data.ID,Sitecore.Data.Database,Sitecore.Data.Items.Item@)">
            <summary>
            Gets the item.
            </summary>
            <param name="id">The item id.</param>
            <param name="database">The database.</param>
            <param name="result">The result.</param>
            <returns><c>true</c> if item has been added to the list.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.ClearItemOperation(System.Collections.Generic.Dictionary{System.String,Sitecore.Data.ItemDefinition},Sitecore.Data.ItemDefinition,Sitecore.Data.Database)">
            <summary>
            Clears the item operation.
            </summary>
            <param name="operations">The operations.</param>
            <param name="item">The sitecore item.</param>
            <param name="database">The database.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.PerformCommandOperation(System.Collections.Generic.Dictionary{System.String,Sitecore.Data.ItemDefinition},System.Collections.Generic.Dictionary{System.String,Sitecore.Data.ItemDefinition},Sitecore.Data.ItemDefinition,Sitecore.Data.Database)">
            <summary>
            Performs the command operation.
            </summary>
            <param name="first">The first.</param>
            <param name="second">The second.</param>
            <param name="item">The Sitecore item.</param>
            <param name="database">The database.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.ExtractDatabase(System.String)">
            <summary>
            Extracts the database from command key.
            </summary>
            <param name="key">The command key.</param>
            <returns>The database.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.CommandInstallerContext.GetOperationKey(Sitecore.Data.ID,Sitecore.Data.Database)">
            <summary>
            Gets the operation key.
            </summary>
            <param name="id">The item id.</param>
            <param name="database">The database.</param>
            <returns>The operation key.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.FileCopyInfo">
            <summary>
            The File Copy operation description
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.FileCopyInfo.SourcePath">
            <summary>
            The Source file path
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.FileCopyInfo.TargetPath">
            <summary>
            The target file path
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.FileCopyInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.FileCopyInfo"/> class.
            </summary>
            <param name="sourcePath">The source path.</param>
            <param name="targetPath">The target path.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.FileSystemInstallerContext">
            <summary>
            The file installation context.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.FileSystemInstallerContext.applicationPath">
            <summary>
            The application path.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.FileSystemInstallerContext.dataFolderPath">
            <summary>
            The data folder path.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.FileSystemInstallerContext.deletedRoot">
            <summary>
            The root for deleted files.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.FileSystemInstallerContext.historyPath">
            <summary>
            The path to the history folder.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.FileSystemInstallerContext.errors">
            <summary>
            The list of installation exceptions.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.FileSystemInstallerContext.#ctor(Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.FileSystemInstallerContext"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Update.Installer.FileSystemInstallerContext.AppPath">
            <summary>
            Gets the application path.
            </summary>
            <value>The application path.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.FileSystemInstallerContext.DataFolderPath">
            <summary>
            Gets the data folder path.
            </summary>
            <value>The data folder path.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.FileSystemInstallerContext.DeletedRoot">
            <summary>
            Gets the deleted root.
            </summary>
            <value>The deleted root.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.FileSystemInstallerContext.Errors">
            <summary>
            Gets the list of installation ecxeptions.
            </summary>
            <value>The list of installation ecxeptions.</value>
        </member>
        <member name="M:Sitecore.Update.Installer.FileSystemInstallerContext.GetErrors(System.String)">
            <summary>
            Gets the errors.
            </summary>
            <param name="historyPath">The history path.</param>
            <returns>The list of installation exceptions.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.FileSystemInstallerContext.GetRootPath(System.String)">
            <summary>
            Returns DataFolderPath is path is under data folder. Otherwise, returns AppPath.
            </summary>
            <param name="path">Path to file or folder.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.FileSystemInstallerContext.SetInstalationError(System.Exception)">
            <summary>
            Sets the instalation error.
            </summary>
            <param name="ex">The exception.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.FileSystemInstallerContext.FlushErrors">
            <summary>
            Flushes the errors.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Installer.IContingencyEntryFilter">
            <summary>
            Interface for filtering contingency entries.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.IContingencyEntryFilter.Apply(Sitecore.Update.Installer.ContingencyEntry)">
            <summary>
            Applies current filter for the specified entry.
            </summary>
            <param name="entry">The entry.</param>
            <returns>Entry if it should not be filtered, otherwise null will be returned.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.RollbackPackageWriter">
            <summary>
            The package writer that appends data to existing package.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.RollbackPackageWriter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.RollbackPackageWriter"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.RollbackPackageWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.RollbackPackageWriter"/> class.
            </summary>
            <param name="packagePath">The package path.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.RollbackPackageWriter.Initialize">
            <summary>
            Initializes this instance.
            </summary>
            <exception cref="T:System.Exception">Cannot initialize ZIP stream because package path is not set</exception>
        </member>
        <member name="T:Sitecore.Update.Installer.StreamPackageReader">
            <summary>
            Package Reader from file stream.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.StreamPackageReader.path">
            <summary>
            The package path.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.StreamPackageReader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.StreamPackageReader"/> class.
            </summary>
            <param name="packagePath">The package path.</param>
        </member>
        <member name="P:Sitecore.Update.Installer.StreamPackageReader.PackagePath">
            <summary>
            Gets the package path.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.StreamPackageReader.Populate(Sitecore.Install.Framework.ISink{Sitecore.Install.Framework.PackageEntry})">
            <summary>
            Populates specified sink from this sourse.
            </summary>
            <param name="sink">The instalation sink.</param>
            <exception cref="T:System.IO.FileNotFoundException"><c>FileNotFoundException</c>.</exception>
        </member>
        <member name="M:Sitecore.Update.Installer.StreamPackageReader.ReadData(System.IO.StreamReader)">
            <summary>
            Reads the data entry from a file.
            </summary>
            <param name="reader">The package reader.</param>
            <returns>The entry data.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.StreamPackageWriter">
            <summary>
            The rollback stream package writer.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.StreamPackageWriter.EndEntryText">
            <summary>
            Indicator od End endry text.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.StreamPackageWriter.StartEntryText">
            <summary>
            Indicator of start entry text.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.StreamPackageWriter.writer">
            <summary>
            The writer.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.StreamPackageWriter.path">
            <summary>
            The package path.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.StreamPackageWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.StreamPackageWriter"/> class.
            </summary>
            <param name="path">The package path.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.StreamPackageWriter.#ctor(System.IO.FileStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.StreamPackageWriter"/> class.
            </summary>
            <param name="stream">The file stream.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.StreamPackageWriter.Flush">
            <summary>
            Flushes the writer
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.StreamPackageWriter.Finish">
            <summary>
            Finishes the writer.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.StreamPackageWriter.Put(Sitecore.Install.Framework.PackageEntry)">
            <summary>
            Puts the specified entry.
            </summary>
            <param name="entry">The package entry.</param>
            <exception cref="T:System.Exception">Writer is not initialized.</exception>
        </member>
        <member name="M:Sitecore.Update.Installer.StreamPackageWriter.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.StreamPackageWriter.Initialize">
            <summary>
            Initializes this instance.
            </summary>
            <exception cref="T:System.Exception">Cannot initialize the writer because package path is not set.</exception>
        </member>
        <member name="T:Sitecore.Update.Installer.Utils.ItemUtils">
            <summary>
            The Item Utility class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.ItemUtils.SilentDeleteItem(Sitecore.Data.Items.Item)">
            <summary>
            Silent deletes the item.
            </summary>
            <param name="item">The item to be deleted silently.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.ItemUtils.GetItemVersion(Sitecore.Data.Items.Item,Sitecore.Globalization.Language,Sitecore.Data.Version)">
            <summary>
            Gets the item version.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="language">The language.</param>
            <param name="version">The version number.</param>
            <returns>The item version.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.ItemUtils.GetNearestParentPath(System.String,Sitecore.Data.Database)">
            <summary>
            Gets the nearest parent path.
            </summary>
            <param name="itemPath">The item path.</param>
            <param name="database">The database.</param>
            <returns>The nearest existing parent item path.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.ItemUtils.CreateParentFromPath(Sitecore.Data.Database,System.String)">
            <summary>
            Creates the parent item from path.
            </summary>
            <param name="database">The database.</param>
            <param name="itemPath">The item path.</param>
            <returns>The created parent.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.ItemUtils.IsDictionaryPart(System.String,Sitecore.Data.ID)">
            <summary>
            Determines whether specified item with specified path or template ID is part of the dictionary feature.
            </summary>
            <param name="itemPath">The item path.</param>
            <param name="templateID">The item template identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.ItemUtils.IsDefaultDictionaryPath(System.String)">
            <summary>
            Determines whether specified path belongs to default dictionary location.
            </summary>
            <param name="itemPath">The item path.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.ItemUtils.IsDictionaryPhrase(Sitecore.Data.ID)">
            <summary>
            etermines whether templateID is a dictionary phrase.
            </summary>
            <param name="templateID">The template identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.ItemUtils.IsDictionaryLetter(Sitecore.Data.ID)">
            <summary>
            Determines whether templateID is a dictionary letter.
            </summary>
            <param name="templateID">The template identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Utils.UpgradeAction">
            <summary>
            Update Type
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Utils.UpgradeAction.Preview">
            <summary>
            Analyze action
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Utils.UpgradeAction.Upgrade">
            <summary>
            Upgrade action
            </summary>
        </member>
        <member name="T:Sitecore.Update.Installer.Utils.InstallerUtils">
            <summary>
            The installer utility methods.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Utils.InstallerUtils.BlobIdentificator">
            <summary>
            The Blob field identificator.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Utils.InstallerUtils.FileDatabaseName">
            <summary>
            The File database name.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Utils.InstallerUtils.databaseRanks">
            <summary>
            The database ranks.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Utils.InstallerUtils.pathRanks">
            <summary>
            The path ranks.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Utils.InstallerUtils.dependencyRanks">
            <summary>
            The dependency ranks.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Utils.InstallerUtils.maxDatabaseRank">
            <summary>
            The maximun database rank.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Utils.InstallerUtils.maxPathRank">
            <summary>
            The maximum Path rank.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.InstallerUtils.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Sitecore.Update.Installer.Utils.InstallerUtils"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.InstallerUtils.InitializeRanks">
            <summary>
            Initializes the ranks.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.InstallerUtils.InitializeDatabaseRanks">
            <summary>
            Initializes the database ranks.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.InstallerUtils.InitializePathRanks">
            <summary>
            Initializes the path ranks.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.InstallerUtils.ClearCaches(Sitecore.Data.Database,Sitecore.Data.ID)">
            <summary>
            Clears the Sitecore caches for specific item.
            </summary>
            <param name="database">The database.</param>
            <param name="itemID">The item ID.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.InstallerUtils.ClearCaches(Sitecore.Data.Database,Sitecore.Data.ID,System.Boolean)">
            <summary>
            Clears the caches.
            </summary>
            <param name="database">The database.</param>
            <param name="itemID">The item ID.</param>
            <param name="force">if set to <c>true</c> caches will be cleared without checking the even disabler state.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.InstallerUtils.GetDatabaseRank(System.String)">
            <summary>
            Gets the database rank.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <returns>The database rank.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.InstallerUtils.GetPathRank(System.String)">
            <summary>
            Gets the path rank.
            </summary>
            <param name="path">The data path.</param>
            <returns>The path rank.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.InstallerUtils.GetDependencyRankKey(System.String,System.String)">
            <summary>
            Gets the dependency rank key.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="itemID">The item identifier.</param>
            <returns>Returns Rank key.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.InstallerUtils.GetDependencyRank(System.String,Sitecore.Data.ID)">
            <summary>
             Gets the dependency rank.
            </summary>
            <param name="itemId">The item ID</param>
            <returns>The dependency rank.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.InstallerUtils.GetPrefix(System.String,System.String)">
            <summary>
            Gets the prefix.
            </summary>
            <param name="installedItemID">The installed item ID.</param>
            <param name="itemID">The item ID.</param>
            <returns>The prefix.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.InstallerUtils.IsStandardValueItem(Sitecore.Data.Serialization.ObjectModel.SyncItem,Sitecore.Data.Database)">
            <summary>
            Determines whether specified item is a standard value item.
            </summary>
            <param name="item">The data item.</param>
            <param name="database">The database.</param>
            <returns>
              <c>true</c> if specified item is a standard value item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.InstallerUtils.IsRelatedPath(System.String)">
            <summary>
            Determines whether the specified path is a related path.
            </summary>
            <param name="path">The path to be verified.</param>
            <returns>
              <c>true</c> if the specified path is a related path; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.InstallerUtils.MapRelatedPath(System.String)">
            <summary>
            Maps the related path.
            </summary>
            <param name="path">The file path.</param>
            <returns>The mapped path.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.InstallerUtils.ResetTemplateEngine(Sitecore.Data.Items.Item)">
            <summary>
            Resets the template engine.
            </summary>
            <param name="target">The template item.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.InstallerUtils.SetDatabaseRank(System.String,System.Int32)">
            <summary>
            Sets the database rank.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="rank">The database rank.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.InstallerUtils.GetRegisteredRanks">
            <summary>
            Gets the registered ranks.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.InstallerUtils.SetPathRank(System.String,System.Int32)">
            <summary>
            Sets the path rank.
            </summary>
            <param name="path">The data path.</param>
            <param name="rank">The path rank.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.InstallerUtils.SetPathRank(System.String,System.Int32,System.Boolean)">
            <summary>
            Sets the path rank.
            </summary>
            <param name="path">The data path.</param>
            <param name="rank">The path rank.</param>
            <param name="increaseMaxRank">if set to <c>true</c> the maximum rank shold be increased.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.InstallerUtils.SetDependencyRanks(System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            Sets the dependency ranks.
            </summary>
            <param name="ranks">The dependency ranks.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.InstallerUtils.GetRollbackPackageWriter(System.String)">
            <summary>
            Gets the rollback package writer.
            </summary>
            <param name="path">The rollback package path.</param>
            <returns>The package writer.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.InstallerUtils.GetRollbackPackageReader(System.String)">
            <summary>
            Gets the rollback package reader.
            </summary>
            <param name="path">The package path.</param>
            <returns>The rollback package reader.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Utils.InstallerUtils.Rank">
            <summary>
            The rank class.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Utils.InstallerUtils.Rank.path">
            <summary>
            The data path.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Utils.InstallerUtils.Rank.value">
            <summary>
            The rank value.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Utils.InstallerUtils.Rank.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Utils.InstallerUtils.Rank"/> class.
            </summary>
            <param name="path">The data path.</param>
            <param name="value">The rank value.</param>
        </member>
        <member name="P:Sitecore.Update.Installer.Utils.InstallerUtils.Rank.Path">
            <summary>
            Gets the data path.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Installer.Utils.InstallerUtils.Rank.Value">
            <summary>
            Gets the rank value.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Installer.Installer.Utils.ShutdownGuard">
            <summary>
            Guard for ShutDown operation.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Installer.Utils.ShutdownGuard.released">
            <summary>
            The domain released event.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Installer.Utils.ShutdownGuard.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Installer.Utils.ShutdownGuard"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Installer.Utils.ShutdownGuard.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Installer.Utils.ShutdownGuard.Stop(System.Boolean)">
            <summary>
            Requests a registered object to unregister.
            </summary>
            <param name="immediate">true to indicate the registered object should unregister from the hosting environment before returning; otherwise, false.</param>
        </member>
        <member name="T:Sitecore.Update.Installer.Messages.Message">
            <summary>
            The message.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Messages.Message.description">
            <summary>
            The message description.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Messages.Message.shortDescription">
            <summary>
            The message short description.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Messages.Message.messageTypeID">
            <summary>
            The message ID.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Messages.Message.uniqueMessageID">
            <summary>
            The Unique ID.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Messages.Message.messageGroupDescription">
            <summary>
            The message group description.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Messages.Message.messageGroupID">
            <summary>
            The message group ID.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Messages.Message.action">
            <summary>
            The very short description of reflected operation.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Messages.Message.isInitialized">
            <summary>
            Indicates whether message has been initialized or not.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Messages.Message.customData">
            <summary>
            The custom data.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Messages.Message.#ctor(System.Xml.XmlReader,Sitecore.Update.CollisionBehavior)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Messages.Message"/> class.
            </summary>
            <param name="reader">The Xml reader.</param>
            <param name="behavior">The collision behavior.</param>
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:Sitecore.Update.Installer.Messages.Message.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Messages.Message"/> class.
            </summary>
            <param name="messageID">The message ID.</param>
            <param name="messageTypeID">The message type ID.</param>
            <param name="messageGroupID">The message group ID.</param>
            <param name="messageGroupDescription">The message group description.</param>
            <param name="description">The description.</param>
            <param name="shortDescription">The short description.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Messages.Message.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Messages.Message"/> class.
            </summary>
            <param name="messageID">The message ID.</param>
            <param name="messageTypeID">The message type ID.</param>
            <param name="messageGroupID">The message group ID.</param>
            <param name="messageGroupDescription">The message group description.</param>
            <param name="description">The description.</param>
            <param name="shortDescription">The short description.</param>
            <param name="action">The action.</param>
            <param name="customData">The custom data.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Messages.Message.#ctor(Sitecore.Update.Installer.Messages.Message)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Messages.Message"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="P:Sitecore.Update.Installer.Messages.Message.Action">
            <summary>
            Gets or sets the very short description of operation.
            </summary>
            <value>The action name.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.Messages.Message.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.Messages.Message.ShortDescription">
            <summary>
            Gets or sets the short description.
            </summary>
            <value>The short description.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.Messages.Message.MessageTypeID">
            <summary>
            Gets the message type ID.
            </summary>
            <value>The message type ID.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.Messages.Message.MessageGroupDescription">
            <summary>
            Gets the message group description.
            </summary>
            <value>The message group description.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.Messages.Message.MessageGroupID">
            <summary>
            Gets the message group ID.
            </summary>
            <value>The message group ID.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.Messages.Message.UniqueMessageID">
            <summary>
            Gets or sets the unique message ID.
            </summary>
            <value>The unique message ID.</value>
            <exception cref="T:System.Exception">Message doesn't have unique key.</exception>
        </member>
        <member name="P:Sitecore.Update.Installer.Messages.Message.CustomData">
            <summary>
            Gets the custom data.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Messages.Message.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Messages.Message.Initialize(System.String[])">
            <summary>
            Initializes the specified parameters.
            </summary>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.Messages.Message.InitializeProperty(System.String,System.String[])">
            <summary>
            Initializes the property.
            </summary>
            <param name="property">The property.</param>
            <param name="parameters">The parameters.</param>
            <returns>The formatted property.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Messages.Message.GetNodeValue(System.String,System.Xml.XmlReader)">
            <summary>
            Gets the node value.
            </summary>
            <param name="nodeName">Name of the node.</param>
            <param name="reader">The reader.</param>
            <returns>The node value.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.Messages.Message.EnsureInitialization">
            <summary>
            Ensures the initialization.
            </summary>
            <exception cref="T:System.Exception">Message is not initialized yet.</exception>
        </member>
        <member name="T:Sitecore.Update.Installer.Messages.Message.MessageInfo">
            <summary>
            Represents the massage information.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Messages.Message.MessageInfo.shortDescription">
            <summary>
            The Short message description.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Messages.Message.MessageInfo.longDescription">
            <summary>
            The long message description.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Messages.Message.MessageInfo.action">
            <summary>
            The message action.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Messages.Message.MessageInfo.behavior">
            <summary>
            The message behavior description.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Messages.Message.MessageInfo.#ctor(System.Xml.XmlReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Messages.Message.MessageInfo"/> class.
            </summary>
            <param name="reader">The Xml reader.</param>
        </member>
        <member name="P:Sitecore.Update.Installer.Messages.Message.MessageInfo.ShortDescription">
            <summary>
            Gets the message short description.
            </summary>
            <value>The short description.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.Messages.Message.MessageInfo.LongDescription">
            <summary>
            Gets the long description.
            </summary>
            <value>The long description.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.Messages.Message.MessageInfo.Action">
            <summary>
            Gets the action.
            </summary>
            <value>The action.</value>
        </member>
        <member name="P:Sitecore.Update.Installer.Messages.Message.MessageInfo.CollisionBehavior">
            <summary>
            Gets the collision behavior.
            </summary>
            <value>The collision behavior.</value>
        </member>
        <member name="T:Sitecore.Update.Installer.Messages.MessageFactory">
            <summary>
            The message factory.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Messages.MessageFactory.lockObj">
            <summary>
            Lock object.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Messages.MessageFactory.isLoaded">
            <summary>
            Indicates whether messages are already loaded.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Installer.Messages.MessageFactory.messages">
            <summary>
            List of messages.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Messages.MessageFactory.GetMessage(System.String,Sitecore.Update.CollisionBehavior,System.String[])">
            <summary>
            Gets the message.
            </summary>
            <param name="messageTypeID">The message type ID.</param>
            <param name="collistionBehavior">The collistion behavior.</param>
            <param name="parameters">The parameters.</param>
            <returns>The message object.</returns>
            <exception cref="T:System.IO.InvalidDataException"><c>InvalidDataException</c>.</exception>
        </member>
        <member name="M:Sitecore.Update.Installer.Messages.MessageFactory.LoadMessages">
            <summary>
            Loads the messages.
            </summary>
            <exception cref="T:System.Exception">Cannot find resource file.</exception>
        </member>
        <member name="M:Sitecore.Update.Installer.Messages.MessageFactory.Load(System.IO.Stream,Sitecore.Update.CollisionBehavior)">
            <summary>
            Loads the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="behavior">The behavior.</param>
            <exception cref="T:System.Exception">Cannot find resource file.</exception>
        </member>
        <member name="M:Sitecore.Update.Installer.Messages.MessageFactory.GetMessageKey(System.String,Sitecore.Update.CollisionBehavior)">
            <summary>
            Gets the message key.
            </summary>
            <param name="messageID">The message ID.</param>
            <param name="behavior">The behavior.</param>
            <returns>The message key.</returns>
        </member>
        <member name="T:Sitecore.Update.Installer.Messages.MessageTypeAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.Messages.MessageTypeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Installer.Messages.MessageTypeAttribute"/> class.
            </summary>
            <param name="messageTypeID">The message type id.</param>
        </member>
        <member name="P:Sitecore.Update.Installer.Messages.MessageTypeAttribute.MessageTypeId">
            <summary>
            Gets the message type id.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Installer.XmlEntrySerializer">
            <summary>
            Serializes contingencies.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Installer.XmlEntrySerializer.Deserialize(System.IO.Stream)">
            <summary>
            Deserializes the list of contingency entries from the file.
            </summary>
            <param name="stream">The file stream.</param>
            <returns>The list of contingency entries.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.XmlEntrySerializer.Serialize(System.Collections.Generic.IEnumerable{Sitecore.Update.Installer.ContingencyEntry},System.IO.Stream)">
            <summary>
            Serializes the specified entries.
            </summary>
            <param name="entries">The entries.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.XmlEntrySerializer.DeserializeEntry(System.Xml.XmlReader)">
            <summary>
            Deserializes the entry.
            </summary>
            <param name="reader">The Xml reader.</param>
            <returns>The Contingency Entry.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.XmlEntrySerializer.Serialize(Sitecore.Update.Installer.ContingencyEntry,System.Xml.XmlWriter)">
            <summary>
            Serializes the specified entry.
            </summary>
            <param name="entry">The entry.</param>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.XmlEntrySerializer.Flush(System.Xml.XmlWriter)">
            <summary>
            Flushes the specified writer.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Sitecore.Update.Installer.XmlEntrySerializer.ReadElementValue(System.String,System.Xml.XmlReader)">
            <summary>
            Reads the element value.
            </summary>
            <param name="elementName">Name of the element.</param>
            <param name="reader">The reader.</param>
            <returns>The element value.</returns>
        </member>
        <member name="M:Sitecore.Update.Installer.XmlEntrySerializer.WriteElement(System.String,System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the element.
            </summary>
            <param name="nodeName">Name of the node.</param>
            <param name="value">The element value.</param>
            <param name="writer">The writer.</param>
        </member>
        <member name="T:Sitecore.Update.Configuration.ConfigReader">
            <summary>
            Configuration reader.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Configuration.ConfigReader.section">
            <summary>
            The configuration section.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Configuration.ConfigReader.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            Creates a configuration section handler.
            </summary>
            <param name="parent">Parent object.</param>
            <param name="configContext">Configuration context object.</param>
            <param name="xmlSection">Section XML node.</param>
            <returns>The created section handler object.</returns>
        </member>
        <member name="M:Sitecore.Update.Configuration.ConfigReader.GetConfigNode">
            <summary>
            Gets the config node.
            </summary>
            <returns>The configuration node.</returns>
        </member>
        <member name="M:Sitecore.Update.Configuration.ConfigReader.GetConfigNode(System.String)">
            <summary>
            Gets the configuration node.
            </summary>
            <param name="xpath">The xpath.</param>
            <returns>The configuration node.</returns>
        </member>
        <member name="M:Sitecore.Update.Configuration.ConfigReader.GetNode(System.String)">
            <summary>
            Gets the configuyration node by path.
            </summary>
            <param name="xpath">The xpath.</param>
            <returns>The configuration node.</returns>
        </member>
        <member name="T:Sitecore.Update.Configuration.Factory">
            <summary>
            The factory class.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Configuration.Factory.instance">
            <summary>
            The singleton instance.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Configuration.Factory.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Configuration.Factory"/> class.
            </summary>
            <param name="configNodeName">Name of the config node.</param>
        </member>
        <member name="P:Sitecore.Update.Configuration.Factory.Instance">
            <summary>
            Gets the singleton instance.
            </summary>
            <value>The singleton instance.</value>
        </member>
        <member name="M:Sitecore.Update.Configuration.Factory.GetInstance(System.String)">
            <summary>
            Gets the instance.
            </summary>
            <param name="sectionName">Name of the section.</param>
            <returns>The singleton instance.</returns>
        </member>
        <member name="F:Sitecore.Update.Configuration.Factory.reader">
            <summary>
            The configuration reader.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Configuration.Factory.commandFilters">
            <summary>
            The data filters.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Configuration.Factory.settings">
            <summary>
            The UPT settings
            </summary>
        </member>
        <member name="F:Sitecore.Update.Configuration.Factory.commands">
            <summary>
            The commands.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Configuration.Factory.xmlCommands">
            <summary>
            The supported xml commands.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Configuration.Factory.dataManagers">
            <summary>
            The data managers.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Configuration.Factory.dataproviders">
            <summary>
            The data providers.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Configuration.Factory.snapShotConverters">
            <summary>
            The converters.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Configuration.Factory.sourceDataManager">
            <summary>
            The source data manager.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Configuration.Factory.targetDataManager">
            <summary>
            The target data manager.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Configuration.Factory.uptSettings">
            <summary>
            The upt settings
            </summary>
        </member>
        <member name="P:Sitecore.Update.Configuration.Factory.Settings">
            <summary>
            Gets the settings.
            </summary>
            <value>
            The settings.
            </value>
        </member>
        <member name="M:Sitecore.Update.Configuration.Factory.ResetUPTSettings">
            <summary>
            Resets the upt settings.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Configuration.Factory.GetSnapshotConverters">
            <summary>
            Gets the snapshot converters.
            </summary>
            <returns>The converters.</returns>
        </member>
        <member name="M:Sitecore.Update.Configuration.Factory.GetSourceDataManager">
            <summary>
            Gets the source data manager.
            </summary>
            <returns>The data manager.</returns>
        </member>
        <member name="M:Sitecore.Update.Configuration.Factory.GetSupportedCommands">
            <summary>
            Gets the supported commands.
            </summary>
            <returns>The list of supported commands.</returns>
        </member>
        <member name="M:Sitecore.Update.Configuration.Factory.GetSupportedXmlCommands">
            <summary>
            Gets the supported XML commands.
            </summary>
            <returns>The support patch xml commands.</returns>
        </member>
        <member name="M:Sitecore.Update.Configuration.Factory.GetTargetDataManager">
            <summary>
            Gets the target data manager.
            </summary>
            <returns>The data manager.</returns>
        </member>
        <member name="M:Sitecore.Update.Configuration.Factory.GetConfigNode(System.String)">
            <summary>
            Gets the configuration node.
            </summary>
            <param name="XPath">The xpath.</param>
            <returns>The XML Node.</returns>
        </member>
        <member name="M:Sitecore.Update.Configuration.Factory.GetCommandFilters">
            <summary>
            Gets the command filters.
            </summary>
            <returns>The data filters.</returns>
        </member>
        <member name="M:Sitecore.Update.Configuration.Factory.GetCommandFilterNames">
            <summary>
            Gets the command filter names.
            </summary>
            <returns>The filter names.</returns>
        </member>
        <member name="M:Sitecore.Update.Configuration.Factory.GetPresetNames">
            <summary>
            Gets the preset names.
            </summary>
            <returns>The preset names.</returns>
        </member>
        <member name="M:Sitecore.Update.Configuration.Factory.GetDataProviderNames">
            <summary>
            Gets the data provider names.
            </summary>
            <returns>The data provoder names.</returns>
        </member>
        <member name="M:Sitecore.Update.Configuration.Factory.GetDataProviders">
            <summary>
            Gets the data providers.
            </summary>
            <returns>The data providers.</returns>
        </member>
        <member name="M:Sitecore.Update.Configuration.Factory.GetSetting(System.String)">
            <summary>
            Gets the setting.
            </summary>
            <param name="name">The setting name.</param>
            <returns>The setting value.</returns>
        </member>
        <member name="M:Sitecore.Update.Configuration.Factory.ReloadSettings">
            <summary>
            Reloads the UPT settings.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Configuration.Factory.GetCommandFilter(System.String)">
            <summary>
            Gets the command filter.
            </summary>
            <param name="name">The filter name.</param>
            <returns>The command filter.</returns>
        </member>
        <member name="M:Sitecore.Update.Configuration.Factory.GetPreset(System.String)">
            <summary>
            Gets the preset.
            </summary>
            <param name="name">The preset name.</param>
            <returns>The preset with specfied name.</returns>
        </member>
        <member name="M:Sitecore.Update.Configuration.Factory.GetDataProvider(System.String)">
            <summary>
            Gets the data provider.
            </summary>
            <param name="name">The provider name.</param>
            <returns>The data provider.</returns>
        </member>
        <member name="M:Sitecore.Update.Configuration.Factory.GetNames(System.String,System.String)">
            <summary>
            Gets the names.
            </summary>
            <param name="configPath">The config path.</param>
            <param name="nameAttribute">The name attribute.</param>
            <returns>The list of names.</returns>
        </member>
        <member name="M:Sitecore.Update.Configuration.Factory.GetPredefinedProviders">
            <summary>
            Gets the predefined providers.
            </summary>
            <returns>The data providers.</returns>
        </member>
        <member name="M:Sitecore.Update.Configuration.Factory.GetProviderNames(System.String,System.String)">
            <summary>
            Gets the provider names.
            </summary>
            <param name="configPath">The config path.</param>
            <param name="nameAttribute">The name attribute.</param>
            <returns>The provider names.</returns>
        </member>
        <member name="T:Sitecore.Update.Configuration.SerializationContext">
            <summary>
            The Serialization context.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Configuration.SerializationContext.data">
            <summary>
            The context data.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Configuration.SerializationContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Configuration.SerializationContext"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Configuration.SerializationContext.Data">
            <summary>
            Gets the context data.
            </summary>
            <value>The context data.</value>
        </member>
        <member name="T:Sitecore.Update.Configuration.UPTSettings">
            <summary>
            UPT Settings.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Configuration.UPTSettings.DataFolder">
            <summary>
            Gets a value indicating where data folder is located.
            </summary>
            <value>
            Relative to website folder path or absolute path to data folder.
            </value>
        </member>
        <member name="P:Sitecore.Update.Configuration.UPTSettings.MergeXmlEnabled">
            <summary>
            Gets a value indicating whether merge XML feature is enabled.
            </summary>
            <value>
            <c>true</c> if merge XML feature is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.Update.Configuration.UPTSettings.ResetMergeXmlEnabled">
            <summary>
            Resets the merge XML enabled.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Configuration.UPTSettings.GetBoolSetting(System.String,System.Boolean)">
            <summary>
            Gets the bool setting.
            </summary>
            <param name="settingName">Name of the setting.</param>
            <param name="defaultValue">The setting default value.</param>
            <returns>Setting value, defaultValue is case setting is not defined.</returns>
        </member>
        <member name="M:Sitecore.Update.Configuration.UPTSettings.GetSetting(System.String,System.String)">
            <summary>
            Gets the setting.
            </summary>
            <param name="settingName">Name of the setting.</param>
            <param name="defaultValue">The setting default value.</param>
            <returns>Setting value, defaultValue is case setting is not defined.</returns>
        </member>
        <member name="M:Sitecore.Update.Configuration.UPTSettings.IsSitecoreConfigurationLoaded">
            <summary>
            Determines whether the sitecore configuration was loaded.
            </summary>
            <returns><c>true</c> when the Sitecore configuration has been loaded.</returns>
        </member>
        <member name="M:Sitecore.Update.Configuration.UPTSettings.GetStaticPropertyValue(System.String)">
            <summary>
            Gets the static property value.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>The property value.</returns>
        </member>
        <member name="T:Sitecore.Update.Data.Comparers.FileComparer">
            <summary>
            The file comparer.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.Comparers.FileComparer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Comparers.FileComparer"/> class.
            </summary>
            <param name="name">The data name.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Comparers.FileComparer.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The instance.</returns>
        </member>
        <member name="T:Sitecore.Update.Data.Comparers.ItemDumpComparer">
            <summary>
            Dump Item comparer.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.Comparers.ItemDumpComparer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Comparers.ItemDumpComparer"/> class.
            </summary>
            <param name="name">The item name.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Comparers.ItemDumpComparer.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The clonned instance.</returns>
        </member>
        <member name="T:Sitecore.Update.Data.Comparers.XmlFileComparer">
            <summary>
            XML File comparer.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.Comparers.XmlFileComparer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Comparers.XmlFileComparer"/> class.
            </summary>
            <param name="name">The data name.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Comparers.XmlFileComparer.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The instance.</returns>
        </member>
        <member name="T:Sitecore.Update.Data.DataManager">
            <summary>
            The data manager.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.DataManager.path">
            <summary>
            The data path.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.DataManager.serializationPath">
            <summary>
            The serialization path.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.DataManager.tag">
            <summary>
            The tag of the data.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.DataManager.dataProvider">
            <summary>
            The data provider.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.DataManager.filters">
            <summary>
            The list of data filters.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.DataManager.dataProviders">
            <summary>
            The data providers
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.DataManager.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.DataManager"/> class.
            </summary>
            <param name="name">The data name.</param>
        </member>
        <member name="P:Sitecore.Update.Data.DataManager.Path">
            <summary>
            Gets or sets the path.
            </summary>
            <value>The data path.</value>
        </member>
        <member name="P:Sitecore.Update.Data.DataManager.SerializationPath">
            <summary>
            Gets or sets the serialization path.
            </summary>
            <value>The serialization path.</value>
        </member>
        <member name="P:Sitecore.Update.Data.DataManager.Tag">
            <summary>
            Gets or sets the data tag.
            </summary>
            <value>The data tag.</value>
        </member>
        <member name="P:Sitecore.Update.Data.DataManager.FileSystemIterator">
            <summary>
            Gets the file system data iterator.
            </summary>
            <value>The file system data iterator.</value>
        </member>
        <member name="P:Sitecore.Update.Data.DataManager.ItemIterator">
            <summary>
            Gets the item iterator.
            </summary>
            <value>The item iterator.</value>
        </member>
        <member name="P:Sitecore.Update.Data.DataManager.AssignProperties">
            <summary>
            Gets a value indicating whether the <see cref="T:Sitecore.Reflection.IInitializable"/> the properties are assigned.
            </summary>
            <value>
              <c>true</c> if the <see cref="T:Sitecore.Reflection.IInitializable"/> the  properties has been already assigned; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Update.Data.DataManager.DataProvider">
            <summary>
            Gets the data provider.
            </summary>
            <value>The data provider.</value>
        </member>
        <member name="P:Sitecore.Update.Data.DataManager.Filters">
            <summary>
            Gets the list of data filters.
            </summary>
            <value>The list of data filters.</value>
        </member>
        <member name="M:Sitecore.Update.Data.DataManager.Initialize(System.Xml.XmlNode)">
            <summary>
            Initializes the object from the specified config node.
            </summary>
            <param name="configNode">The configuration node.</param>
        </member>
        <member name="M:Sitecore.Update.Data.DataManager.InitializeProperties(System.Xml.XmlNode)">
            <summary>
            Initializes the properties.
            </summary>
            <param name="configNode">The configuration node.</param>
        </member>
        <member name="M:Sitecore.Update.Data.DataManager.InitializeProvider(System.Xml.XmlNode)">
            <summary>
            Initializes the provider.
            </summary>
            <param name="configNode">The configuration node.</param>
        </member>
        <member name="M:Sitecore.Update.Data.DataManager.InitializeFilters(System.Xml.XmlNode)">
            <summary>
            Initializes the filters.
            </summary>
            <param name="configNode">The configuration node.</param>
        </member>
        <member name="M:Sitecore.Update.Data.DataManager.InitializeFromPreset(System.Xml.XmlNode)">
            <summary>
            Initializes from preset.
            </summary>
            <param name="configNode">The configuration node.</param>
        </member>
        <member name="M:Sitecore.Update.Data.DataManager.GetDataProvider(System.String)">
            <summary>
            Gets the data provider.
            </summary>
            <param name="path">The data root path.</param>
            <returns>The data provider.</returns>
        </member>
        <member name="T:Sitecore.Update.Data.Providers.FileSystemProvider">
            <summary>
            The File system data provider.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.Providers.FileSystemProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Providers.FileSystemProvider"/> class.
            </summary>
            <param name="name">The data name.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Providers.FileSystemProvider.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The instance.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.Providers.FileSystemProvider.CanProcess(System.String)">
            <summary>
            Determines whether this provider can process the specified source path.
            </summary>
            <param name="sourcePath">The source path.</param>
            <returns>
              <c>true</c> if this provider can process the specified source path; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Data.Providers.FileSystemProvider.GetIterator(System.String,System.Collections.Generic.IList{Sitecore.Update.Filters.Filter})">
            <summary>
            Gets the iterator.
            </summary>
            <param name="rootPath">The root path.</param>
            <param name="filters">The filters.</param>
            <returns>The Data iterator.</returns>
        </member>
        <member name="T:Sitecore.Update.Data.Providers.FileSystemProvider.FileSystemDataIterator">
            <summary>
            The file syste data iterator.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Providers.FileSystemProvider.FileSystemDataIterator.rootPath">
            <summary>
            The related root path.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Providers.FileSystemProvider.FileSystemDataIterator.root">
            <summary>
            The root path.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Providers.FileSystemProvider.FileSystemDataIterator.stack">
            <summary>
            The file stack.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Providers.FileSystemProvider.FileSystemDataIterator.dataPairs">
            <summary>
            The data pair.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Providers.FileSystemProvider.FileSystemDataIterator.position">
            <summary>
            The pair position.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.Providers.FileSystemProvider.FileSystemDataIterator.#ctor(System.String,System.Collections.Generic.IList{Sitecore.Update.Filters.Filter})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Providers.FileSystemProvider.FileSystemDataIterator"/> class.
            </summary>
            <param name="root">The root path.</param>
            <param name="filters">The filters.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Providers.FileSystemProvider.FileSystemDataIterator.#ctor(System.String,System.String,System.Collections.Generic.IList{Sitecore.Update.Filters.Filter})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Providers.FileSystemProvider.FileSystemDataIterator"/> class.
            </summary>
            <param name="root">The root path.</param>
            <param name="relatedRoot">The related root path.</param>
            <param name="filters">The filters.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Providers.FileSystemProvider.FileSystemDataIterator.Next">
            <summary>
            Return next instance in data collection.
            </summary>
            <returns>The Next data item in data collection.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.Providers.FileSystemProvider.FileSystemDataIterator.InitializeDataPairs(System.String)">
            <summary>
            Initializes the data pairs.
            </summary>
            <param name="root">The root path.</param>
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="T:Sitecore.Update.Data.Providers.FileSystemProvider.FileSystemDataIterator.DataPair">
            <summary>
            The Data pair information.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Providers.FileSystemProvider.FileSystemDataIterator.DataPair.info">
            <summary>
            The file information.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Providers.FileSystemProvider.FileSystemDataIterator.DataPair.dataItem">
            <summary>
            The data item.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.Providers.FileSystemProvider.FileSystemDataIterator.DataPair.#ctor(System.IO.FileSystemInfo,Sitecore.Update.Interfaces.IDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Providers.FileSystemProvider.FileSystemDataIterator.DataPair"/> struct.
            </summary>
            <param name="info">The file information.</param>
            <param name="item">The data item.</param>
        </member>
        <member name="P:Sitecore.Update.Data.Providers.FileSystemProvider.FileSystemDataIterator.DataPair.Info">
            <summary>
            Gets the file information.
            </summary>
            <value>The file information.</value>
        </member>
        <member name="P:Sitecore.Update.Data.Providers.FileSystemProvider.FileSystemDataIterator.DataPair.DataItem">
            <summary>
            Gets the data item.
            </summary>
            <value>The data item.</value>
        </member>
        <member name="T:Sitecore.Update.Data.Providers.FileSystemProvider.FileSystemDataIterator.FileSystemInfoComparer`1">
            <summary>
            The file camparer.
            </summary>
            <typeparam name="T">The comparable type.</typeparam>
        </member>
        <member name="M:Sitecore.Update.Data.Providers.FileSystemProvider.FileSystemDataIterator.FileSystemInfoComparer`1.Compare(`0,`0)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value
            Condition
            Less than zero
            <paramref name="x"/> is less than <paramref name="y"/>.
            Zero
            <paramref name="x"/> equals <paramref name="y"/>.
            Greater than zero
            <paramref name="x"/> is greater than <paramref name="y"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Update.Data.Providers.SnapShotProvider">
            <summary>
            The snap shot provider.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.Providers.SnapShotProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Providers.SnapShotProvider"/> class.
            </summary>
            <param name="name">The data name.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Providers.SnapShotProvider.CanProcess(System.String)">
            <summary>
            Determines whether this provider can process the specified source path.
            </summary>
            <param name="sourcePath">The source path.</param>
            <returns>
              <c>true</c> if this provider can process the specified source path; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Data.Providers.SnapShotProvider.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The instance.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.Providers.SnapShotProvider.GetIterator(System.String,System.Collections.Generic.IList{Sitecore.Update.Filters.Filter})">
            <summary>
            Gets the iterator.
            </summary>
            <param name="rootPath">The root path.</param>
            <param name="filters">The filters.</param>
            <returns>The Data iterator.</returns>
        </member>
        <member name="T:Sitecore.Update.Data.Providers.SnapShotProvider.SnapShotIterator">
            <summary>
            The snap shot iterator.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Providers.SnapShotProvider.SnapShotIterator.snapShotPath">
            <summary>
            The snap shot path.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Providers.SnapShotProvider.SnapShotIterator.isInitialized">
            <summary>
            Indicates whether iterator has been initialized.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Providers.SnapShotProvider.SnapShotIterator.items">
            <summary>
            The list of iterator items.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Providers.SnapShotProvider.SnapShotIterator.position">
            <summary>
            The current position.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.Providers.SnapShotProvider.SnapShotIterator.#ctor(System.String,System.Collections.Generic.IList{Sitecore.Update.Filters.Filter})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Providers.SnapShotProvider.SnapShotIterator"/> class.
            </summary>
            <param name="snapShotPath">The snap shot path.</param>
            <param name="filters">The filters.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Providers.SnapShotProvider.SnapShotIterator.Next">
            <summary>
            Return next instance in data collection.
            </summary>
            <returns>The Next data item in data collection.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.Providers.SnapShotProvider.SnapShotIterator.InitializeIterator">
            <summary>
            Initializes the iterator.
            </summary>
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="T:Sitecore.Update.Data.Providers.SnapShotProvider.SnapShotIterator.AccumulateSink">
            <summary>
            The sink accumulator.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Providers.SnapShotProvider.SnapShotIterator.AccumulateSink.entries">
            <summary>
            The data entries.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Providers.SnapShotProvider.SnapShotIterator.AccumulateSink.rootPath">
            <summary>
            The root path.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.Providers.SnapShotProvider.SnapShotIterator.AccumulateSink.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Providers.SnapShotProvider.SnapShotIterator.AccumulateSink"/> class.
            </summary>
            <param name="rootPath">The root path.</param>
        </member>
        <member name="P:Sitecore.Update.Data.Providers.SnapShotProvider.SnapShotIterator.AccumulateSink.Entries">
            <summary>
            Gets the entries.
            </summary>
            <value>The data entries.</value>
        </member>
        <member name="M:Sitecore.Update.Data.Providers.SnapShotProvider.SnapShotIterator.AccumulateSink.Put(Sitecore.Install.Framework.PackageEntry)">
            <summary>
            Converts the specified entry.
            </summary>
            <param name="entry">The package entry.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Providers.SnapShotProvider.SnapShotIterator.AccumulateSink.ConvertEntry(Sitecore.Install.Framework.PackageEntry)">
            <summary>
            Converts the entry.
            </summary>
            <param name="entry">The package entry.</param>
            <returns>The data item.</returns>
        </member>
        <member name="T:Sitecore.Update.Data.DataEngine">
            <summary>
            The Data engine.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.DataEngine.commandFilters">
            <summary>
            The command filters.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.DataEngine.filterCommands">
            <summary>
            Indicates whether generated commands are to be filtered.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.DataEngine.optimizeCommands">
            <summary>
            Indicates whether generated commands are to be optimized.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.DataEngine.sortCommands">
            <summary>
            Indicates whether generated commands are to be sorted.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.DataEngine.source">
            <summary>
            The source data manager.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.DataEngine.target">
            <summary>
            The target data manager.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.DataEngine.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.DataEngine"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.DataEngine.#ctor(Sitecore.Update.Data.DataManager,Sitecore.Update.Data.DataManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.DataEngine"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
        </member>
        <member name="M:Sitecore.Update.Data.DataEngine.#ctor(Sitecore.Update.Data.DataManager,Sitecore.Update.Data.DataManager,System.Collections.Generic.IList{Sitecore.Update.Interfaces.ICommandFilter})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.DataEngine"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <param name="commandFilters">The command filters.</param>
        </member>
        <member name="P:Sitecore.Update.Data.DataEngine.FilterCommands">
            <summary>
            Gets or sets a value indicating whether commands are to be filtered.
            </summary>
            <value><c>true</c> if commands are to be filtered; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sitecore.Update.Data.DataEngine.OptimizeCommands">
            <summary>
            Gets or sets a value indicating whether commands are to be optimized.
            </summary>
            <value><c>true</c> if commands are to be optimized; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sitecore.Update.Data.DataEngine.SortCommands">
            <summary>
            Gets or sets a value indicating whether commands are to be sorted.
            </summary>
            <value><c>true</c> if commands are to be sorted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sitecore.Update.Data.DataEngine.SourceManager">
            <summary>
            Gets the source manager.
            </summary>
            <value>The source manager.</value>
        </member>
        <member name="P:Sitecore.Update.Data.DataEngine.TargetManager">
            <summary>
            Gets the target manager.
            </summary>
            <value>The target manager.</value>
        </member>
        <member name="M:Sitecore.Update.Data.DataEngine.GetDiff(System.String,System.String)">
            <summary>
            Gets the difference.
            </summary>
            <param name="title">The title.</param>
            <param name="readme">The readme.</param>
            <returns>The different information</returns>
        </member>
        <member name="M:Sitecore.Update.Data.DataEngine.ProcessCommands(System.Collections.Generic.List{Sitecore.Update.Interfaces.ICommand}@)">
            <summary>
            Processes the commands.
            </summary>
            <param name="result">The result list of commands.</param>
        </member>
        <member name="M:Sitecore.Update.Data.DataEngine.GenerateDiff">
            <summary>
            Generates the difference.
            </summary>
            <returns>The difference commands.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.DataEngine.Compare(Sitecore.Update.Interfaces.IDataItem,Sitecore.Update.Interfaces.IDataItem)">
            <summary>
            Compares the specified source item.
            </summary>
            <param name="sourceItem">The source item.</param>
            <param name="targetItem">The target item.</param>
            <returns>The comparison result (-1, 0 or 1)</returns>
            <exception cref="T:System.Exception">Incorrect behaviour arised</exception>
        </member>
        <member name="M:Sitecore.Update.Data.DataEngine.DoFilterCommands(System.Collections.Generic.List{Sitecore.Update.Interfaces.ICommand})">
            <summary>
            Filters the commands.
            </summary>
            <param name="result">The list of commands to be filtered.</param>
            <returns>
            The <see cref="!:List&lt;Sitecore.Update.Interfaces.ICommand&gt;"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Data.DataEngine.DoGenerateDiff(Sitecore.Update.Interfaces.IDataIterator,Sitecore.Update.Interfaces.IDataIterator)">
            <summary>
            Generates the difference.
            </summary>
            <param name="sourceIterator">The source iterator.</param>
            <param name="targetIterator">The target iterator.</param>
            <returns>
            The <see cref="!:IList&lt;Sitecore.Update.Interfaces.ICommand&gt;"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Data.DataEngine.DumpConfiguration">
            <summary>
            Dumps the configuration.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.DataEngine.DumpDatamanager(Sitecore.Update.Data.DataManager)">
            <summary>
            Dumps the datamanager.
            </summary>
            <param name="manager">The manager.</param>
        </member>
        <member name="M:Sitecore.Update.Data.DataEngine.GenerateCommands(Sitecore.Update.Interfaces.IDataItem,Sitecore.Update.Interfaces.IDataItem)">
            <summary>
            Generates the commands.
            </summary>
            <param name="sourceItem">The source item.</param>
            <param name="targetItem">The target item.</param>
            <returns>The list of commands.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.DataEngine.GenerateContentDiff">
            <summary>
            Generates the content diff.
            </summary>
            <returns>The list of content different commands.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.DataEngine.GenerateFileDiff">
            <summary>
            Generates the file difference.
            </summary>
            <returns>The list of difference commands.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.DataEngine.DoOptimizeCommands(System.Collections.Generic.List{Sitecore.Update.Interfaces.ICommand})">
            <summary>
            Optimizes the commands.
            </summary>
            <param name="commands">The commands.</param>
        </member>
        <member name="M:Sitecore.Update.Data.DataEngine.ProcessModifiedItems(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Sitecore.Update.Interfaces.ICommand}},System.Collections.Generic.List{Sitecore.Update.Interfaces.ICommand})">
            <summary>
            Processes the modified items (renamed or later moved).
            </summary>
            <param name="commandsDictionary">The commands dictionary.</param>
            <param name="commands">The commands.</param>
        </member>
        <member name="M:Sitecore.Update.Data.DataEngine.ReorganizeCommands(System.Collections.Generic.IList{Sitecore.Update.Interfaces.ICommand})">
            <summary>
            Reorganizes the commands.
            </summary>
            <param name="commands">The commands.</param>
            <returns>The reorganized commands.</returns>
        </member>
        <member name="T:Sitecore.Update.Data.Items.ArchiveFileDataItem">
            <summary>
            The items that represents the Archive file
            </summary>
            <seealso cref="T:Sitecore.Update.Data.Items.FileSystemDataItem" />
        </member>
        <member name="M:Sitecore.Update.Data.Items.ArchiveFileDataItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Items.ArchiveFileDataItem"/> class.
            </summary>
            <param name="rootPath">The root path.</param>
            <param name="relatedPath">The related path.</param>
            <param name="name">The file name.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Items.ArchiveFileDataItem.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Items.ArchiveFileDataItem"/> class.
            </summary>
            <param name="rootPath">The root path.</param>
            <param name="relatedPath">The related path.</param>
            <param name="name">The file name.</param>
            <param name="hashCode">The file hash code.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Items.ArchiveFileDataItem.CompareArchives(System.IO.Stream,System.IO.Stream)">
            <summary>
            Compares the archives.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Update.Data.Items.BreakingChangesFileDataItem">
            <summary>
            Represents the breaking changes report file data item.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.Items.BreakingChangesFileDataItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Items.BreakingChangesFileDataItem"/> class.
            </summary>
            <param name="rootPath">The root path.</param>
            <param name="relatedPath">The related path.</param>
            <param name="name">The file name.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Items.BreakingChangesFileDataItem.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Items.BreakingChangesFileDataItem"/> class.
            </summary>
            <param name="rootPath">The root path.</param>
            <param name="relatedPath">The related path.</param>
            <param name="name">The file name.</param>
            <param name="hashCode">The file hash code.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Items.BreakingChangesFileDataItem.GenerateAddCommand">
            <summary>
            Generates the add command.
            </summary>
            <returns>The list of commands to apply to get the Add file operation.</returns>
        </member>
        <member name="T:Sitecore.Update.Data.Items.ContentDataItem">
            <summary>
            The content data item.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Items.ContentDataItem.item">
            <summary>
            The synk item.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.Items.ContentDataItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Items.ContentDataItem"/> class.
            </summary>
            <param name="rootPath">The root path.</param>
            <param name="relatedPath">The related path.</param>
            <param name="name">The item name.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Items.ContentDataItem.#ctor(System.String,System.String,System.String,System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Items.ContentDataItem"/> class.
            </summary>
            <param name="rootPath">The root path.</param>
            <param name="relatedPath">The related path.</param>
            <param name="name">The item name.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Items.ContentDataItem.#ctor(System.String,System.String,System.String,Sitecore.Data.Serialization.ObjectModel.SyncItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Items.ContentDataItem"/> class.
            </summary>
            <param name="rootPath">The root path.</param>
            <param name="relatedPath">The related path.</param>
            <param name="name">The data item name.</param>
            <param name="syncItem">The inner item.</param>
        </member>
        <member name="P:Sitecore.Update.Data.Items.ContentDataItem.ItemID">
            <summary>
            Gets the item ID.
            </summary>
            <value>The item ID.</value>
        </member>
        <member name="P:Sitecore.Update.Data.Items.ContentDataItem.TemplateID">
            <summary>
            Gets the item template identifier.
            </summary>
            <value>
            The template identifier.
            </value>
        </member>
        <member name="P:Sitecore.Update.Data.Items.ContentDataItem.TemplateName">
            <summary>
            Gets the name of the template.
            </summary>
            <value>
            The name of the template.
            </value>
        </member>
        <member name="P:Sitecore.Update.Data.Items.ContentDataItem.Path">
            <summary>
            Gets the path.
            </summary>
            <value>The item path.</value>
        </member>
        <member name="P:Sitecore.Update.Data.Items.ContentDataItem.DatabaseName">
            <summary>
            Gets the name of the database.
            </summary>
            <value>The name of the database.</value>
        </member>
        <member name="P:Sitecore.Update.Data.Items.ContentDataItem.ParentID">
            <summary>
            Gets the parent ID.
            </summary>
            <value>The parent ID.</value>
        </member>
        <member name="P:Sitecore.Update.Data.Items.ContentDataItem.Item">
            <summary>
            Gets the item.
            </summary>
            <value>The data item.</value>
        </member>
        <member name="P:Sitecore.Update.Data.Items.ContentDataItem.IsDirectory">
            <summary>
            Gets a value indicating whether this instance is directory.
            </summary>
            <value>
              <c>true</c> if this instance is directory; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.Update.Data.Items.ContentDataItem.GenerateAddCommand">
            <summary>
            Generates the add command.
            </summary>
            <returns>
            The List of comamnds to implement Add data item operation.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.ContentDataItem.GenerateDeleteCommand">
            <summary>
            Generates the delete command.
            </summary>
            <returns>
            The List of comamnds to implement Delete data item operation.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.ContentDataItem.GenerateUpdateCommand(Sitecore.Update.Interfaces.IDataItem)">
            <summary>
            Generates the update command.
            </summary>
            <param name="dataItem">The data item.</param>
            <returns>
            The List of comamnds to implement Change data item operation.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.ContentDataItem.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these meanings:
            Value
            Meaning
            Less than zero
            This instance is less than <paramref name="obj"/>.
            Zero
            This instance is equal to <paramref name="obj"/>.
            Greater than zero
            This instance is greater than <paramref name="obj"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
              <paramref name="obj"/> is not the same type as this instance.
            </exception>
        </member>
        <member name="M:Sitecore.Update.Data.Items.ContentDataItem.GetItem">
            <summary>
            Gets the item.
            </summary>
            <returns>The data item.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.ContentDataItem.CompareStrings(System.String,System.String)">
            <summary>
            Compares the strings.
            </summary>
            <param name="string1">The string1.</param>
            <param name="string2">The string2.</param>
            <returns>The comparisot result (-1, 0 or 1).</returns>
        </member>
        <member name="T:Sitecore.Update.Data.Items.DataItem">
            <summary>
            The base class for data item.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Items.DataItem.rootPath">
            <summary>
            The data item root path.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Items.DataItem.relatedPath">
            <summary>
            The data item related path.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Items.DataItem.name">
            <summary>
            The data item name.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.Items.DataItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Items.DataItem"/> class.
            </summary>
            <param name="rootPath">The root path.</param>
            <param name="relatedPath">The related path.</param>
            <param name="name">The item name.</param>
        </member>
        <member name="P:Sitecore.Update.Data.Items.DataItem.RelatedPath">
            <summary>
            Gets the related path.
            </summary>
            <value>The related path.</value>
        </member>
        <member name="P:Sitecore.Update.Data.Items.DataItem.RelatedFolderPath">
            <summary>
            Gets the related folder path.
            </summary>
            <value>The related folder path.</value>
        </member>
        <member name="P:Sitecore.Update.Data.Items.DataItem.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The data item name.</value>
        </member>
        <member name="P:Sitecore.Update.Data.Items.DataItem.RootPath">
            <summary>
            Gets the root path.
            </summary>
            <value>The root path.</value>
        </member>
        <member name="P:Sitecore.Update.Data.Items.DataItem.ItemPath">
            <summary>
            Gets the item path.
            </summary>
            <value>The item path.</value>
        </member>
        <member name="P:Sitecore.Update.Data.Items.DataItem.IsDirectory">
            <summary>
            Gets a value indicating whether this instance is directory.
            </summary>
            <value>
              <c>true</c> if this instance is directory; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.Update.Data.Items.DataItem.GenerateDiff(Sitecore.Update.Interfaces.IDataItem,Sitecore.Update.Interfaces.IDataItem,System.Int32)">
            <summary>
            Generates the difference.
            </summary>
            <param name="sourceItem">The source item.</param>
            <param name="targetItem">The target item.</param>
            <param name="comparisonResult">The comparison result.</param>
            <returns>The list of commands to be applied to the source to get the target.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.DataItem.GenerateAddCommand">
            <summary>
            Generates the add command.
            </summary>
            <returns>
            The List of comamnds to implement Add data item operation.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.DataItem.GenerateDeleteCommand">
            <summary>
            Generates the delete command.
            </summary>
            <returns>
            The List of comamnds to implement Delete data item operation.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.DataItem.GenerateUpdateCommand(Sitecore.Update.Interfaces.IDataItem)">
            <summary>
            Generates the update command.
            </summary>
            <param name="dataItem">The data item.</param>
            <returns>
            The List of comamnds to implement Change data item operation.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.DataItem.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these meanings:
            Value
            Meaning
            Less than zero
            This instance is less than <paramref name="obj"/>.
            Zero
            This instance is equal to <paramref name="obj"/>.
            Greater than zero
            This instance is greater than <paramref name="obj"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
              <paramref name="obj"/> is not the same type as this instance.
            </exception>
        </member>
        <member name="M:Sitecore.Update.Data.Items.DataItem.CompareStrings(System.String,System.String)">
            <summary>
            Compares the strings.
            </summary>
            <param name="string1">The string1.</param>
            <param name="string2">The string2.</param>
            <returns>The comparisot result (-1, 0 or 1).</returns>
        </member>
        <member name="T:Sitecore.Update.Data.Items.FileSystemDataItem">
            <summary>
            Represents the file data item.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Items.FileSystemDataItem.hashCode">
            <summary>
            Data item hash code
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.Items.FileSystemDataItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Items.FileSystemDataItem"/> class.
            </summary>
            <param name="rootPath">The root path.</param>
            <param name="relatedPath">The related path.</param>
            <param name="name">The file name.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Items.FileSystemDataItem.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Items.FileSystemDataItem"/> class.
            </summary>
            <param name="rootPath">The root path.</param>
            <param name="relatedPath">The related path.</param>
            <param name="name">The file name.</param>
            <param name="hashCode">The file hash code.</param>
        </member>
        <member name="P:Sitecore.Update.Data.Items.FileSystemDataItem.HashCode">
            <summary>
            Gets the hash code.
            </summary>
            <value>The hash code.</value>
        </member>
        <member name="P:Sitecore.Update.Data.Items.FileSystemDataItem.IsDirectory">
            <summary>
            Gets a value indicating whether this instance is directory.
            </summary>
            <value>
              <c>true</c> if this instance is directory; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.Update.Data.Items.FileSystemDataItem.GenerateAddCommand">
            <summary>
            Generates the add command.
            </summary>
            <returns>The list of commands to apply to get the Add file operation.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.FileSystemDataItem.GenerateDeleteCommand">
            <summary>
            Generates the delete command.
            </summary>
            <returns>The list of commands to apply to get the Delete file operation.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.FileSystemDataItem.GenerateUpdateCommand(Sitecore.Update.Interfaces.IDataItem)">
            <summary>
            Generates the update command.
            </summary>
            <param name="dataItem">The data item.</param>
            <returns>The list of commands to apply to get the Update file operation.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.FileSystemDataItem.CompareStrings(System.String,System.String)">
            <summary>
            Compares the strings.
            </summary>
            <param name="string1">The string1.</param>
            <param name="string2">The string2.</param>
            <returns>The comparison result (-1, 0 or 1).</returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.FileSystemDataItem.CompareFiles(Sitecore.Update.Data.Items.FileSystemDataItem,Sitecore.Update.Data.Items.FileSystemDataItem)">
            <summary>
            Compares the files.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <returns>Returns <c>true</c> if files have he same paths or content.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.FileSystemDataItem.GetFileHashCode">
            <summary>
            Gets the file hash code.
            </summary>
            <returns>The file hash code.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.FileSystemDataItem.GetStream">
            <summary>
            Gets the file stream.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Update.Data.Items.FolderDataItem">
            <summary>
            The Folder data item.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.Items.FolderDataItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Items.FolderDataItem"/> class.
            </summary>
            <param name="rootPath">The root path.</param>
            <param name="relatedPath">The related path.</param>
            <param name="name">The folder name.</param>
        </member>
        <member name="P:Sitecore.Update.Data.Items.FolderDataItem.IsDirectory">
            <summary>
            Gets a value indicating whether this data item is directory.
            </summary>
            <value>
              <c>true</c> if this current item is directory; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.Update.Data.Items.FolderDataItem.GenerateAddCommand">
            <summary>
            Generates the add command.
            </summary>
            <returns>The list of generated commands.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.FolderDataItem.GenerateDeleteCommand">
            <summary>
            Generates the delete command.
            </summary>
            <returns>The list of generated commands.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.FolderDataItem.GenerateUpdateCommand(Sitecore.Update.Interfaces.IDataItem)">
            <summary>
            Generates the update command.
            </summary>
            <param name="dataItem">The data item.</param>
            <returns>The list of generated commands.</returns>
        </member>
        <member name="T:Sitecore.Update.Data.Items.SnapShotArchiveFileSystemDataItem">
            <summary>
            The DataItem that represents archive entry inside a snapshot.
            </summary>
            <seealso cref="T:Sitecore.Update.Data.Items.ArchiveFileDataItem" />
        </member>
        <member name="P:Sitecore.Update.Data.Items.SnapShotArchiveFileSystemDataItem.Stream">
            <summary>
            Gets or sets the stream.
            </summary>
            <value>
            The stream.
            </value>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShotArchiveFileSystemDataItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Items.SnapShotArchiveFileSystemDataItem"/> class.
            </summary>
            <param name="rootPath">The root path.</param>
            <param name="relatedPath">The related path.</param>
            <param name="name">The file name.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShotArchiveFileSystemDataItem.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Items.SnapShotArchiveFileSystemDataItem"/> class.
            </summary>
            <param name="rootPath">The root path.</param>
            <param name="relatedPath">The related path.</param>
            <param name="name">The file name.</param>
            <param name="hashCode">The file hash code.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShotArchiveFileSystemDataItem.#ctor(Sitecore.Update.Data.Items.ArchiveFileDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Items.SnapShotFileSystemDataItem"/> class.
            </summary>
            <param name="item">The data item.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShotArchiveFileSystemDataItem.#ctor(System.String,System.String,System.String,System.String,System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Items.SnapShotFileSystemDataItem"/> class.
            </summary>
            <param name="rootPath">The root path.</param>
            <param name="relatedPath">The related path.</param>
            <param name="name">The name.</param>
            <param name="hashCode">The hash code.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShotArchiveFileSystemDataItem.GetStream">
            <summary>
            Gets the file stream.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Update.Data.Items.SnapShotFileSystemDataItem">
            <summary>
            Snap Shot Data item.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Items.SnapShotFileSystemDataItem.stream">
            <summary>
            The stream
            </summary>
        </member>
        <member name="P:Sitecore.Update.Data.Items.SnapShotFileSystemDataItem.Stream">
            <summary>
            Gets or sets the stream.
            </summary>
            <value>
            The stream.
            </value>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShotFileSystemDataItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Items.SnapShotFileSystemDataItem"/> class.
            </summary>
            <param name="rootPath">The root path.</param>
            <param name="relatedPath">The related path.</param>
            <param name="name">The data item name.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShotFileSystemDataItem.#ctor(Sitecore.Update.Data.Items.FileSystemDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Items.SnapShotFileSystemDataItem"/> class.
            </summary>
            <param name="item">The data item.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShotFileSystemDataItem.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Items.SnapShotFileSystemDataItem"/> class.
            </summary>
            <param name="rootPath">The root path.</param>
            <param name="relatedPath">The related path.</param>
            <param name="name">The data item name.</param>
            <param name="hashCode">The hash code.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShotFileSystemDataItem.#ctor(System.String,System.String,System.String,System.String,System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Items.SnapShotFileSystemDataItem"/> class.
            </summary>
            <param name="rootPath">The root path.</param>
            <param name="relatedPath">The related path.</param>
            <param name="name">The name.</param>
            <param name="hashCode">The hash code.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShotFileSystemDataItem.GetStream">
            <summary>
            Gets the file stream.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShotFileSystemDataItem.GenerateDeleteCommand">
            <summary>
            Generates the delete command.
            </summary>
            <returns>The list of commands to apply to get the Delete file operation.</returns>
        </member>
        <member name="T:Sitecore.Update.Data.Items.SnapShot.ContentDataItemConverter">
            <summary>
            The content data item converter.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.ContentDataItemConverter.CanConvert(Sitecore.Update.Interfaces.IDataItem)">
            <summary>
            Determines whether this instance can convert the specified item to package entry.
            </summary>
            <param name="item">The data item.</param>
            <returns>
              <c>true</c> if this instance can convert the specified item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.ContentDataItemConverter.Convert(Sitecore.Update.Interfaces.IDataItem)">
            <summary>
            Converts the specified item to package entry.
            </summary>
            <param name="item">The data item.</param>
            <returns>The package entry.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.ContentDataItemConverter.CanConvert(Sitecore.Install.Framework.PackageEntry)">
            <summary>
            Determines whether this instance can convert the specified entry to data item.
            </summary>
            <param name="entry">The entry.</param>
            <returns>
              <c>true</c> if this instance can convert the specified entry; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.ContentDataItemConverter.Convert(Sitecore.Install.Framework.PackageEntry,System.String)">
            <summary>
            Converts the specified entry to the data item.
            </summary>
            <param name="entry">The package entry.</param>
            <param name="snapShotPath">The snap shot path.</param>
            <returns>The data item.</returns>
        </member>
        <member name="T:Sitecore.Update.Data.Items.SnapShot.ContentDataItemConverter.DataItemEntryData">
            <summary>
            The data item entry data.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Items.SnapShot.ContentDataItemConverter.DataItemEntryData.Prefix">
            <summary>
            Entry data prefix.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Items.SnapShot.ContentDataItemConverter.DataItemEntryData.info">
            <summary>
            The file information.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Items.SnapShot.ContentDataItemConverter.DataItemEntryData.path">
            <summary>
            The file path.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.ContentDataItemConverter.DataItemEntryData.#ctor(System.String,System.IO.FileInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Items.SnapShot.ContentDataItemConverter.DataItemEntryData"/> class.
            </summary>
            <param name="path">The file path.</param>
            <param name="info">The file information.</param>
        </member>
        <member name="P:Sitecore.Update.Data.Items.SnapShot.ContentDataItemConverter.DataItemEntryData.Key">
            <summary>
            Gets the file key.
            </summary>
            <value>The file key.</value>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.ContentDataItemConverter.DataItemEntryData.GetKey(System.String)">
            <summary>
            Gets the file key.
            </summary>
            <param name="path">The file path.</param>
            <returns>The file key.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.ContentDataItemConverter.DataItemEntryData.CanOwnEntry(System.String)">
            <summary>
            Determines whether this instance contains the file with the specified key.
            </summary>
            <param name="key">The file key.</param>
            <returns>
              <c>true</c> if this instance contains the file with the specified key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.ContentDataItemConverter.DataItemEntryData.GetStream">
            <summary>
            Gets the file stream.
            </summary>
            <returns>The file stream.</returns>
        </member>
        <member name="T:Sitecore.Update.Data.Items.SnapShot.FileSystemDataItemConverter">
            <summary>
            File system data convertor.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.FileSystemDataItemConverter.CanConvert(Sitecore.Update.Interfaces.IDataItem)">
            <summary>
            Determines whether this instance can convert the specified item to package entry.
            </summary>
            <param name="item">The data item.</param>
            <returns>
              <c>true</c> if this instance can convert the specified item; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.Exception">Incorrect data item</exception>s
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.FileSystemDataItemConverter.Convert(Sitecore.Update.Interfaces.IDataItem)">
            <summary>
            Converts the specified item to package entry.
            </summary>
            <param name="item">The data item.</param>
            <returns>The package entry.</returns>
            <exception cref="T:System.Exception">Incorrect data item</exception>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.FileSystemDataItemConverter.CanConvert(Sitecore.Install.Framework.PackageEntry)">
            <summary>
            Determines whether this instance can convert the specified entry to data item.
            </summary>
            <param name="entry">The entry.</param>
            <returns>
              <c>true</c> if this instance can convert the specified entry; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.FileSystemDataItemConverter.Convert(Sitecore.Install.Framework.PackageEntry,System.String)">
            <summary>
            Converts the specified entry to the data item.
            </summary>
            <param name="entry">The package entry.</param>
            <param name="snapShotPath">The snap shot path.</param>
            <returns>The data item.</returns>
        </member>
        <member name="T:Sitecore.Update.Data.Items.SnapShot.FileSystemDataItemConverter.SnapShotFileEntry">
            <summary>
            The snapshot file entry.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Items.SnapShot.FileSystemDataItemConverter.SnapShotFileEntry.Prefix">
            <summary>
            The entry prefix.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Items.SnapShot.FileSystemDataItemConverter.SnapShotFileEntry.item">
            <summary>
            The snap shot data item.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.FileSystemDataItemConverter.SnapShotFileEntry.#ctor(Sitecore.Update.Data.Items.FileSystemDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Items.SnapShot.FileSystemDataItemConverter.SnapShotFileEntry"/> class.
            </summary>
            <param name="item">The data item.</param>
        </member>
        <member name="P:Sitecore.Update.Data.Items.SnapShot.FileSystemDataItemConverter.SnapShotFileEntry.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The entry key.</value>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.FileSystemDataItemConverter.SnapShotFileEntry.GetKey(System.String)">
            <summary>
            Gets the key.
            </summary>
            <param name="path">The entry path.</param>
            <returns>The entry key.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.FileSystemDataItemConverter.SnapShotFileEntry.CanOwnEntry(System.String)">
            <summary>
            Determines whether this instance contains the specified key.
            </summary>
            <param name="key">The entry key.</param>
            <returns>
              <c>true</c> if this instance contain the specified key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.FileSystemDataItemConverter.SnapShotFileEntry.GetStream">
            <summary>
            Gets the stream holder.
            </summary>
            <returns>The stream holder.</returns>
        </member>
        <member name="T:Sitecore.Update.Data.Items.SnapShot.FolderDataItemConverter">
            <summary>
            Converter of data items to folders.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Data.Items.SnapShot.FolderDataItemConverter.SnapShotFolderEntry">
            <summary>
            Snapshot folder entry.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Items.SnapShot.FolderDataItemConverter.SnapShotFolderEntry.Prefix">
            <summary>
            Entry prefix.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Data.Items.SnapShot.FolderDataItemConverter.SnapShotFolderEntry.path">
            <summary>
            Folder path.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.FolderDataItemConverter.SnapShotFolderEntry.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Items.SnapShot.FolderDataItemConverter.SnapShotFolderEntry"/> class.
            </summary>
            <param name="path">The folder path.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.FolderDataItemConverter.SnapShotFolderEntry.GetStream">
            <summary>
            Gets the stream holder.
            </summary>
            <returns>The stream holder.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.FolderDataItemConverter.SnapShotFolderEntry.GetKey(System.String)">
            <summary>
            Gets the key.
            </summary>
            <param name="path">The folder path.</param>
            <returns>The entry key.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.FolderDataItemConverter.SnapShotFolderEntry.CanOwnEntry(System.String)">
            <summary>
            Determines whether this instance [can own entry] the specified key.
            </summary>
            <param name="key">The entity key.</param>
            <returns>
            	<c>true</c> if this instance contain the entry with specified key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Sitecore.Update.Data.Items.SnapShot.FolderDataItemConverter.SnapShotFolderEntry.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The entity key.</value>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.FolderDataItemConverter.CanConvert(Sitecore.Update.Interfaces.IDataItem)">
            <summary>
            Determines whether this instance can convert the specified item to package entry.
            </summary>
            <param name="item">The data item.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.FolderDataItemConverter.Convert(Sitecore.Update.Interfaces.IDataItem)">
            <summary>
            Converts the specified item to package entry.
            </summary>
            <param name="item">The data item.</param>
            <returns>The package entry.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.FolderDataItemConverter.CanConvert(Sitecore.Install.Framework.PackageEntry)">
            <summary>
            Determines whether this instance can convert the specified entry to data item.
            </summary>
            <param name="entry">The entry.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified entry; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.FolderDataItemConverter.Convert(Sitecore.Install.Framework.PackageEntry,System.String)">
            <summary>
            Converts the specified entry to the data item.
            </summary>
            <param name="entry">The package entry.</param>
            <param name="snapShotPath">The snap shot path.</param>
            <returns>The data item.</returns>
        </member>
        <member name="T:Sitecore.Update.Data.Items.SnapShot.ISnapShotConverter">
            <summary>
            Interface for stapshot to package entry convertors.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.ISnapShotConverter.CanConvert(Sitecore.Update.Interfaces.IDataItem)">
            <summary>
            Determines whether this instance can convert the specified item to package entry.
            </summary>
            <param name="item">The data item.</param>
            <returns>
              <c>true</c> if this instance can convert the specified item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.ISnapShotConverter.CanConvert(Sitecore.Install.Framework.PackageEntry)">
            <summary>
            Determines whether this instance can convert the specified entry to data item.
            </summary>
            <param name="entry">The entry.</param>
            <returns>
              <c>true</c> if this instance can convert the specified entry; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.ISnapShotConverter.Convert(Sitecore.Update.Interfaces.IDataItem)">
            <summary>
            Converts the specified item to package entry.
            </summary>
            <param name="item">The data item.</param>
            <returns>The package entry.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.SnapShot.ISnapShotConverter.Convert(Sitecore.Install.Framework.PackageEntry,System.String)">
            <summary>
            Converts the specified entry to the data item.
            </summary>
            <param name="entry">The package entry.</param>
            <param name="snapShotPath">The snap shot path.</param>
            <returns>The data item.</returns>
        </member>
        <member name="T:Sitecore.Update.Data.Items.XmlFileDataItem">
            <summary>
            Represents the XML File Data Item.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Data.Items.XmlFileDataItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Items.XmlFileDataItem"/> class.
            </summary>
            <param name="rootPath">The root path.</param>
            <param name="relatedPath">The related path.</param>
            <param name="name">The file name.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Items.XmlFileDataItem.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Data.Items.XmlFileDataItem"/> class.
            </summary>
            <param name="rootPath">The root path.</param>
            <param name="relatedPath">The related path.</param>
            <param name="name">The file name.</param>
            <param name="hashCode">The file hash code.</param>
        </member>
        <member name="M:Sitecore.Update.Data.Items.XmlFileDataItem.GenerateDeleteCommand">
            <summary>
            Generates the delete command.
            </summary>
            <returns>The list of commands to apply to get the Delete file operation.</returns>
        </member>
        <member name="M:Sitecore.Update.Data.Items.XmlFileDataItem.GenerateUpdateCommand(Sitecore.Update.Interfaces.IDataItem)">
            <summary>
            Generates the update command.
            </summary>
            <param name="dataItem">The data item.</param>
            <returns>
            The list of commands to apply to get the Update file operation.
            </returns>
        </member>
        <member name="T:Sitecore.Update.DiffInfo">
            <summary>
            Difference information.
            </summary>
        </member>
        <member name="F:Sitecore.Update.DiffInfo.disposed">
            <summary>
            The disposed flag.
            </summary>
        </member>
        <member name="F:Sitecore.Update.DiffInfo.FilesRoot">
            <summary>
            Name of the folder for the files.
            </summary>
        </member>
        <member name="F:Sitecore.Update.DiffInfo.OriginalFilesRoot">
            <summary>
            The original files root
            </summary>
        </member>
        <member name="F:Sitecore.Update.DiffInfo.OutputFileName">
            <summary>
            The output name of the XML file with difference.
            </summary>
        </member>
        <member name="F:Sitecore.Update.DiffInfo.author">
            <summary>
            The package author.
            </summary>
        </member>
        <member name="F:Sitecore.Update.DiffInfo.buildDate">
            <summary>
            The date of the build.
            </summary>
        </member>
        <member name="F:Sitecore.Update.DiffInfo.commands">
            <summary>
            The difference commands.
            </summary>
        </member>
        <member name="F:Sitecore.Update.DiffInfo.installMode">
            <summary>
            The installation mode.
            </summary>
        </member>
        <member name="F:Sitecore.Update.DiffInfo.postStep">
            <summary>
            The post installation step.
            </summary>
        </member>
        <member name="F:Sitecore.Update.DiffInfo.publisher">
            <summary>
            The package publisher.
            </summary>
        </member>
        <member name="F:Sitecore.Update.DiffInfo.readme">
            <summary>
            The package read.me file.
            </summary>
        </member>
        <member name="F:Sitecore.Update.DiffInfo.tag">
            <summary>
            The difference tag.
            </summary>
        </member>
        <member name="F:Sitecore.Update.DiffInfo.title">
            <summary>
            The package title.
            </summary>
        </member>
        <member name="F:Sitecore.Update.DiffInfo.version">
            <summary>
            The package version.
            </summary>
        </member>
        <member name="M:Sitecore.Update.DiffInfo.#ctor(System.Collections.Generic.IList{Sitecore.Update.Interfaces.ICommand})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.DiffInfo"/> class.
            </summary>
            <param name="commands">The commands.</param>
        </member>
        <member name="M:Sitecore.Update.DiffInfo.#ctor(System.Collections.Generic.IList{Sitecore.Update.Interfaces.ICommand},System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.DiffInfo"/> class.
            </summary>
            <param name="commands">The commands.</param>
            <param name="title">The package title.</param>
            <param name="readme">The package readme.</param>
            <param name="tag">The difference tag.</param>
        </member>
        <member name="M:Sitecore.Update.DiffInfo.#ctor(System.Collections.Generic.IList{Sitecore.Update.Interfaces.ICommand},System.String,System.String,System.DateTime,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.DiffInfo"/> class.
            </summary>
            <param name="commands">The commands.</param>
            <param name="title">The package title.</param>
            <param name="readme">The package readme.</param>
            <param name="buildDate">The build date.</param>
            <param name="tag">The difference tag.</param>
        </member>
        <member name="M:Sitecore.Update.DiffInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.DiffInfo"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Update.DiffInfo.Author">
            <summary>
            Gets or sets the author.
            </summary>
            <value>The author.</value>
        </member>
        <member name="P:Sitecore.Update.DiffInfo.BuildDate">
            <summary>
            Gets the build date.
            </summary>
            <value>The build date.</value>
        </member>
        <member name="P:Sitecore.Update.DiffInfo.Commands">
            <summary>
            Gets the commands.
            </summary>
            <value>The commands.</value>
        </member>
        <member name="P:Sitecore.Update.DiffInfo.InstallMode">
            <summary>
            Gets or sets the install mode.
            </summary>
            <value>The install mode.</value>
        </member>
        <member name="P:Sitecore.Update.DiffInfo.PostStep">
            <summary>
            Gets or sets the post step.
            </summary>
            <value>The post step.</value>
        </member>
        <member name="P:Sitecore.Update.DiffInfo.Publisher">
            <summary>
            Gets or sets the publisher.
            </summary>
            <value>The publisher.</value>
        </member>
        <member name="P:Sitecore.Update.DiffInfo.Readme">
            <summary>
            Gets or sets the readme.
            </summary>
            <value>The readme.</value>
        </member>
        <member name="P:Sitecore.Update.DiffInfo.Tag">
            <summary>
            Gets the tag.
            </summary>
            <value>The difference tag.</value>
        </member>
        <member name="P:Sitecore.Update.DiffInfo.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Sitecore.Update.DiffInfo.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="M:Sitecore.Update.DiffInfo.LoadDiff(System.String)">
            <summary>
            Loads the difference XML file.
            </summary>
            <param name="folderPath">The folder path.</param>
            <returns>The difference object.</returns>
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:Sitecore.Update.DiffInfo.LoadDiff(System.IO.Stream)">
            <summary>
            Loads the difference from stream.
            </summary>
            <param name="stream">The stream.</param>
            <returns>The difference object.</returns>
        </member>
        <member name="M:Sitecore.Update.DiffInfo.ClearInstallMode">
            <summary>
            Clears the install mode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.DiffInfo.Serialize(System.String)">
            <summary>
            Serializes difference to the specified folder path.
            </summary>
            <param name="folderPath">The folder path.</param>
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:Sitecore.Update.DiffInfo.Serialize(System.IO.Stream)">
            <summary>
            Serializes difference tothe specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Sitecore.Update.DiffInfo.SetInstallMode(Sitecore.Update.Utils.InstallMode)">
            <summary>
            Sets the install mode.
            </summary>
            <param name="installMode">The install mode.</param>
        </member>
        <member name="M:Sitecore.Update.DiffInfo.ReadElement(System.String,System.Xml.XmlReader)">
            <summary>
            Reads the element.
            </summary>
            <param name="elemName">Name of the elem.</param>
            <param name="reader">The reader.</param>
            <returns>The element value.</returns>
        </member>
        <member name="M:Sitecore.Update.DiffInfo.Serialize(System.IO.Stream,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.DiffInfo.LoadDiff(System.IO.Stream,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the difference.
            </summary>
            <param name="stream">The stream.</param>
            <param name="context">The context.</param>
            <returns>The difference object.</returns>
        </member>
        <member name="M:Sitecore.Update.DiffInfo.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sitecore.Update.DiffInfo.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Sitecore.Update.DiffInfo.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Sitecore.Update.DiffInfo"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Update.Engine.AggregatedPackage.GenerateAggregatedPackage(System.String[],System.String)">
            <exception cref="T:System.IO.InvalidDataException">Aggregated package must have at least one update package.</exception>
        </member>
        <member name="M:Sitecore.Update.Update.Engine.AggregatedPackage.IsAggregatedPackage(System.String,System.Boolean)">
            <exception cref="T:System.Exception"><c>System.Exception</c></exception>
        </member>
        <member name="M:Sitecore.Update.Update.Engine.AggregatedPackage.GetAggregatedPackageEntries(System.String)">
            <exception cref="T:System.IO.InvalidDataException"></exception>
            <exception cref="T:System.Exception"><c>System.Exception</c></exception>
        </member>
        <member name="M:Sitecore.Update.Update.Engine.AggregatedPackage.ExtractUpatePackage(System.String,Sitecore.Update.Update.Engine.AggregatedUpdatePackageEntryInfo,System.String)">
            <exception cref="T:System.IO.InvalidDataException"></exception>
        </member>
        <member name="M:Sitecore.Update.Update.Engine.AggregatedUpdatePackageEntryInfo.op_Equality(Sitecore.Update.Update.Engine.AggregatedUpdatePackageEntryInfo,Sitecore.Update.Update.Engine.AggregatedUpdatePackageEntryInfo)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="a">a.</param>
            <param name="b">The b.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Update.Engine.AggregatedUpdatePackageEntryInfo.op_Inequality(Sitecore.Update.Update.Engine.AggregatedUpdatePackageEntryInfo,Sitecore.Update.Update.Engine.AggregatedUpdatePackageEntryInfo)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="a">a.</param>
            <param name="b">The b.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="T:Sitecore.Update.Update.Installer.CommandTracker">
            <summary>
            The operations tracker.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Update.Installer.CommandTracker.installedItems">
            <summary>
            The installed items.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Update.Installer.CommandTracker.currentCommand">
            <summary>
            The current command.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Update.Installer.CommandTracker.disposed">
            <summary>
            The disposed flag.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Update.Installer.CommandTracker.Category">
            <summary>
            The category.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Update.Installer.CommandTracker.Category.Unknown">
            <summary>
            The unknown category.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Update.Installer.CommandTracker.Category.Items">
            <summary>
            The items.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Update.Installer.CommandTracker.Category.Files">
            <summary>
            The files.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Update.Installer.CommandTracker.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Update.Installer.CommandTracker.TrackCommand(Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Tracks the command.
            </summary>
            <param name="command">
            The command.
            </param>
        </member>
        <member name="M:Sitecore.Update.Update.Installer.CommandTracker.GetCategory(Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Gets category of the command.
            </summary>
            <param name="command">
            The command.
            </param>
            <returns>
            The <see cref="T:Sitecore.Update.Update.Installer.CommandTracker.Category"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Update.Installer.CommandTracker.FireNewCategoryStarted(Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Fires a corresponding *:starting event.
            </summary>
            <param name="command">
            The command.
            </param>
        </member>
        <member name="M:Sitecore.Update.Update.Installer.CommandTracker.FirePreviousCategoryEnded">
            <summary>
            Fires a corresponding *:ended event.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Update.Installer.CommandTracker.CheckNewCategoryStarted(Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Checks if a new type of commands started being handled.
            </summary>
            <param name="command">
            The command.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Update.Installer.CommandTracker.LogItemCommand(Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Logs item commands in order to pass them to packageinstall:items:ended event.
            </summary>
            <param name="command">
            The command.
            </param>
        </member>
        <member name="T:Sitecore.Update.Update.Installer.Items.Installers.Install.Helpers.AssemblyAnalyzer">
            <summary>
            Helper methods to determine whether loaded assembly into domain is dinamically generated assembly.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Update.Installer.Items.Installers.Install.Helpers.AssemblyAnalyzer.ZeroAssemblyVersion">
            <summary>
            Gets the zero version of <see cref="T:System.Version"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Update.Installer.Items.Installers.Install.Helpers.AssemblyAnalyzer.IsDynamicallyGeneratedAssembly(System.String)">
            <summary>
            Determines whether the specified assembly name matches the pattern of dynamicly generated assemblies.
            </summary>
            <param name="assemblyName"></param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Update.Installer.Items.Installers.Install.Helpers.AssemblyAnalyzer.IsAutoGeneratedAspxTempAssembly(System.String)">
            <summary>
            Determines whether the specified assembly name matches the pattern of dynamicly generated assemblies.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Update.Installer.Items.Installers.Install.Helpers.AssemblyAnalyzer.IsAutoGeneratedCommonTempAssembly(System.String)">
            <summary>
            Determines whether the specified assembly name matches the pattern of dynamicly generated assemblies.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Update.Installer.Items.Installers.Install.Helpers.AssemblyAnalyzer.GetAssemblyLocation(System.String)">
            <summary>
            Get <see cref="T:System.String"/> assembly location by it's name.
            </summary>
            <param name="assemblyName">The assembly name.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Update.Installer.Items.Installers.Install.Helpers.AssemblyAnalyzer.GetAssemblyVersion(System.String)">
            <summary>
            Get <see cref="T:System.Version"/> assembly version by it's name.
            </summary>
            <param name="assemblyName">The assembly name.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Update.Installer.Items.Installers.Install.Helpers.AssemblyAnalyzer.IsAssemblyExistOnFileSystem(System.String)">
            <summary>
            Check is loaded in domain assembly present on filesystem.
            </summary>
            <param name="assemblyLocation">The assembly location.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Update.Update.Installer.Items.Installers.Install.Helpers.LayersConfigurationHelper">
            <summary>
            Helper methods for working with layers and to determine whether Sitecore is in update mode or not.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Update.Installer.Items.Installers.Install.Helpers.LayersConfigurationHelper.UpdateLayerName">
            <summary>
            The name of the update layer.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Update.Installer.Items.Installers.Install.Helpers.LayersConfigurationHelper.UpdateLayerBackupRoot">
            <summary>
            The layers backup root path.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Update.Installer.Items.Installers.Install.Helpers.LayersConfigurationHelper.LayersConfigFile">
            <summary>
            The name of layers configuration file.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Update.Installer.Items.Installers.Install.Helpers.LayersConfigurationHelper.IsSitecoreInUpdateMode">
            <summary>
            Check whether Sitecore is in update mode or not.
            </summary>
            <returns><c>true</c> if Sitecore is in update mode; otherwise <c>false</c></returns>
        </member>
        <member name="M:Sitecore.Update.Update.Installer.Items.Installers.Install.Helpers.LayersConfigurationHelper.IsAllowedInUpdateMode(Sitecore.Configuration.IConfigurationLayer)">
            <summary>
            Determines whether the specified layer is allowed to be enabled in Update mode.
            </summary>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Update.Update.Interfaces.IUpdatePostStep">
            <summary>
            Interface for post installation step of Update package.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Update.Interfaces.IUpdatePostStep.Run(log4net.ILog,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Runs the post step action.
            </summary>
            <param name="logger">The logger.</param>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="T:Sitecore.Update.Update.Utils.ItemEntrySorter">
            <summary>
            Entry sorter
            </summary>
        </member>
        <member name="F:Sitecore.Update.Update.Utils.ItemEntrySorter.Entries">
            <summary>
            The entries.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Update.Utils.ItemEntrySorter.#ctor(Sitecore.Install.Framework.ISource{Sitecore.Install.Framework.PackageEntry})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Update.Utils.ItemEntrySorter"/> class.
            </summary>
            <param name="baseSource">Base Source</param>
        </member>
        <member name="M:Sitecore.Update.Update.Utils.ItemEntrySorter.GetEntryKey(Sitecore.Data.Serialization.ObjectModel.SyncItem)">
            <summary>
            Gets the entry key.
            </summary>
            <param name="item">The item.</param>
            <returns>Returns Entry's key.</returns>
        </member>
        <member name="M:Sitecore.Update.Update.Utils.ItemEntrySorter.GetEntryKey(System.String,System.String)">
            <summary>
            Gets the entry key.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="id">The identifier.</param>
            <returns>Returns Entry's key.</returns>
        </member>
        <member name="M:Sitecore.Update.Update.Utils.ItemEntrySorter.Flush">
            <summary>
            Flushes the sink
            </summary>
        </member>
        <member name="M:Sitecore.Update.Update.Utils.ItemEntrySorter.Put(Sitecore.Install.Framework.PackageEntry)">
            <summary>
            Puts the specified entry.
            </summary>
            <param name="entry">The entry.</param>
        </member>
        <member name="M:Sitecore.Update.Update.Utils.ItemEntrySorter.GetDependencyRanks(System.Collections.Generic.List{Sitecore.Data.Serialization.ObjectModel.SyncItem})">
            <summary>
            Returns dependency ranks for items
            </summary>
            <param name="items">The items</param>
            <returns>Dependency ranks</returns>
        </member>
        <member name="M:Sitecore.Update.Update.Utils.ItemEntrySorter.SetDependencyRanks(System.Collections.Generic.IEnumerable{Sitecore.Install.Framework.PackageEntry})">
            <summary>
             Sorts the entries
            </summary>
            <param name="packageEntries">The entries</param>
        </member>
        <member name="M:Sitecore.Update.Update.Utils.ItemEntrySorter.AssertAddedItemsHaveNoDuplicates(System.Collections.Generic.List{Sitecore.Data.Serialization.ObjectModel.SyncItem})">
            <summary>
            Asserts that added items have no duplicates.
            </summary>
            <param name="items">
            The items.
            </param>
            <exception cref="T:Sitecore.Update.Installer.Exceptions.BrokenPackageException" />
        </member>
        <member name="M:Sitecore.Update.Update.Utils.ItemEntrySorter.UpdatePathRankForBaseTemplateChanges(Sitecore.Update.Commands.ChangeItemCommand)">
            <summary>
            Updates the path rank for base template changes.
            </summary>
            <param name="changeItem">The change item.</param>
        </member>
        <member name="M:Sitecore.Update.Update.Utils.ItemEntrySorter.SetPathRank(System.String,System.Int32,System.Boolean)">
            <summary>
            Sets the path rank.
            </summary>
            <param name="path">The path.</param>
            <param name="rank">The rank.</param>
            <param name="updateAncestors">if set to <c>true</c> all ancestors will be updated.</param>
        </member>
        <member name="M:Sitecore.Update.Update.Utils.ItemEntrySorter.GetPath(System.Int32,System.String[])">
            <summary>
            Gets the item path.
            </summary>
            <param name="position">The position.</param>
            <param name="chunks">The chunks.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Update.Utils.ItemEntrySorter.IsRankedPath(System.String,Sitecore.Update.Installer.Utils.InstallerUtils.Rank[])">
            <summary>
            Determines whether the specified path already has a rank.
            </summary>
            <param name="path">The path.</param>
            <param name="ranks">The ranks.</param>
            <returns><c>true</c> if the specified path already has a rank.</returns>
        </member>
        <member name="T:Sitecore.Update.Update.Utils.SettingSwitcher">
            <summary>
            SettingSwitcher class
            </summary>
        </member>
        <member name="F:Sitecore.Update.Update.Utils.SettingSwitcher.oldKey">
            <summary>
            The Setting key.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Update.Utils.SettingSwitcher.oldValue">
            <summary>
            The Setting value.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Update.Utils.SettingSwitcher.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Update.Utils.SettingSwitcher"/> class.
            </summary>
            <param name="key">The Setting key.</param>
            <param name="value">The Setting value.</param>
        </member>
        <member name="M:Sitecore.Update.Update.Utils.SettingSwitcher.OnDisposed(System.Object,System.EventArgs)">
            <summary>
            Called when disposed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Update.Update.Utils.SettingSwitcher.ChangeSettingValue(System.String,System.String,System.Boolean)">
            <summary>
            Changes the setting value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="savePreviousValue">if set to <c>true</c> previous value is saved.</param>
        </member>
        <member name="T:Sitecore.Update.Update.Utils.VirtualDrive">
            <summary>
              VirtualDrive class
            </summary>
        </member>
        <member name="F:Sitecore.Update.Update.Utils.VirtualDrive.DDD_EXACT_MATCH_ON_REMOVE">
            <summary>If this value is specified along with DDD_REMOVE_DEFINITION, the function DefineDosDevice will use an exact match to determine which mapping to remove. 
            Use this value to ensure that you do not delete something that you did not define.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Update.Utils.VirtualDrive.DDD_RAW_TARGET_PATH">
            <summary>
            Uses the lpTargetPath string as is. Otherwise, it is converted from an MS-DOS path to a path.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Update.Utils.VirtualDrive.DDD_REMOVE_DEFINITION">
            <summary>
            Removes the specified definition for the specified device. To determine which definition to remove, the function walks the list of mappings for the device, looking for a match of lpTargetPath against a prefix of each mapping associated with this device. The first mapping that matches is the one removed, and then the function returns.
            If lpTargetPath is NULL or a pointer to a NULL string, the function will remove the first mapping associated with the device and pop the most recent one pushed. If there is nothing left to pop, the device name will be removed.
            If this value is not specified, the string pointed to by the lpTargetPath parameter will become the new mapping for this device.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Update.Utils.VirtualDrive.DRIVE_FIXED">
            <summary>
            The drive has fixed media; for example, a hard disk drive or flash drive.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Update.Utils.VirtualDrive.DRIVE_NO_ROOT_DIR">
            <summary>
            The root path is invalid; for example, there is no volume mounted at the specified path.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Update.Utils.VirtualDrive.DRIVE_UNKNOWN">
            <summary>
            The drive type cannot be determined.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Update.Utils.VirtualDrive.driveChar">
            <summary>
              Virtual drive letter.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Update.Utils.VirtualDrive.path">
            <summary>
              Path to the folder to be linked
            </summary>
        </member>
        <member name="M:Sitecore.Update.Update.Utils.VirtualDrive.#ctor(System.Char,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Update.Utils.VirtualDrive"/> class.
            </summary>
            <param name="driveChar">Drive letter</param>
            <param name="path">Path to the folder to be linked</param>
        </member>
        <member name="M:Sitecore.Update.Update.Utils.VirtualDrive.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Update.Utils.VirtualDrive"/> class.
            </summary>
            <param name="path">Path to the folder to be linked</param>
        </member>
        <member name="P:Sitecore.Update.Update.Utils.VirtualDrive.Name">
            <summary>
              Drive name
            </summary>  
        </member>
        <member name="M:Sitecore.Update.Update.Utils.VirtualDrive.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Update.Utils.VirtualDrive.DefineDosDevice(System.Int32,System.String,System.String)">
            <summary>
              Defines, redefines, or deletes MS-DOS device names.
            </summary>
            <param name="dwFlags">The controllable aspects of the DefineDosDevice function. This parameter can be one or more of the following values.</param>
            <param name="lpDeviceName">A pointer to an MS-DOS device name string specifying the device the function is defining, redefining, or deleting. 
            The device name string must not have a colon as the last character, unless a drive letter is being defined, redefined, or deleted. For example, drive C would be the string "C:". 
            In no case is a trailing backslash ("\") allowed.</param>
            <param name="lpTargetPath">A pointer to a path string that will implement this device. 
            The string is an MS-DOS path string unless the DDD_RAW_TARGET_PATH flag is specified, in which case this string is a path string.</param>
            <returns>If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero. </returns>
        </member>
        <member name="M:Sitecore.Update.Update.Utils.VirtualDrive.DefineDosDevice(System.Char,System.String,System.Boolean)">
            <summary>
              Defines, redefines, or deletes MS-DOS device names.
            </summary>
            <param name="driveChar">Virtual drive letter.</param>
            <param name="path">Path string that will implement this device.</param>
            <param name="create">If true, device will be created. If false, device will be deleted.</param>
            <returns>If the function succeeds, the return value is true.
            If the function fails, the return value is false.</returns>
        </member>
        <member name="M:Sitecore.Update.Update.Utils.VirtualDrive.GetDriveType(System.String)">
            <summary>
              Determines whether a disk drive is a removable, fixed, CD-ROM, RAM disk, or network drive.
            </summary>
            <param name="lpRootPathName">The root directory for the drive.
            A trailing backslash is required. If this parameter is NULL, the function uses the root of the current directory.</param>
            <returns>The return value specifies the type of drive, which can be one of the following values.</returns>
        </member>
        <member name="T:Sitecore.Update.Engine.PackageGenerator">
            <summary>
            The Update package generator.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Engine.PackageGenerator.ConvertRollbackPackage(System.String,System.String)">
            <summary>
            Converts the rollback package.
            </summary>
            <param name="rollbackPackagePath">The rollback package path.</param>
            <param name="packagePath">The package path.</param>
            <exception cref="T:System.Exception">Rollback package not found.</exception>
        </member>
        <member name="M:Sitecore.Update.Engine.PackageGenerator.GeneratePackage(Sitecore.Update.DiffInfo,System.String)">
            <summary>
            Generates the package.
            </summary>
            <param name="diff">The difference.</param>
            <param name="outputPath">The output path.</param>
        </member>
        <member name="M:Sitecore.Update.Engine.PackageGenerator.GeneratePackage(Sitecore.Update.DiffInfo,System.String,System.String)">
            <summary>
            Generates the package.
            </summary>
            <param name="diff">The difference.</param>
            <param name="licenseFile">The license file.</param>
            <param name="outputPath">The output path.</param>
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:Sitecore.Update.Engine.PackageGenerator.GenerateSitecorePackage(Sitecore.Update.DiffInfo,System.String)">
            <summary>
            Generates the sitecore package.
            </summary>
            <param name="diff">The difference.</param>
            <param name="outputPath">The output path.</param>
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:Sitecore.Update.Engine.PackageGenerator.SerializeDocument(Sitecore.Install.PackageProject)">
            <summary>
            Serializes the document.
            </summary>
            <param name="project">The project.</param>
            <returns>The serialization data.</returns>
        </member>
        <member name="M:Sitecore.Update.Engine.PackageGenerator.SerializeExplicitItemSource(Sitecore.Install.Items.ExplicitItemSource,System.Xml.XmlNode)">
            <summary>
            Serializes the explicit item source.
            </summary>
            <param name="source">The source.</param>
            <param name="root">The node root.</param>
        </member>
        <member name="M:Sitecore.Update.Engine.PackageGenerator.SerializeMetaData(System.Xml.XmlNode,Sitecore.Install.PackageProject)">
            <summary>
            Serializes the meta data.
            </summary>
            <param name="node">The xml node.</param>
            <param name="project">The project.</param>
        </member>
        <member name="T:Sitecore.Update.Engine.SnapShotGenerator">
            <summary>
            The shan shot generator.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Engine.SnapShotGenerator.converters">
            <summary>
            The list of converters.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Engine.SnapShotGenerator.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Sitecore.Update.Engine.SnapShotGenerator"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Engine.SnapShotGenerator.Converters">
            <summary>
            Gets the converters.
            </summary>
            <value>The converters.</value>
        </member>
        <member name="M:Sitecore.Update.Engine.SnapShotGenerator.GenerateSnapShot(System.String,System.String)">
            <summary>
            Generates the snap shot.
            </summary>
            <param name="snapShotPath">The snap shot path.</param>
            <param name="rootPath">The root path.</param>
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:Sitecore.Update.Engine.SnapShotGenerator.ConvertDataItem(Sitecore.Update.Interfaces.IDataItem)">
            <summary>
            Converts the data item.
            </summary>
            <param name="item">The data item.</param>
            <returns>The package entry.</returns>
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:Sitecore.Update.Engine.SnapShotGenerator.InitializeConverters">
            <summary>
            Initializes the converters.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Filters.AllowFilter">
            <summary>
            The filter of allow type.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Filters.AllowFilter.#ctor(System.String,System.String,Sitecore.Update.Filters.FilterType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Filters.AllowFilter"/> class.
            </summary>
            <param name="rootPath">The root path.</param>
            <param name="path">The filtered path.</param>
            <param name="type">The filter type.</param>
            <param name="useRegex">if set to <c>true</c> than it is regex filter.</param>
        </member>
        <member name="T:Sitecore.Update.Filters.DenyFilter">
            <summary>
            The deny filter type.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Filters.DenyFilter.#ctor(System.String,System.String,Sitecore.Update.Filters.FilterType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Filters.DenyFilter"/> class.
            </summary>
            <param name="rootPath">The root path.</param>
            <param name="path">The filtered path.</param>
            <param name="type">The filter type.</param>
            <param name="useRegex">if set to <c>true</c> than it is regex filter.</param>
        </member>
        <member name="M:Sitecore.Update.Filters.DenyFilter.ProcessDataItem(Sitecore.Update.Interfaces.IDataItem)">
            <summary>
            Processes the data item.
            </summary>
            <param name="dataItem">The data item.</param>
            <returns>Filtered state of the processed item.</returns>
        </member>
        <member name="T:Sitecore.Update.Filters.FilterType">
            <summary>
            The filter type
            </summary>
        </member>
        <member name="F:Sitecore.Update.Filters.FilterType.Any">
            <summary>
            Either file or Item type
            </summary>
        </member>
        <member name="F:Sitecore.Update.Filters.FilterType.File">
            <summary>
            The only File filter type.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Filters.FilterType.Item">
            <summary>
            The only Item filter type
            </summary>
        </member>
        <member name="T:Sitecore.Update.Filters.Filter">
            <summary>
            The Filter.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Filters.Filter.rootPath">
            <summary>
            The filtered root path.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Filters.Filter.path">
            <summary>
            The filtered path.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Filters.Filter.useRegex">
            <summary>
            Indicated if this filter is regex filter.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Filters.Filter.filterType">
            <summary>
            The filter type.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Filters.Filter.#ctor(System.String,System.String,Sitecore.Update.Filters.FilterType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Filters.Filter"/> class.
            </summary>
            <param name="rootPath">The filtered root path.</param>
            <param name="path">The filtered path.</param>
            <param name="type">The filter type.</param>
            <param name="useRegex">if set to <c>true</c> means that filter uses regular expression for filtering entities.</param>
        </member>
        <member name="P:Sitecore.Update.Filters.Filter.FilterType">
            <summary>
            Gets the type of the filter.
            </summary>
            <value>The type of the filter.</value>
        </member>
        <member name="P:Sitecore.Update.Filters.Filter.Path">
            <summary>
            Gets the path.
            </summary>
            <value>The filtered path.</value>
        </member>
        <member name="M:Sitecore.Update.Filters.Filter.ProcessDataItem(Sitecore.Update.Interfaces.IDataItem)">
            <summary>
            Processes the data item.
            </summary>
            <param name="dataItem">The data item.</param>
            <returns>The state of processed data item.</returns>
        </member>
        <member name="M:Sitecore.Update.Filters.Filter.UpdateRootPath(System.String)">
            <summary>
            Updates the root path.
            </summary>
            <param name="root">The filtered root.</param>
        </member>
        <member name="M:Sitecore.Update.Filters.Filter.ProcessRootPath(System.String)">
            <summary>
            Processes the root path.
            </summary>
            <param name="newRootPath">The new root path.</param>
            <returns>The corrected filtered root  path.</returns>
        </member>
        <member name="M:Sitecore.Update.Filters.Filter.GetPath">
            <summary>
            Gets the path.
            </summary>
            <returns>The full fuiltered path.</returns>
        </member>
        <member name="T:Sitecore.Update.Interfaces.ICommand">
            <summary>
            The command interface.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Interfaces.ICommand.CommandPrefix">
            <summary>
            Gets the command prefix.
            </summary>
            <value>The command prefix.</value>
        </member>
        <member name="P:Sitecore.Update.Interfaces.ICommand.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Sitecore.Update.Interfaces.ICommand.EntityID">
            <summary>
            Gets the entity ID.
            </summary>
            <value>The entity ID.</value>
        </member>
        <member name="P:Sitecore.Update.Interfaces.ICommand.EntityPath">
            <summary>
            Gets the entity path.
            </summary>
            <value>The entity path.</value>
        </member>
        <member name="P:Sitecore.Update.Interfaces.ICommand.Parent">
            <summary>
            Gets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:Sitecore.Update.Interfaces.ICommand.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sitecore.Update.Interfaces.ICommand.Item">
            <summary>
            Gets the data item.
            </summary>
            <value>The data item.</value>
        </member>
        <member name="P:Sitecore.Update.Interfaces.ICommand.CollisionBehavior">
            <summary>
            Gets or sets the collision behavior.
            </summary>
            <value>The collision behavior.</value>
        </member>
        <member name="M:Sitecore.Update.Interfaces.ICommand.GenerateUpdateCommand(Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Generates the update command.
            </summary>
            <param name="command">The command.</param>
            <returns>The list of commands to apply to get the Update operation.</returns>
        </member>
        <member name="M:Sitecore.Update.Interfaces.ICommand.ApplyFilter(Sitecore.Update.Interfaces.ICommandFilter)">
            <summary>
            Applies the filter.
            </summary>
            <param name="filter">The filter.</param>
        </member>
        <member name="T:Sitecore.Update.Interfaces.ISerializable">
            <summary>
            Interface for Serializable entities.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Interfaces.ISerializable.Serialize(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the entity.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Interfaces.ISerializable.Load(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the entity.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Interfaces.ICommandFilter">
            <summary>
            Interface for filtered commands
            </summary>
        </member>
        <member name="M:Sitecore.Update.Interfaces.ICommandFilter.FilterCommand(Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Filters the command.
            </summary>
            <param name="command">The command.</param>
            <returns>The filtered command.</returns>
        </member>
        <member name="M:Sitecore.Update.Interfaces.ICommandFilter.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The command instance.</returns>
        </member>
        <member name="T:Sitecore.Update.Interfaces.IDataItem">
            <summary>
            Interface for Data items.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Interfaces.IDataItem.RelatedPath">
            <summary>
            Gets the related path.
            </summary>
            <value>The related path.</value>
        </member>
        <member name="P:Sitecore.Update.Interfaces.IDataItem.ItemPath">
            <summary>
            Gets the item path.
            </summary>
            <value>The item path.</value>
        </member>
        <member name="P:Sitecore.Update.Interfaces.IDataItem.RelatedFolderPath">
            <summary>
            Gets the related folder path.
            </summary>
            <value>The related folder path.</value>
        </member>
        <member name="P:Sitecore.Update.Interfaces.IDataItem.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The data item name.</value>
        </member>
        <member name="P:Sitecore.Update.Interfaces.IDataItem.RootPath">
            <summary>
            Gets the root path.
            </summary>
            <value>The root path.</value>
        </member>
        <member name="M:Sitecore.Update.Interfaces.IDataItem.GenerateDiff(Sitecore.Update.Interfaces.IDataItem,Sitecore.Update.Interfaces.IDataItem,System.Int32)">
            <summary>
            Generates the diff.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <param name="comparisonResult">The comparison result.</param>
            <returns>The list of commands to apply to the source to get the target.</returns>
        </member>
        <member name="T:Sitecore.Update.Interfaces.ICommandOperations">
            <summary>
            Interface for command generators.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Interfaces.ICommandOperations.GenerateAddCommand">
            <summary>
            Generates the add command.
            </summary>
            <returns>The List of comamnds to implement Add data item operation.</returns>
        </member>
        <member name="M:Sitecore.Update.Interfaces.ICommandOperations.GenerateDeleteCommand">
            <summary>
            Generates the delete command.
            </summary>
            <returns>The List of comamnds to implement Delete data item operation.</returns>
        </member>
        <member name="M:Sitecore.Update.Interfaces.ICommandOperations.GenerateUpdateCommand(Sitecore.Update.Interfaces.IDataItem)">
            <summary>
            Generates the update command.
            </summary>
            <param name="dataItem">The data item.</param>
            <returns>The List of comamnds to implement Change data item operation.</returns>
        </member>
        <member name="T:Sitecore.Update.Interfaces.IDataIterator">
            <summary>
            Data iterator interface.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Interfaces.IDataIterator.Next">
            <summary>
            Return next instance in data collection.
            </summary>
            <returns>The Next data item in data collection.</returns>
        </member>
        <member name="T:Sitecore.Update.Interfaces.BaseDataIterator">
            <summary>
            Base class for data iterators.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Interfaces.BaseDataIterator.filters">
            <summary>
            The data item filters.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Interfaces.BaseDataIterator.#ctor(System.Collections.Generic.IList{Sitecore.Update.Filters.Filter})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Interfaces.BaseDataIterator"/> class.
            </summary>
            <param name="filters">The filters.</param>
        </member>
        <member name="P:Sitecore.Update.Interfaces.BaseDataIterator.Filters">
            <summary>
            Gets the data ietm filters.
            </summary>
            <value>The filter list.</value>
        </member>
        <member name="M:Sitecore.Update.Interfaces.BaseDataIterator.IsAllowed(Sitecore.Update.Interfaces.IDataItem)">
            <summary>
            Determines whether the specified data item is allowed.
            </summary>
            <param name="dataItem">The data item.</param>
            <returns>
              <c>true</c> if the specified data item is allowed; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:Sitecore.Update.Interfaces.BaseDataIterator.Next">
            <summary>
            Return next instance in data collection.
            </summary>
            <returns>The Next data item in data collection.</returns>
        </member>
        <member name="T:Sitecore.Update.Interfaces.IItemProcessor">
            <summary>
            Interface for item command processors.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Interfaces.IItemProcessor.Process(Sitecore.Data.Items.Item,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Processes the comamnd.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="command">The command.</param>
            <param name="context">The context.</param>
            <param name="owner">The parent command.</param>
            <returns>The processed Sitecore item.</returns>
        </member>
        <member name="M:Sitecore.Update.Interfaces.IItemProcessor.GenerateRollbackCommands(Sitecore.Data.Items.Item,Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Data.Items.ContentDataItem,Sitecore.Update.Installer.CommandInstallerContext,Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Generates the rollback commands.
            </summary>
            <param name="item">The sitecore item to be changed.</param>
            <param name="installCommand">The install command.</param>
            <param name="dataItem">The data item.</param>
            <param name="context">The context.</param>
            <param name="owner">The parent command.</param>
            <returns>
            The rollback command list that to be included into ChangeItemCommand.
            </returns>
        </member>
        <member name="T:Sitecore.Update.IDataComparer">
            <summary>
            Data comparer interface.
            </summary>
        </member>
        <member name="T:Sitecore.Update.IDataProcessor">
            <summary>
            DataProcessor Interface.
            </summary>
        </member>
        <member name="P:Sitecore.Update.IDataProcessor.Name">
            <summary>
            Gets the data name.
            </summary>
            <value>The data name.</value>
        </member>
        <member name="T:Sitecore.Update.BaseDataProcessor">
            <summary>
            Base class for Data processors
            </summary>
        </member>
        <member name="F:Sitecore.Update.BaseDataProcessor.name">
            <summary>
            the data name
            </summary>
        </member>
        <member name="M:Sitecore.Update.BaseDataProcessor.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.BaseDataProcessor"/> class.
            </summary>
            <param name="name">The data name.</param>
        </member>
        <member name="P:Sitecore.Update.BaseDataProcessor.Name">
            <summary>
            Gets the data name.
            </summary>
            <value>The data name.</value>
        </member>
        <member name="T:Sitecore.Update.IDataPrototype">
            <summary>
            Data dump prototype
            </summary>
        </member>
        <member name="M:Sitecore.Update.IDataPrototype.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The instance.</returns>
        </member>
        <member name="T:Sitecore.Update.IDataProvider">
            <summary>
            Item Data provider
            </summary>
        </member>
        <member name="M:Sitecore.Update.IDataProvider.CanProcess(System.String)">
            <summary>
            Determines whether this provider can process the specified source path.
            </summary>
            <param name="sourcePath">The source path.</param>
            <returns>
              <c>true</c> if this provider can process the specified source path; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.IDataProvider.GetIterator(System.String,System.Collections.Generic.IList{Sitecore.Update.Filters.Filter})">
            <summary>
            Gets the iterator.
            </summary>
            <param name="rootPath">The root path.</param>
            <param name="filters">The filters.</param>
            <returns>The Data iterator.</returns>
        </member>
        <member name="T:Sitecore.Update.Metadata.MetadataSink">
            <summary>
            Adds counting of commands functionality to the Install.MetadataSinlk class.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Metadata.MetadataSink.view">
            <summary>
            Srtores the MetadaData view object.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Metadata.MetadataSink.installationCommandsCount">
            <summary>
            Count of installation commands in a package.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Metadata.MetadataSink.#ctor(Sitecore.Update.Metadata.MetadataView)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Metadata.MetadataSink"/> class.
            </summary>
            <param name="view">The metadata view.</param>
        </member>
        <member name="P:Sitecore.Update.Metadata.MetadataSink.View">
            <summary>
            Gets the metadata view.
            </summary>
            <value>The metadata view.</value>
        </member>
        <member name="P:Sitecore.Update.Metadata.MetadataSink.InstallationCommandsCount">
            <summary>
            Gets or sets the count of installation commands in the package.
            </summary>
            <value>The installation commands count.</value>
        </member>
        <member name="P:Sitecore.Update.Metadata.MetadataSink.FileInstallationCommandsCount">
            <summary>
            Gets or sets the count of file installation commands in the package.
            </summary>
            <value>The file installation commands count.</value>
        </member>
        <member name="P:Sitecore.Update.Metadata.MetadataSink.ItemInstallationCommandsCount">
            <summary>
            Gets or sets the count of item installation commands in the package.
            </summary>
            <value>The item installation commands count.</value>
        </member>
        <member name="M:Sitecore.Update.Metadata.MetadataSink.Put(Sitecore.Install.Framework.PackageEntry)">
            <summary>
            Reads metadata from a package entry. If the entry contains it
            </summary>
            <param name="entry">The package entry.</param>
        </member>
        <member name="M:Sitecore.Update.Metadata.MetadataSink.Flush">
            <summary>
            Flushes the sink
            </summary>
        </member>
        <member name="M:Sitecore.Update.Metadata.MetadataSink.Finish">
            <summary>
            Finishes the sink.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Metadata.MetadataView">
            <summary>
            Represents Update package metadata.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Metadata.MetadataView.#ctor(Sitecore.Install.Framework.IProcessingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Metadata.MetadataView"/> class.
            </summary>
            <param name="context">The processing context.</param>
        </member>
        <member name="M:Sitecore.Update.Metadata.MetadataView.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Metadata.MetadataView"/> class.
            </summary>
            <param name="data">The data context.</param>
        </member>
        <member name="P:Sitecore.Update.Metadata.MetadataView.CommandsCount">
            <summary>
            Gets or sets count of commands in update package.
            </summary>
            <value>The count of commands in update package.</value>
        </member>
        <member name="P:Sitecore.Update.Metadata.MetadataView.ItemCommandsCount">
            <summary>
            Gets or sets count of item commands in update package.
            </summary>
            <value>The count of item commands in update package.</value>
        </member>
        <member name="P:Sitecore.Update.Metadata.MetadataView.FileCommandsCount">
            <summary>
            Gets or sets count of file commands in update package.
            </summary>
            <value>The count of file commands in update package.</value>
        </member>
        <member name="T:Sitecore.Update.CollisionBehavior">
            <summary>
            Collision behavior type
            </summary>
        </member>
        <member name="F:Sitecore.Update.CollisionBehavior.Undefined">
            <summary>
            Updefined collision
            </summary>
        </member>
        <member name="F:Sitecore.Update.CollisionBehavior.Skip">
            <summary>
            Skip action
            </summary>
        </member>
        <member name="F:Sitecore.Update.CollisionBehavior.Force">
            <summary>
            Force action
            </summary>
        </member>
        <member name="T:Sitecore.Update.Utils.CommandUtils">
            <summary>
            The command utility class.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Utils.CommandUtils.isSorterInitialized">
            <summary>
            Indicates whether sorter was initialized or not.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Utils.CommandUtils.CompareCommands(Sitecore.Update.Interfaces.ICommand,Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Compares the commands.
            </summary>
            <param name="left">The left command.</param>
            <param name="right">The right command.</param>
            <returns>The comparison result (-1, 0 or 1)</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.CommandUtils.GetCommandKey(Sitecore.Update.Interfaces.ICommand)">
            <summary>
            Gets the command key.
            </summary>
            <param name="entry">The entry key.</param>
            <returns>The command key.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.CommandUtils.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Utils.ConfigurationUtils.GetAttributeValue(System.String,System.Xml.XmlNode)">
            <summary>
            Gets the attribute value.
            </summary>
            <param name="attributeName">Name of the attribute.</param>
            <param name="node">The node.</param>
            <returns>
            The attribute value.
            </returns>
        </member>
        <member name="T:Sitecore.Update.Utils.FileSystemOperations">
            <summary>
            Non-static FileSystem operations.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Utils.FileSystemOperations.FileExists(System.String)">
            <summary>
            Checks whether specified file exists.
            </summary>
            <param name="filePath">The file path.</param>
            <returns><c>true</c> if specified file exists.</returns>
        </member>
        <member name="T:Sitecore.Update.Utils.FileUtils">
            <summary>
            The File utility methods.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Utils.FileUtils.BreakingChangeFileExtension">
            <summary>
            The breaking change file report extension.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Utils.FileUtils.hashTransformer">
            <summary>
            The hash transformer.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Utils.FileUtils.InstallationHistoryRoot">
            <summary>
            Gets the installation history root.
            </summary>
            <value>The installation history root.</value>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.GetLatestHistoryFolder">
            <summary>
            Gets the latest history folder.
            </summary>
            <returns>The path to the most recently created history folder.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.ReadFile(System.String,System.Boolean,System.Int32,System.Xml.XmlReader)">
            <summary>
            Reads the file.
            </summary>
            <param name="baseLocation">The base location.</param>
            <param name="loadFile">if set to <c>true</c> [load file].</param>
            <param name="bufferSize">Size of the buffer.</param>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.ReadFile(System.String,System.String,System.Boolean,System.Int32,System.Xml.XmlReader)">
            <summary>
            Reads the file.
            </summary>
            <param name="tagName">Name of the tag.</param>
            <param name="baseLocation">The base location.</param>
            <param name="loadFile">if set to <c>true</c> [load file].</param>
            <param name="bufferSize">Size of the buffer.</param>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.ReadFile(System.String,System.Int32,System.Xml.XmlReader)">
            <summary>
            Reads the file.
            </summary>
            <param name="baseLocation">The base location.</param>
            <param name="bufferSize">Size of the buffer.</param>
            <param name="reader">The reader.</param>
            <returns>The file content.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.GetHashCode(System.String)">
            <summary>
            Gets the hash code.
            </summary>
            <param name="filePath">The file path.</param>
            <returns>The file hash code.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.IsConfigurationFile(System.String)">
            <summary>
            Check Configuration File
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.GetHashCode(System.IO.Stream)">
            <summary>
            Gets the hash code.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.GetFileContentHashCode(System.String)">
            <summary>
            Gets hash code for the specified file content.
            </summary>
            <param name="content">The content.</param>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.GetStream(System.String)">
            <summary>
            Gets the stream from string.
            </summary>
            <param name="content">The content.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.GetFileStream(System.String)">
            <summary>
            Gets the file stream.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.GetStreamContent(System.IO.Stream)">
            <summary>
            Gets the content of the stream.
            </summary>
            <param name="stream">The stream.</param>
            <returns>The stream content.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.SerializeFile(System.IO.Stream,System.String)">
            <summary>
            Serializes the file.
            </summary>
            <param name="stream">The stream.</param>
            <param name="location">The location.</param>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.SerializeFile(System.IO.Stream,System.String,System.String,System.String,System.Boolean,System.Xml.XmlWriter,System.Int32)">
            <summary>
            Serializes the file.
            </summary>
            <param name="stream">The stream.</param>
            <param name="baseLocation">The base location.</param>
            <param name="filePath">The file path.</param>
            <param name="elemName">The tag name.</param>
            <param name="keepFileInXml">The value indicating whether to keep file in xml.</param>
            <param name="writer">The writer.</param>
            <param name="bufferSize">The buffer size.</param>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.CreateFile(System.String,System.IO.Stream)">
            <summary>
            Creates the file.
            </summary>
            <param name="path">The file path.</param>
            <param name="stream">The file stream.</param>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.EnsureNewRoot(System.String,System.String,System.String)">
            <summary>
            Ensures the root exists.
            </summary>
            <param name="appRoot">The application root.</param>
            <param name="root">The root path.</param>
            <param name="filePath">The file path.</param>
            <returns>The path to the file.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.GetUniqueFilePath(System.String,System.String,Sitecore.Update.Utils.FileSystemOperations)">
            <summary>
            Gets the unique file path.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="uniqueSufix">The unique sufix that is added to the file in case we are out of numbres.</param>
            <param name="operations">The operations.</param>
            <returns>
            The unique file path.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.GetBackupPath(System.String,System.String,System.String)">
            <summary>
            Gets the backup path.
            </summary>
            <param name="appRoot">The application root.</param>
            <param name="root">The root.</param>
            <param name="filePath">The file path.</param>
            <returns>The path of the file in backup location.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.BackupFile(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Backups the file.
            </summary>
            <param name="backupRoot">The backup root.</param>
            <param name="appRoot">The application root.</param>
            <param name="filePath">The file path.</param>
            <param name="remove">if set to <c>true</c> old data will be replaced.</param>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.BackupFile(System.String,System.String,System.String,System.IO.Stream)">
            <summary>
            Backups the file.
            </summary>
            <param name="backupRoot">The backup root.</param>
            <param name="appRoot">The application root.</param>
            <param name="filePath">The file path.</param>
            <param name="fileStream">The file stream.</param>
            <returns>The path to backup file.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.CreateFolderRecursive(System.String)">
            <summary>
            Creates the folder recursive.
            </summary>
            <param name="folderPath">The folder path.</param>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.IsXmlFile(System.IO.FileInfo)">
            <summary>
            Determines whether the file is an XML file.
            </summary>
            <param name="info">The file info.</param>
            <returns>
              <c>true</c> if the specified file is an XML file; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.IsXmlFile(System.IO.Stream)">
            <summary>
            Determines whether the file is an XML file
            </summary>
            <param name="stream">The stream</param>
            <returns><c>true</c> if the specified file is an XML file; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.IsXmlFile(System.String)">
            <summary>
            Determines whether provided filePath turned to be XML file.
            </summary>
            <param name="filePath">The file path.</param>
            <returns>
              <c>true</c> the specified file path is XML file; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.IsSerializationLinkFolder(System.String)">
            <summary>
            Checks, whenever the specified path is Sitecore Serialization Folder.
            <remarks>example folder name: 1F683D41</remarks>
            </summary>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.IsBreakingChangesFile(System.String)">
            <summary>
            Determines whether provided filePath is an breaking changes report file.
            </summary>
            <param name="filePath">The file path.</param>
            <returns>
              <c>true</c> the specified file path is breaking changes file; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.GetDirectoryName(System.String)">
            <summary>
            Gets directory name from the path.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Utils.FileUtils.GetDirectoryPath(System.String)">
            <summary>
            Gets directory path from the path.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Utils.InstallMode">
            <summary>
            Installation mode
            </summary>
        </member>
        <member name="F:Sitecore.Update.Utils.InstallMode.Install">
            <summary>
            Install (default behavior is Force)
            </summary>
        </member>
        <member name="F:Sitecore.Update.Utils.InstallMode.Update">
            <summary>
            Update (default behavior is Skip)
            </summary>
        </member>
        <member name="T:Sitecore.Update.Utils.ItemUtils">
            <summary>
            The data item utils.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Utils.ItemUtils.archiveExtensions">
            <summary>
            The supported archive file extensions
            </summary>
        </member>
        <member name="M:Sitecore.Update.Utils.ItemUtils.GetRollbackCommandsForCreateParent(System.String,System.String,Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the rollback commands for create parent operation.
            </summary>
            <param name="path">The item to be added path.</param>
            <param name="nearestParentPath">The nearest parent path.</param>
            <param name="createdParent">The created parent.</param>
            <param name="context">The context.</param>
            <returns>The rollback commands.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ItemUtils.GenerateRemoveFolderCommands(System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Generates the remove empty folder commands if necessary.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="context">The context.</param>
            <returns>The change file command.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ItemUtils.GenerateChangeFileCommand(System.IO.FileInfo,System.IO.FileInfo,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Generates the change file command.
            </summary>
            <param name="sourceFile">The source file information.</param>
            <param name="targetFile">The target file information.</param>
            <param name="sourceFileHash">The source file hash.</param>
            <param name="context">The context.</param>
            <returns>The change file command.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ItemUtils.GenerateDeleteFileCommand(System.String,System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Generates the delete file command.
            </summary>
            <param name="path">The file path.</param>
            <param name="hashCode">The file hash code.</param>
            <param name="context">The context.</param>
            <returns>The delete file command.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ItemUtils.GenerateAddFileCommand(System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Generates the Add file command.
            </summary>
            <param name="path">The file path.</param>
            <param name="context">The context.</param>
            <returns>The add file command.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ItemUtils.GenerateAddFolderCommand(System.String,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Generates the add folder command.
            </summary>
            <param name="folderPath">The folder path.</param>
            <param name="context">The context.</param>
            <returns>The add folder command.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ItemUtils.GetFieldValue(Sitecore.Data.Fields.Field)">
            <summary>
            Gets the field value.
            </summary>
            <param name="field">The field.</param>
            <returns>The field value.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ItemUtils.GetContentDataItem(Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Gets the content data item.
            </summary>
            <param name="item">The sitecore item.</param>
            <param name="context">The context.</param>
            <returns>The data item.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ItemUtils.GenerateAddItemCommand(Sitecore.Data.Items.Item,Sitecore.Update.Installer.CommandInstallerContext)">
            <summary>
            Generates the add item command.
            </summary>
            <param name="item">The Sitecore item.</param>
            <param name="context">The context.</param>
            <returns>The add item command.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ItemUtils.GetFileSystemDataItem(System.String,System.IO.FileInfo,System.String)">
            <summary>
            Gets the file system data item.
            </summary>
            <param name="root">The application root.</param>
            <param name="file">The file information.</param>
            <param name="hashCode">The file hash code.</param>
            <returns>The File System Data Item.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ItemUtils.GetSystemFolderDataItem(System.String,System.IO.DirectoryInfo)">
            <summary>
            Gets the system folder data item.
            </summary>
            <param name="root">The application root or data folder.</param>
            <param name="directory">The directory information.</param>
            <returns>The folder data item.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ItemUtils.GetSystemFolderDataItem(Sitecore.Update.Installer.CommandInstallerContext,System.IO.DirectoryInfo)">
            <summary>
            Gets the system folder data item.
            </summary>
            <param name="context">The command installer context.</param>
            <param name="directory">The directory information.</param>
            <returns>The folder data item.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ItemUtils.GetFileSystemDataItem(System.String,System.IO.FileInfo)">
            <summary>
            Gets the file system data item.
            </summary>
            <param name="root">The application root.</param>
            <param name="file">The file information.</param>
            <returns>The File System Data Item.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ItemUtils.GetFolderDataItem(System.String,System.IO.DirectoryInfo)">
            <summary>
            Gets the folder data item.
            </summary>
            <param name="root">The application root.</param>
            <param name="folder">The directory information.</param>
            <returns>The folder data item.</returns>
        </member>
        <member name="T:Sitecore.Update.Utils.ProcessingMode">
            <summary>
            Processing mode
            </summary>
        </member>
        <member name="F:Sitecore.Update.Utils.ProcessingMode.None">
            <summary>
            Process no commands
            </summary>
        </member>
        <member name="F:Sitecore.Update.Utils.ProcessingMode.Files">
            <summary>
            Process files
            </summary>
        </member>
        <member name="F:Sitecore.Update.Utils.ProcessingMode.Items">
            <summary>
            Process items
            </summary>
        </member>
        <member name="F:Sitecore.Update.Utils.ProcessingMode.PostStep">
            <summary>
            Run post-step.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Utils.ProcessingMode.All">
            <summary>
            Process all commands
            </summary>
        </member>
        <member name="T:Sitecore.Update.Utils.ReflectionUtil">
            <summary>
            The reflection utility methods.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Utils.ReflectionUtil.CreateObject(System.String)">
            <summary>
            Creates the object.
            </summary>
            <param name="name">The object name.</param>
            <returns>The object.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ReflectionUtil.CreateObject(System.String,System.Object[])">
            <summary>
            Creates the object.
            </summary>
            <param name="typeName">Name of the type.</param>
            <param name="parameters">The parameters.</param>
            <returns>The object.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ReflectionUtil.CreateObject(System.Type,System.Object[])">
            <summary>
            Creates the object.
            </summary>
            <param name="type">The type of the object.</param>
            <param name="parameters">The parameters.</param>
            <returns>The object.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ReflectionUtil.CreateObject(System.String,System.String,System.Object[])">
            <summary>
            Creates the object.
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="className">The class name.</param>
            <param name="parameters">The parameters.</param>
            <returns>The object.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ReflectionUtil.FindDescendantTypes(System.Reflection.Assembly,System.Type)">
            <summary>
            Finds the descendant types.
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="baseType">Type of the base.</param>
            <returns>The list of descendant types.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ReflectionUtil.GetField(System.Object,System.String)">
            <summary>
            Gets the field value.
            </summary>
            <param name="obj">The object.</param>
            <param name="name">The field name.</param>
            <returns>The field value.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ReflectionUtil.GetMethod(System.Type,System.String,System.Boolean,System.Boolean,System.Boolean,System.Object[])">
            <summary>
            Gets the method.
            </summary>
            <param name="type">The type of the object.</param>
            <param name="methodName">Name of the method.</param>
            <param name="includeNonPublic">if set to <c>true</c> [include non public].</param>
            <param name="includeInherited">if set to <c>true</c> [include inherited].</param>
            <param name="includeStatic">if set to <c>true</c> [include static].</param>
            <param name="parameters">The parameters.</param>
            <returns>The method information.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ReflectionUtil.GetProperty(System.Object,System.String)">
            <summary>
            Gets the property.
            </summary>
            <param name="obj">The object.</param>
            <param name="name">The name of the property.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ReflectionUtil.GetPropertyInfo(System.Object,System.String)">
            <summary>
            Gets the property information.
            </summary>
            <param name="obj">The object.</param>
            <param name="name">The property name.</param>
            <returns>The property information.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ReflectionUtil.GetTypes(System.Object[])">
            <summary>
            Gets the types.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>The list of types.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ReflectionUtil.InvokeMethod(System.Reflection.MethodInfo,System.Object[],System.Object)">
            <summary>
            Invokes the method.
            </summary>
            <param name="method">The method.</param>
            <param name="parameters">The parameters.</param>
            <param name="obj">The object.</param>
            <returns>The invocation result.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ReflectionUtil.LoadAssembly(System.String)">
            <summary>
            Loads the assembly.
            </summary>
            <param name="name">The assembly name.</param>
            <returns>The assembly.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ReflectionUtil.SetProperty(System.Object,System.String,System.Object)">
            <summary>
            Sets the property.
            </summary>
            <param name="obj">The object.</param>
            <param name="name">The property name.</param>
            <param name="propertyValue">The property value.</param>
            <returns><c>true</c> if property has been set.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.ReflectionUtil.SetProperty(System.Object,System.Reflection.PropertyInfo,System.Object)">
            <summary>
            Sets the property.
            </summary>
            <param name="obj">The object.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Sitecore.Update.Utils.SerializationUtil">
            <summary>
            The serialization utility methods.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Utils.SerializationUtil.GetReader(System.IO.Stream)">
            <summary>
            Gets the reader.
            </summary>
            <param name="stream">The stream.</param>
            <returns>The data reader.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.SerializationUtil.GetWriter(System.IO.Stream)">
            <summary>
            Gets the writer.
            </summary>
            <param name="stream">The stream.</param>
            <returns>The data writer.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.SerializationUtil.WriteElement(System.String,System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the element.
            </summary>
            <param name="elemName">Name of the elem.</param>
            <param name="value">The value.</param>
            <param name="writer">The writer.</param>
        </member>
        <member name="T:Sitecore.Update.Utils.XmlHelper">
            <summary>
            The XML Helper methods.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Utils.XmlHelper.GetNodeValue(System.Xml.XmlNode,System.String)">
            <summary>
            Gets the node value.
            </summary>
            <param name="root">The root node.</param>
            <param name="path">The node path.</param>
            <returns>The node value.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.XmlHelper.SerializeItem(Sitecore.Data.Serialization.ObjectModel.SyncItem,System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the item.
            </summary>
            <param name="syncItem">The sync item.</param>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Utils.XmlHelper.ReadItem(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Reads the item.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
            <returns>The Synk Item.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.XmlHelper.ReadVersion(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Reads the version.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
            <returns>The version.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.XmlHelper.SerializeVersion(Sitecore.Data.Serialization.ObjectModel.SyncVersion,System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the version.
            </summary>
            <param name="syncVersion">The sync version.</param>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Utils.XmlHelper.ReadField(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Reads the field.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
            <returns>The Sync field.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.XmlHelper.SerealizeField(Sitecore.Data.Serialization.ObjectModel.SyncField,System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serealizes the field.
            </summary>
            <param name="syncField">The sync field.</param>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Utils.XmlHelper.XmlStringsAreEqual(System.String,System.String)">
            <summary>
            Compares two XML strings ignoring empty attributes.
            </summary>
            <param name="xml1">The XML1.</param>
            <param name="xml2">The XML2.</param>
            <returns><c>true</c>, if the strings are equal; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Sitecore.Update.Utils.XmlHelper.FindEmptyAttributes(System.Xml.Linq.XElement,System.Collections.Generic.List{System.Xml.Linq.XAttribute})">
            <summary>
            Finds empty attributes in the element.
            </summary>
            <param name="element">The element.</param>
            <param name="emptyAttributes">The list with found empty attributes.</param>
        </member>
        <member name="M:Sitecore.Update.Utils.XmlHelper.MakePredicate(System.Collections.Generic.IList{Sitecore.Xml.Patch.IXmlNode},System.Xml.XmlNamespaceManager)">
            <summary>
            Make XPath Predicate from QueryAttribute and XmlNamespaceManager
            </summary>
            <param name="queryAttributes">queryAttributes</param>
            <param name="nsManager">nsManager</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Utils.XmlHelper.MakeName(System.String,System.String)">
            <summary>
            Make XML Node name from prefix and local name
            </summary>
            <param name="prefix">node prefix</param>
            <param name="localName"> node localname</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Update.VersionResolvers.AssemblySitecoreVersionResolver">
            <summary>
            Resolves Sitecore version from Sitecore.Kernel assembly.
            </summary>
            <seealso cref="T:Sitecore.Update.VersionResolvers.ISitecoreVersionResolver" />
        </member>
        <member name="M:Sitecore.Update.VersionResolvers.AssemblySitecoreVersionResolver.Resolve">
            <summary>
            Resolves this instance.
            </summary>
            <returns>
            The SitecoreVersionInfo object that represents the Sitecore version.
            </returns>
        </member>
        <member name="T:Sitecore.Update.VersionResolvers.ISitecoreVersionResolver">
            <summary>
            Setecore version resolver abstraction
            </summary>
        </member>
        <member name="M:Sitecore.Update.VersionResolvers.ISitecoreVersionResolver.Resolve">
            <summary>
            Resolves this instance.
            </summary>
            <returns>The SitecoreVersionInfo object that represents the Sitecore version.</returns>
        </member>
        <member name="T:Sitecore.Update.VersionResolvers.VersionFileSitecoreVersionResolver">
            <summary>
            Resolved Sitecore version basing on the Sitecore Version.xml file.
            </summary>
            <seealso cref="T:Sitecore.Update.VersionResolvers.ISitecoreVersionResolver" />
        </member>
        <member name="F:Sitecore.Update.VersionResolvers.VersionFileSitecoreVersionResolver.UnknownVersionString">
            <summary>
            The unknown version string
            </summary>
        </member>
        <member name="M:Sitecore.Update.VersionResolvers.VersionFileSitecoreVersionResolver.Resolve">
            <summary>
            Resolves this instance.
            </summary>
            <returns>
            The SitecoreVersionInfo object that represents the Sitecore version.
            </returns>
        </member>
        <member name="M:Sitecore.Update.VersionResolvers.VersionFileSitecoreVersionResolver.ParseVersion(System.String)">
            <summary>
            Parses the version.
            </summary>
            <param name="version">The version string parsed by Sitecore.</param>
            <returns>SitecoreVersionInfo object that represents Sitecore version.</returns>
        </member>
        <member name="M:Sitecore.Update.VersionResolvers.VersionFileSitecoreVersionResolver.GetVersionNumber">
            <summary>
            Gets the version number.
            </summary>
            <returns>The string that represents Sitecore version number.</returns>
        </member>
        <member name="T:Sitecore.Update.Xml.AddXmlCommand">
            <summary>
            Command that keeps added Xml chunk and can insert it into xml document.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.AddXmlCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Xml.AddXmlCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.AddXmlCommand.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Xml.AddXmlCommand"/> class.
            </summary>
            <param name="node">The node to be changed.</param>
        </member>
        <member name="P:Sitecore.Update.Xml.AddXmlCommand.CommandAction">
            <summary>
            Returns the action that porforms command.
            </summary>
            <value>The command action.</value>
        </member>
        <member name="M:Sitecore.Update.Xml.AddXmlCommand.MatchesNodeSiblings(System.Xml.XmlNode,System.String,System.String,System.String,System.Xml.XmlDocument)">
            <summary>
            Matcheses the siblings.
            </summary>
            <param name="node">The xml node to process.</param>
            <param name="xPath">The mapping XPath.</param>
            <param name="pSibling">The mapped previous sibling.</param>
            <param name="fSibling">The mapped following sibling.</param>
            <param name="document">The document.</param>
            <returns><c>true</c> if node matches its siblings.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.AddXmlCommand.MatchesPathSiblings(System.Xml.XmlNode,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Matcheses the siblings.
            </summary>
            <param name="node">The xml node to process.</param>
            <param name="pSibling">The mapped previous sibling.</param>
            <param name="fSibling">The mapped following sibling.</param>
            <param name="pathMapping">The path mapping.</param>
            <returns>
              <c>true</c> if node matches its siblings.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.AddXmlCommand.SearchForCurrentNode(System.String@,System.String@,System.String@,System.Xml.XmlDocument,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{Sitecore.Update.Xml.XmlMergeResult}@)">
            <summary>
            Searches for current node.
            </summary>
            <param name="xPath">The mapping XPath.</param>
            <param name="pSibling">The mapped previous sibling.</param>
            <param name="fSibling">The mapped following sibling.</param>
            <param name="document">The document.</param>
            <param name="messages">The messages.</param>
            <param name="pathMapping">The path mapping list.</param>
            <returns><c>true</c> if current node has been found and processed.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.AddXmlCommand.AppendToParent(System.String@,System.Xml.XmlDocument,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{Sitecore.Update.Xml.XmlMergeResult}@,System.Int32,Sitecore.Update.Xml.BaseChangeXmlCommand[])">
            <summary>
            Appends node to a parent is possible.
            </summary>
            <param name="xPath">The mapped XPath.</param>
            <param name="document">The document.</param>
            <param name="pathMapping">The path mapping.</param>
            <param name="messages">The messages.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.AddXmlCommand.ApplyTo(System.Xml.XmlDocument,System.Int32,Sitecore.Update.Xml.BaseChangeXmlCommand[],System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Applies command to a specified document.
            </summary>
            <param name="document">The document.</param>
            <param name="next">The next command.</param>
            <param name="pathMapping">The path mapping.</param>
            <returns>
            The list of messages, occurred during merging.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.AddXmlCommand.IsScheduledForRemoving(System.Int32,Sitecore.Update.Xml.BaseChangeXmlCommand[],System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Determines whether [is scheduled for removing] [the specified next].
            </summary>
            <param name="currentCommandIndex">Index of the current command.</param>
            <param name="commands">The commands.</param>
            <param name="nextXPath">The next X path.</param>
            <param name="pathMapping">The path mapping.</param>
            <returns>
              <c>true</c> if [is scheduled for removing] [the specified next]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.AddXmlCommand.CheckForAddingPath(System.String,System.String,System.Int32,Sitecore.Update.Xml.BaseChangeXmlCommand[])">
            <summary>
            Checks for adding path.
            </summary>
            <param name="xPath">The node XPath.</param>
            <param name="nextXPath">The next node XPath.</param>
            <param name="currentCommandIndex">Index of the current command.</param>
            <param name="commands">The commands.</param>
            <returns><c>true</c> if we are going to add node with specified XPath.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.AddXmlCommand.ImportNode(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>
            Imports the node.
            </summary>
            <param name="parent">The parent.</param>
            <param name="xmlNode">The XML node.</param>
            <returns>The imported node.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.AddXmlCommand.AppendToParent(System.String,System.Xml.XmlNode,System.Xml.XmlNode,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Appends to parent.
            </summary>
            <param name="parent">The parent.</param>
            <param name="xmlNode">The XML node.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.AddXmlCommand.AppendBefore(System.String,System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.Collections.Generic.Dictionary{System.String,System.String},System.Int32,Sitecore.Update.Xml.BaseChangeXmlCommand[])">
            <summary>
            Appends the before.
            </summary>
            <param name="xPath">The x path.</param>
            <param name="parent">The parent.</param>
            <param name="child">The child.</param>
            <param name="xmlNode">The XML node.</param>
            <param name="pathMapping">The path mapping.</param>
            <param name="currentCommandIndex">Index of the current command.</param>
            <param name="commands">The commands.</param>
            <returns>The added node.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.AddXmlCommand.MapPaths(System.Xml.XmlNode,System.String,System.String[],System.Collections.Generic.Dictionary{System.String,System.String},System.Int32,Sitecore.Update.Xml.BaseChangeXmlCommand[])">
            <summary>
            Maps the paths.
            </summary>
            <param name="node">The added node.</param>
            <param name="xPath">The node XPath.</param>
            <param name="currentPathsToMap">The current paths to map.</param>
            <param name="pathMapping">The path mapping.</param>
            <param name="currentCommandIndex">Index of the current command.</param>
            <param name="commands">The commands.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.AddXmlCommand.AppendAfter(System.String,System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.Collections.Generic.Dictionary{System.String,System.String},System.Int32,Sitecore.Update.Xml.BaseChangeXmlCommand[])">
            <summary>
            Appends the after.
            </summary>
            <param name="xPath">The x path.</param>
            <param name="parent">The parent.</param>
            <param name="child">The child.</param>
            <param name="xmlNode">The XML node.</param>
            <param name="pathMapping">The path mapping.</param>
            <param name="currentCommandIndex">Index of the current command.</param>
            <param name="commands">The commands.</param>
            <returns>The added node.</returns>
        </member>
        <member name="T:Sitecore.Update.Xml.BaseChangeXmlCommand">
            <summary>
            Represents a base functionality for change Xml commands.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.BaseChangeXmlCommand.node">
            <summary>
            The changed node.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.BaseChangeXmlCommand.orderedXPath">
            <summary>
            Node XPath basing on ordering.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.BaseChangeXmlCommand.metadataXPath">
            <summary>
            Node XPath based on attributes
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.BaseChangeXmlCommand.xPath">
            <summary>
            The node XPath.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.BaseChangeXmlCommand.previousSiblingXPath">
            <summary>
            The XPath of previous sibling node.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.BaseChangeXmlCommand.followingSiblingXPath">
            <summary>
            The XPath of the next sibling node.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.BaseChangeXmlCommand.attributes">
            <summary>
            The node attributes.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Xml.BaseChangeXmlCommand.GetXmlNodeID">
            <summary>
            The method that can determine node XPath ID.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseChangeXmlCommand.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Xml.BaseChangeXmlCommand"/> class.
            </summary>
            <param name="node">The node to be changed.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseChangeXmlCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Xml.BaseChangeXmlCommand"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Xml.BaseChangeXmlCommand.Node">
            <summary>
            Gets the node.
            </summary>
            <value>The Xml node.</value>
        </member>
        <member name="P:Sitecore.Update.Xml.BaseChangeXmlCommand.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The Xml node name.</value>
        </member>
        <member name="P:Sitecore.Update.Xml.BaseChangeXmlCommand.OrderedXPath">
            <summary>
            Gets the ordered XPath.
            </summary>
            <value>The ordered XPath based on node order.</value>
        </member>
        <member name="P:Sitecore.Update.Xml.BaseChangeXmlCommand.PreviousSiblingXPath">
            <summary>
            Gets the previous sibling XPath.
            </summary>
            <value>The previous sibling XPath.</value>
        </member>
        <member name="P:Sitecore.Update.Xml.BaseChangeXmlCommand.FollowingSiblingXPath">
            <summary>
            Gets the previous sibling XPath.
            </summary>
            <value>The previous sibling XPath.</value>
        </member>
        <member name="P:Sitecore.Update.Xml.BaseChangeXmlCommand.XPath">
            <summary>
            Gets the node XPath.
            </summary>
            <value>The node XPath.</value>
        </member>
        <member name="P:Sitecore.Update.Xml.BaseChangeXmlCommand.CommandPrefix">
            <summary>
            Gets the command prefix.
            </summary>
            <value>The command prefix.</value>
        </member>
        <member name="P:Sitecore.Update.Xml.BaseChangeXmlCommand.CommandAction">
            <summary>
            Returns the action that porforms command.
            </summary>
            <value>The command action.</value>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseChangeXmlCommand.GetAttributes">
            <summary>
            Gets the attributes.
            </summary>
            <returns>The list of node attributes.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseChangeXmlCommand.ApplyTo(System.Xml.XmlDocument,System.Int32,Sitecore.Update.Xml.BaseChangeXmlCommand[],System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Applies command to a specified document.
            </summary>
            <param name="document">The document.</param>
            <param name="currentCommandIndex">Index of the current command.</param>
            <param name="commands">The commands.</param>
            <param name="pathMapping">The path mapping.</param>
            <returns>
            The list of messages, occurred during merging.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseChangeXmlCommand.GetAttributes(System.String,Sitecore.Update.Xml.BaseXmlNodeType)">
            <summary>
            Gets the attribute collection.
            </summary>
            <param name="xPath">The node XPath.</param>
            <param name="nodeType">Type of the node.</param>
            <returns>The node attribute collection.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseChangeXmlCommand.GetXPath(System.Xml.XmlNode,Sitecore.Update.Xml.BaseChangeXmlCommand.GetXmlNodeID)">
            <summary>
            Gets the ordered XPath.
            </summary>
            <param name="node">The XML node.</param>
            <param name="nodeIdentifier">The node identifier.</param>
            <returns>The XPath based on node order.</returns>
            <exception cref="T:System.ArgumentException"><c>ArgumentException</c>.</exception>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseChangeXmlCommand.Serialize(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the entity.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseChangeXmlCommand.SerializeNode(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the node.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseChangeXmlCommand.SerializeCommand(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the command.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseChangeXmlCommand.Load(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the entity.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseChangeXmlCommand.LoadNode(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the node.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseChangeXmlCommand.LoadCommand(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseChangeXmlCommand.GetGuessedNodesByXPath(System.String,System.Xml.XmlDocument)">
            <summary>
            Gets the guessed nodes by X path.
            </summary>
            <param name="xPath">The node XPath.</param>
            <param name="doc">The document.</param>
            <returns>The guessed nodes.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseChangeXmlCommand.CreateNode(System.Xml.XmlDocument,System.Xml.XmlNode)">
            <summary>
            Creates the node.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
            <returns>The Xml node transformed for the specified document.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseChangeXmlCommand.GetXPath(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Gets the mapped XPath.
            </summary>
            <param name="xPath">The XPath to map.</param>
            <param name="pathMap">The path mapping.</param>
            <returns>The mapped XPath.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseChangeXmlCommand.MapPath(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Maps the path.
            </summary>
            <param name="xPath">The XPath to map.</param>
            <param name="newPath">The new path.</param>
            <param name="pathMap">The path map.</param>
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseChangeXmlCommand.GetNode(System.String,System.String,System.String,System.String,System.Xml.XmlDocument,System.String,System.Collections.Generic.List{Sitecore.Update.Xml.XmlMergeResult}@)">
            <summary>
            Gets the Xml node by its XPath.
            </summary>
            <param name="xPath">The node XPath.</param>
            <param name="currentNodePath">The current node XPath.</param>
            <param name="document">The document.</param>
            <param name="nodeDescription">The node description.</param>
            <param name="messages">The messages.</param>
            <returns>The XmlNode object.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseChangeXmlCommand.GetNodes(System.String,System.Xml.XmlDocument)">
            <summary>
            Gets the nodes.
            </summary>
            <param name="xPath">The XPath.</param>
            <param name="document">The document.</param>
            <returns>The list of guessed nodes.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseChangeXmlCommand.GetParentNode(System.String,System.String,System.Xml.XmlDocument,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Gets the parent node.
            </summary>
            <param name="xPath">The XPath.</param>
            <param name="nodePath">The node path.</param>
            <param name="document">The document.</param>
            <param name="pathMapping">The path mapping.</param>
            <returns>The Parent node.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseChangeXmlCommand.GetParentPath(System.String)">
            <summary>
            Gets the parent path.
            </summary>
            <param name="xPath">The xpath.</param>
            <returns>The parent node path.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseChangeXmlCommand.FindSiblingCandidateByValue(System.String,System.Xml.XmlNode,System.Xml.XmlDocument,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Searches for sibling candidate by node value.
            </summary>
            <param name="xPath">The xPath.</param>
            <param name="currentNode">The current node.</param>
            <param name="document">The document.</param>
            <param name="pathMapping">The path mapping.</param>
            <returns>The candidate.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseChangeXmlCommand.GetSiblingPaths(System.Xml.XmlNode,System.String)">
            <summary>
            Gets the sibling paths.
            </summary>
            <param name="node">The xml node.</param>
            <param name="nodeID">The node ID.</param>
            <returns>List of following sibling node paths with the same name.</returns>
        </member>
        <member name="T:Sitecore.Update.Xml.BaseXmlNode">
            <summary>
            Represents the base set of operations for XmlNode that is necessary for Diff and Patch.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.BaseXmlNode.innerNode">
            <summary>
            The original XmlNode.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNode.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Xml.BaseXmlNode"/> class.
            </summary>
            <param name="node">The original node.</param>
        </member>
        <member name="P:Sitecore.Update.Xml.BaseXmlNode.InnerNode">
            <summary>
            Gets the inner node.
            </summary>
            <value>The inner node.</value>
        </member>
        <member name="P:Sitecore.Update.Xml.BaseXmlNode.PreviousSibling">
            <summary>
            Gets the previous sibling.
            </summary>
            <value>The previous sibling.</value>
        </member>
        <member name="P:Sitecore.Update.Xml.BaseXmlNode.NextSibling">
            <summary>
            Gets the next sibling.
            </summary>
            <value>The next sibling.</value>
        </member>
        <member name="P:Sitecore.Update.Xml.BaseXmlNode.FirstChild">
            <summary>
            Gets the first child.
            </summary>
            <value>The first child.</value>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNode.GetXmlNode(System.Xml.XmlNode)">
            <summary>
            Gets the XML node.
            </summary>
            <param name="node">The original node.</param>
            <returns>The XmlNode Wrapper.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNode.IsMatchNode(Sitecore.Update.Xml.BaseXmlNode)">
            <summary>
            Determines whether the specified node is the same that current one.
            </summary>
            <param name="node">The base Xml node.</param>
            <returns>
              <c>true</c> if the specified node is the same as curent one; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNode.IsMatchAttributes(Sitecore.Update.Xml.BaseXmlNode)">
            <summary>
            Determines whether current and specified node have the same attribute set and its values.
            </summary>
            <param name="node">The xml node.</param>
            <returns>
              <c>true</c> if the specified node has the same attributes with the same values; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNode.HasChildNodes">
            <summary>
            Determines whether current node has children.
            </summary>
            <returns>
              <c>true</c> if current node has child nodes; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNode.GenerateAddCommand">
            <summary>
            Generates the add command.
            </summary>
            <returns>The command that can add the BAseXmlNode to Xml.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNode.GenerateRemoveCommand">
            <summary>
            Generates the remove command.
            </summary>
            <returns>List of commands that could remove the Xml node.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNode.GenerateChangeNodeDefinitionCommand(Sitecore.Update.Xml.BaseXmlNode)">
            <summary>
            Generates the change node definition command.
            </summary>
            <param name="target">The target.</param>
            <returns>The Commands to change from source node definition to target.</returns>
        </member>
        <member name="T:Sitecore.Update.Xml.BaseXmlNodeType">
            <summary>
            Defines the base class for XmlNodeType behavior.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.BaseXmlNodeType.types">
            <summary>
            Supported node types.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNodeType.#cctor">
            <summary>
            Initializes the <see cref="T:Sitecore.Update.Xml.BaseXmlNodeType"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Xml.BaseXmlNodeType.NodePathSeparator">
            <summary>
            Gets the node path separator.
            </summary>
            <value>The node path separator.</value>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNodeType.GetXmlNodeType(System.Xml.XmlNode)">
            <summary>
            Gets the object that represents the type of the XML node.
            </summary>
            <param name="node">The Xml node.</param>
            <returns>The XmlNodeType object that defines the behavior for current node type.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNodeType.ExtractNodeAttributes(System.String)">
            <summary>
            extract node attributes from node XPath.
            </summary>
            <param name="xPath">The XPath.</param>
            <returns>The node attribute collection.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNodeType.GetXmlNode(System.Xml.XmlNode)">
            <summary>
            Gets the Xml node that is ready to be compared.
            </summary>
            <param name="node">The Xml node.</param>
            <returns>The Own Xml node.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNodeType.GetOrderedNodeID(System.Xml.XmlNode)">
            <summary>
            Gets the ordered node ID.
            </summary>
            <param name="node">The Xml node.</param>
            <returns>The Node ID in ordered node list.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNodeType.GetNodeID(System.Xml.XmlNode)">
            <summary>
            Gets the XPath node ID.
            </summary>
            <param name="node">The Xml node.</param>
            <returns>The node XPath.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNodeType.GetParentNode(System.Xml.XmlNode)">
            <summary>
            Gets the parent node.
            </summary>
            <param name="node">The Xml node.</param>
            <returns>The parent Xml node.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNodeType.CanProcessNode(System.Xml.XmlNode)">
            <summary>
            Determines whether the specified node can be processed.
            </summary>
            <param name="node">The Xml node.</param>
            <returns>
              <c>true</c> if the specified node can be processed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNodeType.GuessXmlNodeByXPath(System.String,System.Xml.XmlDocument)">
            <summary>
            Guesses the XML node by XPath.
            </summary>
            <param name="xPath">The XPath.</param>
            <param name="doc">The document.</param>
            <returns>The matched candidates.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNodeType.GuessXmlNodeByPath(System.String[],System.Int32,System.Xml.XmlNode)">
            <summary>
            Guesses the XML node by path.
            </summary>
            <param name="pathChunks">The path chunks.</param>
            <param name="pathPosition">The path position.</param>
            <param name="parent">The parent.</param>
            <returns>The matched nodes.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNodeType.GetExactMatch(System.Xml.XmlNode,System.String)">
            <summary>
            Gets the exact match of a child node by nodeID.
            </summary>
            <param name="parent">The parent.</param>
            <param name="nodeID">The node ID.</param>
            <returns>The matched node.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNodeType.GetGuessMatch(System.Xml.XmlNode,System.String)">
            <summary>
            Gets the guess match.
            </summary>
            <param name="parent">The parent.</param>
            <param name="nodeID">The node ID.</param>
            <returns>The guessed node to match.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNodeType.IsExactMatchChild(System.Xml.XmlNode,System.String)">
            <summary>
            Determines whether the specified child matches the specified node ID.
            </summary>
            <param name="node">The node.</param>
            <param name="nodeID">The node ID.</param>
            <returns>
             <c>true</c> if the specified child matches the specified node ID; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNodeType.GuessMatchChild(System.Xml.XmlNode,System.String)">
            <summary>
            Guesses the match child.
            </summary>
            <param name="node">The Xml node.</param>
            <param name="nodeID">The node ID.</param>
            <returns><c>true</c> if node might match the ID.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNodeType.MatchesValue(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>
            Matcheses the value.
            </summary>
            <param name="node1">The Xml node.</param>
            <param name="node2">The Xml node.</param>
            <returns><c>true</c> if values for the nodes are the same.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNodeType.MatchesNodeName(System.Xml.XmlNode,System.String)">
            <summary>
            Determine whether the node matcheses the name of the node from nodeID.
            </summary>
            <param name="node">The Xml node to match.</param>
            <param name="nodeID">The node ID.</param>
            <returns><c>true</c> if node matches the node name from provided nodeID.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNodeType.MatchesNodePosition(System.Xml.XmlNode,System.String)">
            <summary>
            Determine whether the node matcheses the position of the node from nodeID.
            </summary>
            <param name="node">The xml node to match.</param>
            <param name="nodeID">The node ID.</param>
            <returns><c>true</c> if provided node matches the position from nodeID.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.BaseXmlNodeType.MatchesNodeAttributes(System.Xml.XmlNode,System.String)">
            <summary>
            Determine whether the node matcheses the attributes of the node from nodeID.
            </summary>
            <param name="node">The xml node to match.</param>
            <param name="nodeID">The node ID.</param>
            <returns><c>true</c> if provided node matches the attributes from nodeID.</returns>
        </member>
        <member name="T:Sitecore.Update.Xml.AttributeXmlNodeType">
            <summary>
            Represents the Attribute node type.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.AttributeXmlNodeType.GetXmlNode(System.Xml.XmlNode)">
            <summary>
            Gets the Xml node that is ready to be compared.
            </summary>
            <param name="node">The Xml node.</param>
            <returns>The Own Xml node.</returns>
            <exception cref="T:System.NotSupportedException">Current operation is not supported for Attribute. There is an issue with algorithm!</exception>
        </member>
        <member name="M:Sitecore.Update.Xml.AttributeXmlNodeType.GetOrderedNodeID(System.Xml.XmlNode)">
            <summary>
            Gets the ordered node ID.
            </summary>
            <param name="node">The Xml node.</param>
            <returns>The Node ID in ordered node list.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.AttributeXmlNodeType.GetNodeID(System.Xml.XmlNode)">
            <summary>
            Gets the XPath node ID.
            </summary>
            <param name="node">The Xml node.</param>
            <returns>The node XPath.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.AttributeXmlNodeType.GetParentNode(System.Xml.XmlNode)">
            <summary>
            Gets the parent node.
            </summary>
            <param name="node">The Xml node.</param>
            <returns>The parent Xml node.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.AttributeXmlNodeType.ExtractNodeAttributes(System.String)">
            <summary>
            extract node attributes from node XPath.
            </summary>
            <param name="xPath">The XPath.</param>
            <returns>The node attribute collection.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.AttributeXmlNodeType.IsExactMatchChild(System.Xml.XmlNode,System.String)">
            <summary>
            Determines whether the specified child matches the specified node ID.
            </summary>
            <param name="node">The node.</param>
            <param name="nodeID">The node ID.</param>
            <returns>
              <c>true</c> if the specified child matches the specified node ID; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.AttributeXmlNodeType.MatchesNodeName(System.Xml.XmlNode,System.String)">
            <summary>
            Determine whether the node matcheses the name of the node from nodeID.
            </summary>
            <param name="node">The Xml node to match.</param>
            <param name="nodeID">The node ID.</param>
            <returns>
              <c>true</c> if node matches the node name from provided nodeID.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.AttributeXmlNodeType.MatchesNodeAttributes(System.Xml.XmlNode,System.String)">
            <summary>
            Determine whether the node matcheses the attributes of the node from nodeID.
            </summary>
            <param name="node">The xml node to match.</param>
            <param name="nodeID">The node ID.</param>
            <returns>
             <c>true</c> if provided node matches the attributes from nodeID.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.AttributeXmlNodeType.MatchesNodePosition(System.Xml.XmlNode,System.String)">
            <summary>
            Determine whether the node matcheses the position of the node from nodeID.
            </summary>
            <param name="node">The xml node to match.</param>
            <param name="nodeID">The node ID.</param>
            <returns>
              <c>true</c> if provided node matches the position from nodeID.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.AttributeXmlNodeType.MatchesValue(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>
            Matcheses the value.
            </summary>
            <param name="node1">The Xml node.</param>
            <param name="node2">The Xml node.</param>
            <returns>
              <c>true</c> if values for the nodes are the same.
            </returns>
        </member>
        <member name="T:Sitecore.Update.Xml.SimpleElementXmlNodeType">
            <summary>
            Represents simple Xml node type that cannot have child elements.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.SimpleElementXmlNodeType.GetXmlNode(System.Xml.XmlNode)">
            <summary>
            Gets the Xml node that is ready to be compared.
            </summary>
            <param name="node">The Xml node.</param>
            <returns>The Own Xml node.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.SimpleElementXmlNodeType.GetOrderedNodeID(System.Xml.XmlNode)">
            <summary>
            Gets the ordered node ID.
            </summary>
            <param name="node">The Xml node.</param>
            <returns>The Node ID in ordered node list.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.SimpleElementXmlNodeType.GetNodeID(System.Xml.XmlNode)">
            <summary>
            Gets the XPath node ID.
            </summary>
            <param name="node">The Xml node.</param>
            <returns>The node XPath.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.SimpleElementXmlNodeType.MatchesNodeName(System.Xml.XmlNode,System.String)">
            <summary>
            Determine whether the node matcheses the name of the node from nodeID.
            </summary>
            <param name="node">The Xml node to match.</param>
            <param name="nodeID">The node ID.</param>
            <returns>
            	<c>true</c> if node matches the node name from provided nodeID.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.SimpleElementXmlNodeType.MatchesNodeAttributes(System.Xml.XmlNode,System.String)">
            <summary>
            Determine whether the node matcheses the attributes of the node from nodeID.
            </summary>
            <param name="node">The xml node to match.</param>
            <param name="nodeID">The node ID.</param>
            <returns>
             <c>true</c> if provided node matches the attributes from nodeID.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.SimpleElementXmlNodeType.GuessMatchChild(System.Xml.XmlNode,System.String)">
            <summary>
            Guesses the match child.
            </summary>
            <param name="node">The Xml node.</param>
            <param name="nodeID">The node ID.</param>
            <returns><c>true</c> if node might match the ID.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.SimpleElementXmlNodeType.MatchesNodePosition(System.Xml.XmlNode,System.String)">
            <summary>
            Determine whether the node matcheses the position of the node from nodeID.
            </summary>
            <param name="node">The xml node to match.</param>
            <param name="nodeID">The node ID.</param>
            <returns>
              <c>true</c> if provided node matches the position from nodeID.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.SimpleElementXmlNodeType.IsExactMatchChild(System.Xml.XmlNode,System.String)">
            <summary>
            Determines whether the specified child matches the specified node ID.
            </summary>
            <param name="node">The Xml node.</param>
            <param name="nodeID">The node ID.</param>
            <returns>
              <c>true</c> if the specified child matches the specified node ID; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.SimpleElementXmlNodeType.MatchesValue(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>
            Matcheses the value.
            </summary>
            <param name="node1">The Xml node.</param>
            <param name="node2">The Xml node.</param>
            <returns>
              <c>true</c> if values for the nodes are the same.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.SimpleElementXmlNodeType.ExtractAttributes(System.String)">
            <summary>
            Extracts the attributes.
            </summary>
            <param name="nodeID">The node ID.</param>
            <returns>The node attributes.</returns>
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:Sitecore.Update.Xml.SimpleElementXmlNodeType.ExtractNodeIndex(System.String)">
            <summary>
            Extracts the index of the node.
            </summary>
            <param name="nodeID">The node ID.</param>
            <returns></returns>
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:Sitecore.Update.Xml.SimpleElementXmlNodeType.ExtractNodeName(System.String)">
            <summary>
            Extracts the name of the node from Node ID.
            </summary>
            <param name="nodeID">The node ID.</param>
            <returns>The node Name.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.SimpleElementXmlNodeType.ExtractNodeAttributes(System.String)">
            <summary>
            extract node attributes from node XPath.
            </summary>
            <param name="xPath">The XPath.</param>
            <returns>The node attribute collection.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.SimpleElementXmlNodeType.GetXPathParameters(System.String)">
            <summary>
            Gets the XPath parameters.
            </summary>
            <param name="xPath">The XPath.</param>
            <returns>The XPath node parameters.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.SimpleElementXmlNodeType.GetParentNode(System.Xml.XmlNode)">
            <summary>
            Gets the parent node.
            </summary>
            <param name="node">The Xml node.</param>
            <returns>The parent Xml node.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.SimpleElementXmlNodeType.FindOrderedNodeIndex(System.Xml.XmlNode)">
            <summary>
            Finds the ordered index of the node.
            </summary>
            <param name="node">The Xml node.</param>
            <returns>The Ordered index of the node.</returns>
            <exception cref="T:System.ArgumentException">Couldn't find node within parent</exception>
        </member>
        <member name="T:Sitecore.Update.Xml.ElementXmlNodeType">
            <summary>
            Represents Xml node that can have child nodes.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.ElementXmlNodeType.GetXmlNode(System.Xml.XmlNode)">
            <summary>
            Gets the Xml node that is ready to be compared.
            </summary>
            <param name="node">The Xml node.</param>
            <returns>The Own Xml node.</returns>
        </member>
        <member name="T:Sitecore.Update.Xml.ChangeXmlAttributesCommand">
            <summary>
            Command that keeps attribute changes in XmlNode.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.ChangeXmlAttributesCommand.source">
            <summary>
            The source node.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.ChangeXmlAttributesCommand.oldXPath">
            <summary>
            The old XPath of the node.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.ChangeXmlAttributesCommand.oldAttributes">
            <summary>
            The list of old collection of attributes.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.ChangeXmlAttributesCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Xml.ChangeXmlAttributesCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.ChangeXmlAttributesCommand.#ctor(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Xml.ChangeXmlAttributesCommand"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
        </member>
        <member name="P:Sitecore.Update.Xml.ChangeXmlAttributesCommand.CommandAction">
            <summary>
            Returns the action that porforms command.
            </summary>
            <value>The command action.</value>
        </member>
        <member name="P:Sitecore.Update.Xml.ChangeXmlAttributesCommand.OldXPath">
            <summary>
            Gets the old XPath.
            </summary>
            <value>The old XPath.</value>
        </member>
        <member name="M:Sitecore.Update.Xml.ChangeXmlAttributesCommand.ApplyTo(System.Xml.XmlDocument,System.Int32,Sitecore.Update.Xml.BaseChangeXmlCommand[],System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Applies command to a specified document.
            </summary>
            <param name="document">The document.</param>
            <param name="next">The next command.</param>
            <param name="pathMapping">The path mapping.</param>
            <returns>
            The list of messages, occurred during merging.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.ChangeXmlAttributesCommand.ChangeAttributes(System.Xml.XmlNode,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{Sitecore.Update.Xml.XmlMergeResult}@)">
            <summary>
            Changes the attributes.
            </summary>
            <param name="node">The XmlNode to be processed.</param>
            <param name="xPath">The node XPath.</param>
            <param name="pathMapping">The path mapping.</param>
            <param name="messages">The messages.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.ChangeXmlAttributesCommand.UpdateAttribute(System.String,System.String,System.String,System.Xml.XmlNode,System.String,System.Collections.Generic.List{Sitecore.Update.Xml.XmlMergeResult}@)">
            <summary>
            Updates the attribute.
            </summary>
            <param name="attributeName">Name of the attribute.</param>
            <param name="oldValue">The old attribute value.</param>
            <param name="newValue">The new attribute value.</param>
            <param name="node">The XmlNode to process.</param>
            <param name="xPath">The node XPath.</param>
            <param name="messages">The messages.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.ChangeXmlAttributesCommand.AddAttribute(System.String,System.String,System.Xml.XmlNode,System.String,System.Collections.Generic.List{Sitecore.Update.Xml.XmlMergeResult}@)">
            <summary>
            Adds the attribute.
            </summary>
            <param name="attributeName">Name of the attribute.</param>
            <param name="attributeValue">The attribute value.</param>
            <param name="node">The XmlNode to be processed.</param>
            <param name="xPath">The node XPath.</param>
            <param name="messages">The messages.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.ChangeXmlAttributesCommand.RemoveAttribute(System.String,System.String,System.Xml.XmlNode,System.String,System.Collections.Generic.List{Sitecore.Update.Xml.XmlMergeResult}@)">
            <summary>
            Removes the attribute.
            </summary>
            <param name="attributeName">Name of the attribute.</param>
            <param name="oldValue">The old attribute value.</param>
            <param name="node">The Xml Node to process.</param>
            <param name="xPath">The node XPath.</param>
            <param name="messages">The messages.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.ChangeXmlAttributesCommand.GetOldAttributes">
            <summary>
            Gets the attributes.
            </summary>
            <returns>The list of node attributes.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.ChangeXmlAttributesCommand.SerializeCommand(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the command.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.ChangeXmlAttributesCommand.LoadCommand(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the command.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Xml.DeleteXmlCommand">
            <summary>
            Command that keeps removed Xml chunk and can insert it into xml document.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.DeleteXmlCommand.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Xml.DeleteXmlCommand"/> class.
            </summary>
            <param name="node">The node to be changed.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.DeleteXmlCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Xml.DeleteXmlCommand"/> class. Used for serialization only.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Xml.DeleteXmlCommand.CommandAction">
            <summary>
            Returns the action that porforms command.
            </summary>
            <value>The command action.</value>
        </member>
        <member name="M:Sitecore.Update.Xml.DeleteXmlCommand.ApplyTo(System.Xml.XmlDocument,System.Int32,Sitecore.Update.Xml.BaseChangeXmlCommand[],System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Applies command to a specified document.
            </summary>
            <param name="document">The document.</param>
            <param name="next">The next command.</param>
            <param name="pathMapping">The path mapping.</param>
            <returns>
            The list of messages, occurred during merging.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.DeleteXmlCommand.RemoveNode(System.Xml.XmlNode,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{Sitecore.Update.Xml.XmlMergeResult}@,System.Int32,Sitecore.Update.Xml.BaseChangeXmlCommand[])">
            <summary>
            Removes the specified node.
            </summary>
            <param name="node">The node to be removed.</param>
            <param name="xPath">The XPath.</param>
            <param name="pathMapping">The path mapping.</param>
            <param name="messages">The messages.</param>
            <param name="currentCommandIndex">Index of the current command.</param>
            <param name="commands">The commands.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.DeleteXmlCommand.MapPaths(System.Xml.XmlNode,System.String,System.String,System.String[],System.Collections.Generic.Dictionary{System.String,System.String},System.Int32,Sitecore.Update.Xml.BaseChangeXmlCommand[])">
            <summary>
            Maps the paths.
            </summary>
            <param name="node">The added node.</param>
            <param name="xPath">The node XPath.</param>
            <param name="currentPathsToMap">The current paths to map.</param>
            <param name="pathMapping">The path mapping.</param>
            <param name="currentCommandIndex">Index of the current command.</param>
            <param name="commands">The commands.</param>
        </member>
        <member name="T:Sitecore.Update.Xml.Patch.ConfigFileDiffHelper">
            <summary>
            Implements utility methods to generate XML patches.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileDiffHelper.Compare(System.Xml.XmlDocument,System.Xml.XmlDocument,Sitecore.Xml.Patch.IElementIdentification,Sitecore.Xml.Patch.XmlPatchNamespaces)">
            <summary>
            Compares the specified original.
            </summary>
            <param name="original">The original XML document.</param>
            <param name="modified">The modified XML document.</param>
            <param name="id">The element identification policy for the document.</param>
            <param name="ns">The namespaces to use when generating the patch.</param>
            <returns>The compared XML from two XML sources.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileDiffHelper.IsSignificantPatch(System.String,System.String,Sitecore.Xml.Patch.XmlPatchNamespaces)">
            <summary>
            to check the configfile with xmlreader settings
            </summary>
            <param name="patch">the patch file stream</param>
            <param name="targetPath">target XML file Path</param>
            <param name="ns">the XmlPatchNamespaces</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileDiffHelper.Compare(Sitecore.Xml.Patch.IXmlElement,Sitecore.Xml.Patch.IXmlElement,Sitecore.Xml.Patch.IElementIdentification,Sitecore.Update.Xml.Patch.ConfigFileElementContext)">
            <summary>
            Compares two XML sources and records changes in a comparison context.
            </summary>
            <param name="original">The original XML document.</param>
            <param name="modified">The modified XML document.</param>
            <param name="identification">The identification policy for the document.</param>
            <param name="context">The comparison context to record changes.</param>
            <exception cref="T:System.Exception">Can't start with unequal nodes</exception>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileDiffHelper.CompareAttributes(Sitecore.Xml.Patch.IXmlElement,Sitecore.Xml.Patch.IXmlElement,Sitecore.Update.Xml.Patch.ConfigFileElementContext)">
            <summary>
            Compares the attributes of two XML elements.
            </summary>
            <param name="original">The original element.</param>
            <param name="modified">The modified element.</param>
            <param name="context">The comparison context to record the changes.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileDiffHelper.CompareChildren(Sitecore.Xml.Patch.IXmlElement,Sitecore.Xml.Patch.IXmlElement,Sitecore.Xml.Patch.IElementIdentification,Sitecore.Update.Xml.Patch.ConfigFileElementContext)">
            <summary>
            Compares the child elements of two XML nodes.
            </summary>
            <param name="original">The original element.</param>
            <param name="modified">The modified element.</param>
            <param name="id">The element identification policy of the document.</param>
            <param name="context">The comparison context.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileDiffHelper.Postprocess(System.Collections.ArrayList,Sitecore.Xml.Patch.IXmlElement[],Sitecore.Xml.Patch.IXmlElement[],Sitecore.Xml.Patch.IElementIdentification)">
            <summary>
            Post processes the specified report.
            </summary>
            <param name="report">The report.</param>
            <param name="source">The source.</param>
            <param name="modified">The modified.</param>
            <param name="id">The element id.</param>
            <returns>
            The I enumerable.
            </returns>
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileDiffHelper.InsertNode(Sitecore.Update.Xml.Patch.ConfigFileElementContext,Sitecore.Xml.Patch.IXmlElement,Sitecore.Xml.Patch.IXmlElement,Sitecore.Xml.Patch.IElementIdentification,Sitecore.Update.Xml.Patch.PatchPosition)">
            <summary>
            Inserts the node into comparison context.
            </summary>
            <param name="context">The comparison context.</param>
            <param name="element">The element to insert.</param>
            <param name="reference">The reference element before which to insert the target element.</param>
            <param name="id">The identification policy of the document.</param>
            <param name="position">The position.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileDiffHelper.GetXPath(Sitecore.Xml.Patch.IXmlElement,Sitecore.Xml.Patch.IElementIdentification)">
            <summary>
            Gets the XPath to identify a specific element.
            </summary>
            <param name="element">The element to identify.</param>
            <param name="id">The element id.</param>
            <returns>The xpath of the element.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileDiffHelper.GetChildContext(Sitecore.Update.Xml.Patch.ConfigFileElementContext,Sitecore.Xml.Patch.IXmlElement,Sitecore.Xml.Patch.IXmlElement,Sitecore.Xml.Patch.IElementIdentification,Sitecore.Update.Xml.Patch.PatchPosition)">
            <summary>
            Returns the child context.
            </summary>
            <param name="context">The context.</param>
            <param name="element">The element.</param>
            <param name="reference">The reference.</param>
            <param name="id">The id.</param>
            <param name="position">The position.</param>
            <returns>
            The child context.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileDiffHelper.SetIdentification(Sitecore.Update.Xml.Patch.ConfigFileElementContext,Sitecore.Xml.Patch.IXmlElement,Sitecore.Xml.Patch.IElementIdentification)">
            <summary>
            Sets the identification for <see cref="T:Sitecore.Update.Xml.Patch.ConfigFileElementContext"/> object.
            </summary>
            <param name="context">The context.</param>
            <param name="xmlElement">The xml node.</param>
            <param name="id">The element identification object.</param>
        </member>
        <member name="T:Sitecore.Update.Xml.Patch.ConfigFileDomSource">
            <summary>
            Represents configuration xml file element.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.Patch.ConfigFileDomSource.node">
            <summary>
            
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileDomSource.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xml.Patch.XmlDomSource"/> class.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="P:Sitecore.Update.Xml.Patch.ConfigFileDomSource.NodeType">
            <summary>
            Gets the type of the node.
            </summary>
            <value>The type of the node.</value>
        </member>
        <member name="P:Sitecore.Update.Xml.Patch.ConfigFileDomSource.NamespaceURI">
            <summary>
            Gets the namespace URI.
            </summary>
            <value>The namespace URI.</value>
        </member>
        <member name="P:Sitecore.Update.Xml.Patch.ConfigFileDomSource.Prefix">
            <summary>
            Gets the prefix.
            </summary>
            <value>The prefix.</value>
        </member>
        <member name="P:Sitecore.Update.Xml.Patch.ConfigFileDomSource.LocalName">
            <summary>
            Gets the name of the local.
            </summary>
            <value>The name of the local.</value>
        </member>
        <member name="P:Sitecore.Update.Xml.Patch.ConfigFileDomSource.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Sitecore.Update.Xml.Patch.ConfigFileDomSource.Node">
            <summary>
            Gets the node.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileDomSource.GetAttributes">
            <summary>
            Gets the attributes.
            </summary>
            <returns>The attributes.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileDomSource.GetChildren">
            <summary>
            Gets the children.
            </summary>
            <returns>The children.</returns>
        </member>
        <member name="T:Sitecore.Update.Xml.Patch.ConfigFileElementContext">
            <summary>
            The config file element context.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.Patch.ConfigFileElementContext.node">
            <summary>
            XML node encapsulated by this context instance.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.Patch.ConfigFileElementContext.parent">
            <summary>
            Reference to a parent context if it exists.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.Patch.ConfigFileElementContext.name">
            <summary>
            Name of this context.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.Patch.ConfigFileElementContext.namespaceUri">
            <summary>
            The namespace URI
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.Patch.ConfigFileElementContext.identification">
            <summary>
            Attributes that identify this element.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.Patch.ConfigFileElementContext.insertCommand">
            <summary>
            Insert command, as understood by XML Patch.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.Patch.ConfigFileElementContext.insertReference">
            <summary>
            Relative XPath reference for the insert command.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.Patch.ConfigFileElementContext.ns">
            <summary>
            Reference to namespaces to use when generating the patch.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.Patch.ConfigFileElementContext.isEmpty">
            <summary>
            Teturns <c>true</c> if diff is empty.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileElementContext.#ctor(System.Xml.XmlNode,Sitecore.Xml.Patch.XmlPatchNamespaces)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Xml.Patch.ConfigFileElementContext"/> class.
            </summary>
            <param name="node">The XML node to encapsulate into the context.</param>
            <param name="ns">The XML namespaces to use when generating the patch.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileElementContext.#ctor(Sitecore.Update.Xml.Patch.ConfigFileElementContext,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Xml.Patch.ConfigFileElementContext" /> class.
            </summary>
            <param name="parent">The reference to a parent context.</param>
            <param name="name">The name of this context.</param>
            <param name="namespaceUri">The namespace URI.</param>
        </member>
        <member name="P:Sitecore.Update.Xml.Patch.ConfigFileElementContext.Parent">
            <summary>
            Gets the parent context.
            </summary>
            <value>The parent context.</value>
        </member>
        <member name="P:Sitecore.Update.Xml.Patch.ConfigFileElementContext.IsEmpty">
            <summary>
            Gets a value indicating whether diff is empty.
            </summary>
            <value>
              <c>true</c> if the diff is empty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileElementContext.Materialize">
            <summary>
            Materializes this instance.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileElementContext.GetChildContext(System.String)">
            <summary>
            Gets the child context with specific name.
            </summary>
            <param name="name">The name with specific name.</param>
            <returns>
            A new child context.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileElementContext.GetChildContext(System.String,System.String)">
            <summary>
            Gets the child context with specific name.
            </summary>
            <param name="name">The name with specific name.</param>
            <param name="namespaceUri"></param>
            <returns>
            A new child context.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileElementContext.SetIdentification(System.Collections.Generic.IEnumerable{Sitecore.Xml.Patch.IXmlNode})">
            <summary>
            Sets the identification for this context.
            </summary>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileElementContext.SetInsertOption(System.String,System.String)">
            <summary>
            Sets the insert option.
            </summary>
            <param name="option">The option.</param>
            <param name="reference">The reference.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileElementContext.SetAttribute(Sitecore.Xml.Patch.IXmlNode)">
            <summary>
            Sets the attribute.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileElementContext.SetIdentificationAttribute(Sitecore.Xml.Patch.IXmlNode)">
            <summary>
            Sets the attribute in order to identify the node.
            </summary>
            <param name="attribute">The attribute.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileElementContext.SetText(System.String)">
            <summary>
            Sets the text of the element in the patch.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileElementContext.Delete">
            <summary>
            Forces element to be deleted in the patch.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileElementContext.DeleteAttribute(Sitecore.Xml.Patch.IXmlNode)">
            <summary>
            Deletes the attribute.
            </summary>
            <param name="source">The source attribute.</param>
        </member>
        <member name="T:Sitecore.Update.Xml.Patch.ConfigFileElementIdentification">
            <summary>
            Implements identification of elements inside configuration files.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileElementIdentification.GetSignificantAttributes(Sitecore.Xml.Patch.IXmlElement)">
            <summary>
            Gets the significant attributes of the specific XML element. Significant attributes are used to identify elements in an XML document.
            </summary>
            <param name="element">The XML element to process.</param>
            <returns>
            A sequence of significant attributes for the element, in document order.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileElementIdentification.HasUniqueIdentificationAttributes(Sitecore.Xml.Patch.IXmlElement)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileElementIdentification.GetID(Sitecore.Xml.Patch.IXmlElement)">
            <summary>
            Gets the string ID of an XML element.
            </summary>
            <param name="element">The XML element to process.</param>
            <returns>
            A minimal string ID that uniquely identifies an element among siblings.
            </returns>
        </member>
        <member name="T:Sitecore.Update.Xml.Patch.ConfigFilePatcher">
            <summary>
            A helper class to merge XML configuration files.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatcher.GetPatch(System.Xml.XmlDocument,System.Xml.XmlDocument)">
            <summary>
            Gets the patch for a specific xml configuration file.
            </summary>
            <param name="targetDocument">The target xml document.</param>
            <param name="sourceDocument">The source xml document.</param>
            <returns>The xml diff between two xml documents.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatcher.GetPatch(System.Xml.XmlDocument,System.Xml.XmlDocument,Sitecore.Xml.Patch.XmlPatchNamespaces)">
            <summary>
            Gets the patch for a specific xml configuration file.
            </summary>
            <param name="targetDocument">The target xml document.</param>
            <param name="sourceDocument">The source xml document.</param>
            <param name="patchNamespaces">The xml patch namespaces.</param>
            <returns>The xml diff between two xml documents.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatcher.GetPatch(System.IO.Stream,System.IO.Stream)">
            <summary>
            Gets the patch for a specific xml configuration file.
            </summary>
            <param name="targetStream">The target stream.</param>
            <param name="sourceStream">The source stream.</param>
            <returns>The xml diff targetStream two xml documents.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatcher.GetPatch(System.IO.Stream,System.IO.Stream,Sitecore.Xml.Patch.XmlPatchNamespaces)">
            <summary>
            Gets the patch for a specific xml configuration file.
            </summary>
            <param name="targetStream">The target stream.</param>
            <param name="sourceStream">The source stream.</param> 
            <param name="patchNamespaces">The xml patch namespaces.</param>
            <returns>The xml diff targetStream two xml documents.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatcher.GetPatch(System.String,System.String)">
            <summary>
            Gets the patch for a specific xml configuration file.
            </summary>
            <param name="targetValue">The target xml.</param>
            <param name="sourceValue">The source xml.</param>
            <returns>The xml diff targetStream two xml documents.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatcher.GetPatch(System.String,System.String,Sitecore.Xml.Patch.XmlPatchNamespaces)">
            <summary>
            Gets the patch for a specific xml configuration file.
            </summary>
            <param name="targetValue">The target xml.</param>
            <param name="sourceValue">The source xml.</param>
            <param name="patchNamespaces">The xml patch namespaces.</param>
            <returns>The xml diff targetStream two xml documents.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatcher.CorrectDatabaseTypeForKnownDatabases(System.Xml.XmlNode,Sitecore.Xml.Patch.XmlPatchNamespaces)">
            <summary>
            Corrects the database type for known databases.
            </summary>
            <param name="doc">The document.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatcher.ProcessDatabaseTypeForKnownDatabases(System.Xml.XmlNode,Sitecore.Xml.Patch.XmlPatchNamespaces)">
            <summary>
            Processes the database type for known databases.
            </summary>
            <param name="node">The node.</param>
            <param name="patchNamespaces">The patch namespaces.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatcher.IsEmptyPatch(System.Xml.XmlDocument)">
            <summary>
            Checks whether xml patch is empty.
            </summary>
            <param name="patch">The xml patch.</param>
            <returns>Value indicating whether xml patch is empty.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatcher.ApplyPatch(System.Xml.XmlDocument,System.Xml.XmlDocument)">
            <summary>
            Applies the xml patch to a source xml configuration file.
            </summary>
            <param name="sourceDocument">The source xml document.</param>
            <param name="patchDocument">The patch xml document</param>
            <returns>The final xml document.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatcher.ApplyPatch(System.IO.Stream,System.IO.Stream)">
            <summary>
            Applies the xml patch to a source xml configuration file.
            </summary>
            <param name="sourceStream">The source stream.</param>
            <param name="patchStream">The patch stream.</param>
            <returns>The final xml document.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatcher.ApplyPatch(System.String,System.String)">
            <summary>
            Applies the xml patch to a source xml configuration file.
            </summary>
            <param name="sourceValue">The source xml.</param>
            <param name="patch">The patch xml.</param>
            <returns>The final xml document.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatcher.LoadXml(System.IO.Stream)">
            <summary>
            Loads the configuration file.
            </summary>
            <param name="file">The file.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatcher.GetDefaultPatchNamespaces">
            <summary>
            Returns default instance of the xml patch namespaces object.
            </summary>
            <returns>The xml patch namespaces object.</returns>
        </member>
        <member name="T:Sitecore.Update.Xml.Patch.ConfigFilePatchHelper">
            <summary>
            Implements utility methods to apply XML patches.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.Patch.ConfigFilePatchHelper.PatchPrefix">
            <summary>
            Prefix for the patch nodes.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.Patch.ConfigFilePatchHelper.elementId">
            <summary>
            The instance of <see cref="T:Sitecore.Update.Xml.Patch.ConfigFileElementIdentification"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatchHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Xml.Patch.ConfigFilePatchHelper"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatchHelper.AssignAttributes(System.Xml.XmlNode,System.Collections.Generic.IEnumerable{Sitecore.Xml.Patch.IXmlNode})">
            <summary>
            Assigns the attributes.
            </summary>
            <param name="target">The target.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatchHelper.IsPatchingAttributeName(System.String)">
            <summary>
            Determines whether specified attribute name might be related to a patching logic.
            </summary>
            <param name="attributeName">Name of the attribute.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatchHelper.MergeChildren(System.Xml.XmlNode,Sitecore.Xml.Patch.IXmlElement,Sitecore.Xml.Patch.XmlPatchNamespaces,System.Boolean)">
            <summary>
            Appends the children.
            </summary>
            <param name="target">The target.</param>
            <param name="patch">The patch.</param>
            <param name="ns">The namespace.</param>
            <param name="targetWasInserted">if set to <c>true</c> means that <paramref name="target"/> has been inserted in the target document earlier by this patch.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatchHelper.FindBestTargetChild(System.Xml.XmlNode,Sitecore.Xml.Patch.IXmlElement,System.Text.StringBuilder,Sitecore.Xml.Patch.XmlPatchNamespaces,System.Xml.XmlNamespaceManager)">
            <summary>
            Finds the best target child.
            </summary>
            <param name="target">The target.</param>
            <param name="patchNode">The patchNode.</param>
            <param name="predicateBuilder">The predicate builder.</param>
            <param name="ns">The ns.</param>
            <param name="nsManager">The ns manager.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatchHelper.CalculateRelevancy(System.Xml.XmlNode,Sitecore.Xml.Patch.IXmlElement,System.Int32,Sitecore.Xml.Patch.XmlPatchNamespaces)">
            <summary>
            Calculates the relevancy.
            </summary>
            <param name="node">The node.</param>
            <param name="patch">The patch.</param>
            <param name="level">The level.</param>
            <param name="ns">The ns.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatchHelper.InitializeQueryAttributes(Sitecore.Xml.Patch.IXmlElement,Sitecore.Xml.Patch.XmlPatchNamespaces)">
            <summary>
            Initializes the attributes to be user for identifying (selecting) the patchNode.
            </summary>
            <param name="node">The patchNode.</param>
            <param name="patchNamespaces">The patch namespaces.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatchHelper.InitializeSetAttributes(Sitecore.Xml.Patch.IXmlElement,Sitecore.Xml.Patch.XmlPatchNamespaces,System.Collections.Generic.List{Sitecore.Xml.Patch.IXmlNode})">
            <summary>
            Initializes the attributes to be updated.
            </summary>
            <param name="node">The patchNode.</param>
            <param name="patchNamespaces">The patch namespaces.</param>
            <param name="queryAttributes">The query attributes.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatchHelper.DetermineInsertOperation(Sitecore.Xml.Patch.IXmlElement,Sitecore.Xml.Patch.XmlPatchNamespaces)">
            <summary>
            Determines the insert operation.
            </summary>
            <param name="node">The patchNode.</param>
            <param name="patchNamespaces">The patch namespaces.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatchHelper.BuildNamespaceForNode(Sitecore.Xml.Patch.IXmlElement)">
            <summary>
            Builds the namespace manager for the specified patchNode.
            </summary>
            <param name="node">The patchNode.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatchHelper.BuildPredicateForNodeAttributes(System.Collections.Generic.List{Sitecore.Xml.Patch.IXmlNode},System.Xml.XmlNamespaceManager)">
            <summary>
            Builds the predicate for patchNode attributes.
            </summary>
            <param name="queryAttributes">The query attributes.</param>
            <param name="nsManager">The namespace manager.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatchHelper.InsertNode(System.Xml.XmlNode,Sitecore.Xml.Patch.IXmlElement,Sitecore.Update.Xml.Patch.XmlPatchHelper.InsertOperation,System.Collections.Generic.Stack{Sitecore.Update.Xml.Patch.XmlPatchHelper.InsertOperation})">
            <summary>
            Inserts patchNode.
            </summary>
            <param name="target">The target patchNode.</param>
            <param name="node">The patch patchNode.</param>
            <param name="operation">The insert operation.</param>
            <param name="pendingOperations">The pending operations list.</param>
            <returns>Inserted patchNode.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatchHelper.ShouldInsertNode(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>
            Checks whether patch patchNode should be inserted.
            </summary>
            <param name="target">The target patchNode.</param>
            <param name="patch">The patch patchNode.</param>
            <returns>Value indicating whether patch patchNode should be inserted.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFilePatchHelper.ProcessConfigNode(System.Xml.XmlNode,Sitecore.Xml.Patch.IXmlElement)">
            <summary>
            Processes the config patchNode.
            </summary>
            <param name="target">The target.</param>
            <param name="command">The command.</param>
        </member>
        <member name="T:Sitecore.Update.Xml.Patch.ConfigFileXmlPatcher">
            <summary>
            
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.Patch.ConfigFileXmlPatcher.ns">
            <summary>
            The xml namespace.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.Patch.ConfigFileXmlPatcher.xmlHelper">
            <summary>
            The XML patch helper
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileXmlPatcher.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xml.Patch.XmlPatcher"/> class.
            </summary>
            <param name="setNamespace">The set namespace.</param>
            <param name="patchNamespace">The config namespace.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileXmlPatcher.#ctor(System.String,System.String,Sitecore.Update.Xml.Patch.XmlPatchHelper)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xml.Patch.XmlPatcher" /> class.
            </summary>
            <param name="setNamespace">The set namespace.</param>
            <param name="patchNamespace">The config namespace.</param>
            <param name="xmlHelper">The XML patch helper.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileXmlPatcher.#ctor(Sitecore.Xml.Patch.XmlPatchNamespaces,Sitecore.Update.Xml.Patch.XmlPatchHelper)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Xml.Patch.XmlPatcher" /> class.
            </summary>
            <param name="ns">The constant.</param>
            <param name="xmlHelper">The XML patch helper.</param>
        </member>
        <member name="P:Sitecore.Update.Xml.Patch.ConfigFileXmlPatcher.XmlHelper">
            <summary>
            Gets the XML patch helper.
            </summary>
            <value>
            The XML patch helper.
            </value>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileXmlPatcher.Merge(System.Xml.XmlNode,Sitecore.Xml.Patch.IXmlElement)">
            <summary>
            Merges the specified target.
            </summary>
            <param name="target">The target.</param>
            <param name="patch">The patch.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileXmlPatcher.Merge(System.Xml.XmlNode,System.Xml.XmlReader)">
            <summary>
            Merges the specified target.
            </summary>
            <param name="target">The target.</param>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.ConfigFileXmlPatcher.Merge(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>
            Merges the specified target.
            </summary>
            <param name="target">The target.</param>
            <param name="patch">The patch.</param>
        </member>
        <member name="T:Sitecore.Update.Xml.Patch.PatchPosition">
            <summary>
            Defines position in which the patch to be placed.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.Patch.PatchPosition.Undefined">
            <summary>
            The undefined position.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.Patch.PatchPosition.Beginning">
            <summary>
            The beginning position.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.Patch.PatchPosition.End">
            <summary>
            The end position.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.Patch.PatchPosition.After">
            <summary>
            The after position.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.Patch.PatchPosition.Before">
            <summary>
            The before position.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Xml.Patch.XmlPatchHelper">
            <summary>
            Provides some helper methods to work with Sitecore Xml patches.
            Note: the class has been copied from Kernel source code without any modifications. This was necessary to be able to upgrade previous Sitecore versions.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.XmlPatchHelper.AssignAttributes(System.Xml.XmlNode,System.Collections.Generic.IEnumerable{Sitecore.Xml.Patch.IXmlNode})">
            <summary>
            Assigns the attributes.
            </summary>
            <param name="target">The target.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.XmlPatchHelper.CopyAttributes(System.Xml.XmlNode,Sitecore.Xml.Patch.IXmlElement,Sitecore.Xml.Patch.XmlPatchNamespaces)">
            <summary>
            Copies the attributes.
            </summary>
            <param name="target">The target.</param>
            <param name="patch">The patch.</param>
            <param name="ns">The namespace.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.XmlPatchHelper.IsXmlPatch(System.String)">
            <summary>
            Determines whether the specified value is an XML patch.
            </summary>
            <param name="value">
            The value.
            </param>
            <returns>
            <c>true</c> if the specified value is an XML patch; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.XmlPatchHelper.MergeNodes(System.Xml.XmlNode,Sitecore.Xml.Patch.IXmlElement,Sitecore.Xml.Patch.XmlPatchNamespaces)">
            <summary>
            Merges the nodes.
            </summary>
            <param name="target">The target.</param>
            <param name="patch">The patch.</param>
            <param name="ns">The namespace.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.XmlPatchHelper.MergeChildren(System.Xml.XmlNode,Sitecore.Xml.Patch.IXmlElement,Sitecore.Xml.Patch.XmlPatchNamespaces,System.Boolean)">
            <summary>
            Appends the children.
            </summary>
            <param name="target">The target.</param>
            <param name="patch">The patch.</param>
            <param name="ns">The namespace.</param>
            <param name="targetWasInserted">if set to <c>true</c> means that <paramref name="target"/> has been inserted in the target document earlier by this patch.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.XmlPatchHelper.InsertChild(System.Xml.XmlNode,System.Xml.XmlNode,Sitecore.Update.Xml.Patch.XmlPatchHelper.InsertOperation)">
            <summary>
            Inserts the child.
            </summary>
            <param name="parent">The parent.</param>
            <param name="child">The child.</param>
            <param name="operation">The operation.</param>
            <returns>The insert child.</returns>
            <exception cref="T:System.Exception">Insert operation is not implemented</exception>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.XmlPatchHelper.ProcessConfigNode(System.Xml.XmlNode,Sitecore.Xml.Patch.IXmlElement)">
            <summary>
            Processes the config node.
            </summary>
            <param name="target">The target.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.XmlPatchHelper.AssignSource(System.Xml.XmlNode,System.Object,Sitecore.Xml.Patch.XmlPatchNamespaces)">
            <summary>
            Assigns modification source to the target element.
            </summary>
            <param name="target">An element in the target document.</param>
            <param name="source">Source to take information from. The object must implement <see cref="T:Sitecore.Xml.Patch.IXmlSource"/>.</param>
            <param name="ns">Namespace context.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.Patch.XmlPatchHelper.MakeName(System.String,System.String)">
            <summary>
            Makes the name.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="localName">Name of the local.</param>
            <returns>The full name.</returns>
        </member>
        <member name="T:Sitecore.Update.Xml.Patch.XmlPatchHelper.InsertOperation">
            <summary>
            The insert operation.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Xml.Patch.XmlPatchHelper.InsertOperation.Disposition">
            <summary>
            Gets or sets Disposition.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Xml.Patch.XmlPatchHelper.InsertOperation.Node">
            <summary>
            Gets or sets Node.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Xml.Patch.XmlPatchHelper.InsertOperation.Reference">
            <summary>
            Gets or sets Reference.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Xml.Patch.XmlPatchHelper.InsertOperation.Succeeded">
            <summary>
            Gets or sets a value indicating whether Succeeded.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Xml.XmlDiff">
            <summary>
            Represents diff between 2 xml files.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.XmlDiff.commands">
            <summary>
            Change XML commands.
            </summary>
        </member>
        <member name="P:Sitecore.Update.Xml.XmlDiff.Commands">
            <summary>
            Gets the commands.
            </summary>
            <value>The commands.</value>
        </member>
        <member name="M:Sitecore.Update.Xml.XmlDiff.AppendCommands(Sitecore.Update.Xml.XmlDiff)">
            <summary>
            Appends the commands.
            </summary>
            <param name="diff">The diff object.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.XmlDiff.AppendCommand(Sitecore.Update.Xml.BaseChangeXmlCommand)">
            <summary>
            Appends the command.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.XmlDiff.AppendCommands(System.Collections.Generic.IEnumerable{Sitecore.Update.Xml.BaseChangeXmlCommand})">
            <summary>
            Appends the commandList.
            </summary>
            <param name="commandList">The commands.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.XmlDiff.Serialize(System.String)">
            <summary>
            Serializes the instance to specified file path.
            </summary>
            <param name="filePath">The file path.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.XmlDiff.Serialize(System.Xml.XmlWriter,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Serializes the entity.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.XmlDiff.Load(System.Xml.XmlReader,Sitecore.Update.Configuration.SerializationContext)">
            <summary>
            Loads the entity.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Update.Xml.XmlDiffGenerator">
            <summary>
            Gdenerate a Diff between Xml files.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.XmlDiffGenerator.GenerateXmlDiff(System.String,System.String)">
            <summary>
            Generates the XML diff.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <returns>The Diff between source file and target file.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.XmlDiffGenerator.GenerateXmlDiff(System.Xml.XmlDocument,System.Xml.XmlDocument)">
            <summary>
            Generates the XML diff.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <returns>The Diff between source file and target file.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.XmlDiffGenerator.GenerateXmlDiff(Sitecore.Update.Xml.BaseXmlNode,Sitecore.Update.Xml.BaseXmlNode)">
            <summary>
            Generates the XML diff.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <returns>The Diff between source file and target file.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.XmlDiffGenerator.ProcessNotMatchedNodes(Sitecore.Update.Xml.BaseXmlNode@,Sitecore.Update.Xml.BaseXmlNode@)">
            <summary>
            Processes the not matched nodes.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <returns>The Xml Diff.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.XmlDiffGenerator.LoadDocument(System.String)">
            <summary>
            Loads the document.
            </summary>
            <param name="filePath">The file path.</param>
            <returns>The Xml document.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.XmlDiffGenerator.LoadDocument(System.String,System.Boolean)">
            <summary>
            Loads the document.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="preserveWhitespaces">if set to <c>true</c> whitespaces will be taken into considerations.</param>
            <returns>The XmlDocument.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.XmlDiffGenerator.ReadRootNode(System.String)">
            <summary>
            Reads the root node.
            </summary>
            <param name="filePath">The file path.</param>
            <returns>The root of the xml document.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.XmlDiffGenerator.CreateXmlReader(System.String)">
            <summary>
            Creates the XML reader.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Update.Xml.XmlElementNode">
            <summary>
            Repersents the XmlNodes of type Element, Document.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.XmlElementNode.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Xml.XmlElementNode"/> class.
            </summary>
            <param name="node">The original node.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.XmlElementNode.HasChildNodes">
            <summary>
            Determines whether current node has children.
            </summary>
            <returns>
              <c>true</c> if current node has child nodes; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.XmlElementNode.IsMatchAttributes(Sitecore.Update.Xml.BaseXmlNode)">
            <summary>
            Determines whether current and specified node have the same attribute set and its values.
            </summary>
            <param name="node">The xml node.</param>
            <returns>
              <c>true</c> if the specified node has the same attributes with the same values; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Update.Xml.XmlElementNode.GetNodeHash(System.Boolean)">
            <summary>
            Gets the node hash.
            </summary>
            <param name="deep">if set to <c>true</c> than we should consider inner text when clculating hash.</param>
            <returns>The node hash.</returns>
        </member>
        <member name="M:Sitecore.Update.Xml.XmlElementNode.GetNodeDefinitionHash">
            <summary>
            Gets the node definition hash.
            </summary>
            <returns>The node definition hash code.</returns>
        </member>
        <member name="T:Sitecore.Update.Xml.XmlMergeResultType">
            <summary>
            The merge result type.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.XmlMergeResultType.Success">
            <summary>
            Used when merge has been successful.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.XmlMergeResultType.Error">
            <summary>
            Used when Error has occurred during a merge. It is possible that merged file is not valid.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.XmlMergeResultType.Warning">
            <summary>
            Uses when some non-critic errors have occurred during a merge. It is possible that merged file is not valid.
            </summary>
        </member>
        <member name="T:Sitecore.Update.Xml.XmlMergeResult">
            <summary>
            Represents the result of merging.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.XmlMergeResult.resultType">
            <summary>
            The merge result type.
            </summary>
        </member>
        <member name="F:Sitecore.Update.Xml.XmlMergeResult.message">
            <summary>
            The merge message.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.XmlMergeResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Xml.XmlMergeResult"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.XmlMergeResult.#ctor(Sitecore.Update.Xml.XmlMergeResultType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Xml.XmlMergeResult"/> class.
            </summary>
            <param name="type">The merge result type.</param>
            <param name="message">The message.</param>
        </member>
        <member name="P:Sitecore.Update.Xml.XmlMergeResult.Type">
            <summary>
            Gets the type of the merge.
            </summary>
            <value>The type of the merge.</value>
        </member>
        <member name="P:Sitecore.Update.Xml.XmlMergeResult.Message">
            <summary>
            Gets the merge message.
            </summary>
            <value>The merge message.</value>
        </member>
        <member name="T:Sitecore.Update.Xml.XmlText">
            <summary>
            Represents XmlNode of type Comment, Text and CData.
            </summary>
        </member>
        <member name="M:Sitecore.Update.Xml.XmlText.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Update.Xml.XmlText"/> class.
            </summary>
            <param name="node">The original node.</param>
        </member>
        <member name="M:Sitecore.Update.Xml.XmlText.IsMatchNode(Sitecore.Update.Xml.BaseXmlNode)">
            <summary>
            Determines whether the specified node is the same that current one.
            </summary>
            <param name="node">The base Xml node.</param>
            <returns>
              <c>true</c> if the specified node is the same as curent one; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Sitecore.Shell.Upgrades.SC9Update">
            <summary>
            Upgrade steps that must be performed when upgrading to Sitecore 9.0+ versions.
            </summary>
            <seealso cref="T:Sitecore.Install.Framework.IPostStep" />
        </member>
        <member name="M:Sitecore.Shell.Upgrades.SC9Update.Run(Sitecore.Install.Framework.ITaskOutput,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Runs this post step
            </summary>
            <param name="output">The output.</param>
            <param name="metaData">The meta data.</param>
        </member>
        <member name="M:Sitecore.Shell.Upgrades.SC9Update.RemoveSocialSecurity(Sitecore.Install.Framework.ITaskOutput,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Removes the security roles related to removed social component.
            </summary>
            <param name="output">The output.</param>
            <param name="metaData">The meta data.</param>
        </member>
        <member name="M:Sitecore.Shell.Upgrades.SC9Update.RemoveRoleFromRole(System.String,System.String,Sitecore.Install.Framework.ITaskOutput,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Removes the role from role.
            </summary>
            <param name="roleName">Name of the role.</param>
            <param name="ownerRoleName">Name of the owner role.</param>
            <param name="output">The output.</param>
            <param name="metaData">The meta data.</param>
        </member>
        <member name="M:Sitecore.Shell.Upgrades.SC9Update.RemoveRole(System.String,Sitecore.Install.Framework.ITaskOutput,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Removes the role.
            </summary>
            <param name="roleName">Name of the role.</param>
            <param name="output">The output.</param>
            <param name="metaData">The meta data.</param>
        </member>
        <member name="M:Sitecore.SitecoreVersionInfo.op_Equality(Sitecore.SitecoreVersionInfo,Sitecore.SitecoreVersionInfo)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="a">a.</param>
            <param name="b">The b.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Sitecore.SitecoreVersionInfo.op_Inequality(Sitecore.SitecoreVersionInfo,Sitecore.SitecoreVersionInfo)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="a">a.</param>
            <param name="b">The b.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
    </members>
</doc>
